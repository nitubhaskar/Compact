on early-init
    start ueventd

on init

sysclktz 0

loglevel 1

# setup the global environment
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /mnt/sdcard
    export ASEC_MOUNTPOINT /mnt/asec
    export LOOP_MOUNTPOINT /mnt/obb
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/core-junit.jar

# Backward compatibility
    symlink /system/etc /etc
    symlink /sys/kernel/debug /d

# Right now vendor lives on the same filesystem as system,
# but someday that may change.
    symlink /system/vendor /vendor

# create mountpoints
    mkdir /mnt 0775 root system
    mkdir /mnt/sdcard 0000 system system

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

# Backwards Compat - XXX: Going away in G*
    symlink /mnt/sdcard /sdcard

    mkdir /system
    mkdir /data 0771 system system
    mkdir /cache 0770 system cache
    mkdir /config 0500 root root

    mkdir /sqlite_stmt_journals 01777 root root
    mount tmpfs tmpfs /sqlite_stmt_journals size=4m


    # Filesystem image public mount points.
    mkdir /mnt/obb 0700 root system
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0

# Create cgroup mount points for process groups
    mkdir /dev/cpuctl
    mount cgroup none /dev/cpuctl cpu
    chown system system /dev/cpuctl
    chown system system /dev/cpuctl/tasks
    chmod 0777 /dev/cpuctl/tasks
    write /dev/cpuctl/cpu.shares 1024

    mkdir /dev/cpuctl/fg_boost
    chown system system /dev/cpuctl/fg_boost/tasks
    chmod 0777 /dev/cpuctl/fg_boost/tasks
    write /dev/cpuctl/fg_boost/cpu.shares 1024

    mkdir /dev/cpuctl/bg_non_interactive
    chown system system /dev/cpuctl/bg_non_interactive/tasks
    chmod 0777 /dev/cpuctl/bg_non_interactive/tasks
    # 5.0 %
    write /dev/cpuctl/bg_non_interactive/cpu.shares 52

#FSR module
#    insmod fsr.ko
#    insmod fsr_stl.ko
#RFS module
#    insmod rfs_glue.ko
#    insmod rfs_fat.ko

on fs
# mount mtd partitions
    # Mount /system rw first to give the filesystem a chance to save a checkpoint
#    mount yaffs2 mtd@system /system
#    mount yaffs2 mtd@system /system ro remount
#    mount yaffs2 mtd@userdata /data nosuid nodev
#    mount yaffs2 mtd@cache /cache nosuid nodev

#    mount rfs /dev/stl9 /system check=no
#    mount rfs /dev/stl9 /system ro remount
#    mount rfs /dev/stl11 /data nosuid nodev check=no
#    mount rfs /dev/stl10 /cache nosuid nodev

    mount ext4 /dev/block/mmcblk0p7 /system
    mount ext4 /dev/block/mmcblk0p7 /system  ro remount
    mount ext4 /dev/block/mmcblk0p9 /data nosuid nodev
    mount ext4 /dev/block/mmcblk0p8 /cache nosuid nodev

#on post-fs
    # once everything is setup, no need to modify /
#    mount rootfs rootfs / ro remount

    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data

    # Create dump dir and collect dumps.
    # Do this before we mount cache so eventually we can use cache for
    # storing dumps on platforms which do not have a dedicated dump partition.

    mkdir /data/dontpanic
    chown root log /data/dontpanic
    chmod 0750 /data/dontpanic

    # Collect apanic data, free resources and re-arm trigger
    copy /proc/apanic_console /data/dontpanic/apanic_console
    chown root log /data/dontpanic/apanic_console
    chmod 0640 /data/dontpanic/apanic_console

    copy /proc/apanic_threads /data/dontpanic/apanic_threads
    chown root log /data/dontpanic/apanic_threads
    chmod 0640 /data/dontpanic/apanic_threads

# copy cp dump 
    copy /proc/cp_dump /data/dontpanic/cp_dump

    write /proc/apanic_console 1
    write /proc/cp_dump 1

    # Collect ramconsole data
    copy /proc/last_kmsg /data/dontpanic/last_kmsg
    chown root log /data/dontpanic/last_kmsg
    chmod 0640 /data/dontpanic/last_kmsg
    # Same reason as /data above
    chown system cache /cache
    chmod 0770 /cache

    # cache folder for bigger file than /cache
    mkdir /data/cache
    chown system cache /data/cache
    chmod 0770 /data/cache

    # This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

# create basic filesystem structure
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/vpn 0770 system system
    mkdir /data/misc/systemkeys 0700 system system
    mkdir /data/misc/vpn/profiles 0770 system system
    # give system access to wpa_supplicant.conf for backup and restore
    mkdir /data/misc/wifi 0770 wifi wifi
    mkdir /data/misc/radionv 0770 radio radio
    chmod 0770 /data/misc/radionv
    chmod 0770 /data/misc/wifi
    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/local 0771 shell shell
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root

    # create log system 
    mkdir /data/log 0777 system system
    chmod 0777 /data/log

    # anr mode chage
    mkdir /data/anr 0777 system system 
    chmod 0777 /data/anr

    chmod 0662 /dev/log/system
    chmod 0662 /dev/log/radio
    chmod 0662 /dev/log/events
    chmod 0662 /dev/log/main

    # create dalvik-cache and double-check the perms
    mkdir /data/dalvik-cache 0771 system system
    chown system system /data/dalvik-cache
    chmod 0771 /data/dalvik-cache

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770
    mkdir /cache/lost+found 0770

    # double check the perms, in case lost+found already exists, and set owner
    chown root root /data/lost+found
    chmod 0770 /data/lost+found
    chown root root /cache/lost+found
    chmod 0770 /cache/lost+found

    mkdir /data/data/.drm/ 0777


on boot
    chown system system /sys/class/backlight/sec-backlight/brightness
    chown system system /sys/class/timed_output/vibrator/enable

# set RLIMIT_NICE to allow priorities from 19 to -20
    setrlimit 13 40 40

## bootsnd
#    setprop audioflinger.bootsnd 1
## end of bootsnd

    # some critical attibute to make it work
    chmod 0777 /dev/bcm_kril
    chmod 0777 /dev/bcm_vsp
    chmod 0777 /dev/bcm_atc
    chmod 0666 /dev/bcm_alsa_voip
	chmod 0666 /dev/v3d
    insmod /system/lib/modules/memalloc.ko
    insmod /system/lib/modules/hx170dec.ko
    insmod /system/lib/modules/h6270enc.ko
	insmod /system/lib/modules/gememalloc.ko    
	insmod /system/lib/modules/ge_drv.ko   
    insmod /system/lib/modules/brcm_switch.ko
    insmod /system/lib/modules/bcm_headsetsw.ko
    chmod 0777 /dev/camera
    chmod 0777 /dev/ttyGS0

# for kexec
    chmod 755 /system/bin/kexec
    chmod 0771 /data
    chmod 0777 /data/kexec.sh

#runSysCmd
    mkdir /data/misc/runSysCmd 0777


# Define the oom_adj values for the classes of processes that can be
# killed by the kernel.  These are used in ActivityManagerService.
    setprop ro.FOREGROUND_APP_ADJ 0
    setprop ro.VISIBLE_APP_ADJ 1
    setprop ro.PERCEPTIBLE_APP_ADJ 2
    setprop ro.HEAVY_WEIGHT_APP_ADJ 3
    setprop ro.SECONDARY_SERVER_ADJ 4
    setprop ro.BACKUP_APP_ADJ 5
    setprop ro.HOME_APP_ADJ 6
    setprop ro.HIDDEN_APP_MIN_ADJ 7
    setprop ro.EMPTY_APP_ADJ 15

# Define the memory thresholds at which the above process classes will
# be killed.  These numbers are in pages (4k).
    setprop ro.FOREGROUND_APP_MEM 2048
    setprop ro.VISIBLE_APP_MEM 3072
    setprop ro.PERCEPTIBLE_APP_MEM 4096
    setprop ro.HEAVY_WEIGHT_APP_MEM 4096
    setprop ro.SECONDARY_SERVER_MEM 6144
    setprop ro.BACKUP_APP_MEM 6144
    setprop ro.HOME_APP_MEM 6144
    setprop ro.HIDDEN_APP_MEM 7168
    setprop ro.EMPTY_APP_MEM 8192
#    setprop ro.bt.bdaddr_path "/data/misc/bluetoothd/bt_addr"


# Poweroff charging mode: Should turn off Radio!!! 
# enable AIRPLANE mode
    setprop android.settings.AIRPLANE_MODE_SETTINGS  1

# Write value must be consistent with the above properties.
# Note that the driver only supports 6 slots, so we have combined some of
# the classes into the same memory level; the associated processes of higher
# classes will still be killed first.
    write /sys/module/lowmemorykiller/parameters/adj 0,1,2,4,7,15

    write /proc/sys/vm/overcommit_memory 1
    write /proc/sys/vm/min_free_order_shift 4
    write /sys/module/lowmemorykiller/parameters/minfree 2048,3072,4096,6144,7168,8192

    # Set init its forked children's oom_adj.
    write /proc/1/oom_adj -16

    # Tweak background writeout
    write /proc/sys/vm/dirty_expire_centisecs 200
    write /proc/sys/vm/dirty_background_ratio  5

    # Permissions for System Server and daemons.
    chown radio system /sys/android_power/state
    chown radio system /sys/android_power/request_state
    chown radio system /sys/android_power/acquire_full_wake_lock
    chown radio system /sys/android_power/acquire_partial_wake_lock
    chown radio system /sys/android_power/release_wake_lock
    chown radio system /sys/power/state
    chown radio system /sys/power/wake_lock
    chown radio system /sys/power/wake_unlock
    chmod 0660 /sys/power/state
    chmod 0660 /sys/power/wake_lock
    chmod 0660 /sys/power/wake_unlock
    chown system system /sys/class/leds/keyboard-backlight/brightness
    chown system system /sys/class/leds/lcd-backlight/brightness
    chown system system /sys/class/backlight/sec-backlight/brightness
    chown system system /sys/class/backlight/pwm-keypad-backlight.0/brightness
    chown root radio /proc/cmdline
    chown root radio /dev/bcm_kril
    chmod 0660 /dev/bcm_kril


# permissions for Sensor (accelerometer & magnetic & proximity)
    chown root system /dev/hscd_i2c
    chown root system /dev/alps_io
    chown root system /dev/bma222
    chown root system /dev/proximity
    chmod 0660 /dev/hscd_i2c
    chmod 0660 /dev/alps_io
    chmod 0660 /dev/bma222
    chmod 0660 /dev/proximity
    chown system system /sys/class/input/input0/enable
    chown system system /sys/class/input/input0/poll_delay
    chmod 0660 /sys/class/input/input0/enable
    chmod 0660 /sys/class/input/input0/poll_delay

    chown system system /sys/class/input/input1/enable
    chmod 0660 /sys/class/input/input1/enable

    chown system system /sys/kernel/ipv4/tcp_wmem_min
    chown system system /sys/kernel/ipv4/tcp_wmem_def
    chown system system /sys/kernel/ipv4/tcp_wmem_max
    chown system system /sys/kernel/ipv4/tcp_rmem_min
    chown system system /sys/kernel/ipv4/tcp_rmem_def
    chown system system /sys/kernel/ipv4/tcp_rmem_max

# Let wifi control BT_VREG_CTL GPIO
    chown wifi wifi /sys/class/gpio/gpio21/value
    chmod 0664 /sys/class/gpio/gpio21/value
    
#for GPS files
	chown gps system /dev/ttyS2
	chown gps system /dev/bcm_gps
	chown gps system /dev/bcm_cntin
	
#Audio 
    chmod 0660 /dev/bcm_alsa_voip
    chown radio system /dev/bcm_alsa_voip	

#for Bluetooth files
	chown root bluetooth /sys/class/rfkill/rfkill0
	chown root bluetooth /sys/class/rfkill/rfkill0/state
	chown root bluetooth /sys/class/rfkill/rfkill0/claim
	chown root bluetooth /sys/class/rfkill/rfkill0/soft
	chmod 0664 /sys/class/rfkill/rfkill0/state
	chmod 0664 /sys/class/rfkill/rfkill0/claim
	chmod 0664 /sys/class/rfkill/rfkill0/soft
	chown root net_bt_admin /sys/devices/system/cpu/cpufreq/bcm21553/dvfs
	chmod 0664 /sys/devices/system/cpu/cpufreq/bcm21553/dvfs
	chown root bluetooth /dev/ttyS1
	chmod 0660 /dev/ttyS1
  chown root bluetooth /sys/class/sound/controlC0/FMDirectPlay
  chmod 0664 /sys/class/sound/controlC0/FMDirectPlay
  
    class_start default

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    critical

service console /system/bin/sh
    console
    disabled
#    user shell
#    group log


on property:ro.secure=0
    start console
#    disabled

service ril-daemon /system/bin/rild
    socket rild stream 660 root radio
    socket rild-debug stream 660 radio system
    user root
    group radio cache inet misc audio sdcard_rw diag log

service dumpstate /system/bin/dumpstate -s
    socket dumpstate stream 0660 shell log
    disabled
    oneshot
# service charging /system/bin/poweroff_charging
service charging /system/bin/playlpm
service lpmkey /system/bin/charging_mode
				user root
				oneshot
				

