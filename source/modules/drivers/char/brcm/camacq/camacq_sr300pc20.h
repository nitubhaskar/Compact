/*.......................................................................................................
. COPYRIGHT (C)  SAMSUNG Electronics CO., LTD (Suwon, Korea). 2009           
. All rights are reserved. Reproduction and redistiribution in whole or 
. in part is prohibited without the written consent of the copyright owner.
. 
.   Developer:
.   Date:
.   Description:  
..........................................................................................................
*/

#if !defined(_CAMACQ_SR300PC20_H_)
#define _CAMACQ_SR300PC20_H_

/* Include */
#include "camacq_api.h"

/* Global */
#undef GLOBAL

#if !defined(_CAMACQ_API_C_)
#define GLOBAL extern
#else
#define GLOBAL
#endif /* _CAMACQ_API_C_ */

/* Include */
#if defined(WIN32)
#include "cmmfile.h"
#endif /* WIN32 */

/* Definition */
#define _SR300PC20_EVT0_    //sensor option

#define CAMACQ_MAIN_NAME         "cami2c_main"               // wingi
#define CAMACQ_MAIN_I2C_ID       0x2D	                // don't use now.
#define CAMACQ_MAIN_RES_TYPE   	 CAMACQ_SENSOR_MAIN   // main sensor

#define CAMACQ_MAIN_ISPROBED     0
#define CAMACQ_MAIN_CLOCK        0               
#define CAMACQ_MAIN_YUVORDER     0
#define CAMACQ_MAIN_V_SYNCPOL    0
#define CAMACQ_MAIN_H_SYNCPOL    0
#define CAMACQ_MAIN_SAMPLE_EDGE  0
#define CAMACQ_MAIN_FULL_RANGE   0

#define CAMACQ_MAIN_RST 
#define CAMACQ_MAIN_RST_MUX 
#define CAMACQ_MAIN_EN 
#define CAMACQ_MAIN_EN_MUX 

#define CAMACQ_MAIN_RST_ON          1
#define CAMACQ_MAIN_RST_OFF         0
#define CAMACQ_MAIN_EN_ON           1
#define CAMACQ_MAIN_EN_OFF          0
#define CAMACQ_MAIN_STANDBY_BEGIN  0
#define CAMACQ_MAIN_STANDBY_END	   1

#define CAMACQ_MAIN_POWER_CTRL(onoff)
 
#define CAMACQ_MAIN_2BYTE_SENSOR    1
#define CAMACQ_MAIN_AF              0
#define CAMACQ_MAIN_INT_MODE        0   // 0xAABBCCDD is INT_MODE, 0xAA, 0xBB, 0xCC, 0xDD is ARRAY MODE
#define CAMACQ_MAIN_FS_MODE         0
#define CAMACQ_MAIN_PATH_SET_FILE   "/sdcard/sensor/main/%s.dat"

#if (CAMACQ_MAIN_2BYTE_SENSOR)	
#define CAMACQ_MAIN_BURST_MODE 1
#define CAMACQ_MAIN_I2C_NUM_OF_BYTE 2//add for burst
#else
#define CAMACQ_MAIN_BURST_MODE 0
#define CAMACQ_MAIN_I2C_NUM_OF_BYTE 4//add for burst
#endif /* CAMACQ_MAIN2BYTE_SENSOR */

#define CAMACQ_MAIN_BURST_I2C_TRACE 0
#define CAMACQ_MAIN_BURST_MAX 300

#define CAMACQ_MAIN_REG_FLAG_BURST 	0x0E//add for burst

#define CAMACQ_MAIN_REG_FLAG_CNTS 	0x0F12
#define CAMACQ_MAIN_REG_DELAY 		0xFE                
#define CAMACQ_MAIN_BTM_OF_DATA 	{0xFF, 0xFF},       
#define CAMACQ_MAIN_END_MARKER 		0xFF                
#define CAMACQ_MAIN_REG_SET_SZ 		2 	// {0xFFFFFFFF} is 1, {0xFFFF,0xFFFF} is 2, {0xFF,0XFF} is 2, {0xFF,0xFF,0xFF,0xFF} is 4, {0xFFFF} is 1 
#define CAMACQ_MAIN_REG_DAT_SZ 		1   // {0xFFFFFFFF} is 4, {0xFFFF,0xFFFF} is 2, {0xFF,0XFF} is 1, {0xFF,0xFF,0xFF,0xFF} is 1, {0xFFFF} is 2 
#define CAMACQ_MAIN_FRATE_MIN  5
#define CAMACQ_MAIN_FRATE_MAX  30

// MACRO FUNCTIONS BEGIN //////////////////////////////////////////////////////////// 
#if (CAMACQ_MAIN_2BYTE_SENSOR)
#define CAMACQ_MAIN_EXT_RD_SZ 1
#else
#define CAMACQ_MAIN_EXT_RD_SZ 2
#endif /* CAMACQ_MAIN_2BYTE_SENSOR */

#if CAMACQ_MAIN_2BYTE_SENSOR
#define CAMACQ_MAIN_EXT_REG_IS_BTM_OF_DATA(A)		(((A[0]==CAMACQ_MAIN_END_MARKER) && (A[1]==CAMACQ_MAIN_END_MARKER))? 1:0)
#define CAMACQ_MAIN_EXT_REG_IS_DELAY(A)				((A[0]==CAMACQ_MAIN_REG_DELAY)? 1:0)
#define CAMACQ_MAIN_EXT_REG_IS_BURST(A)				(((A[0]==CAMACQ_MAIN_REG_FLAG_BURST) && (A[1]==0x01))? 1:0)
#define CAMACQ_MAIN_EXT_REG_IS_BURST_END(A)				(((A[0]==CAMACQ_MAIN_REG_FLAG_BURST) && (A[1]==0x00))? 1:0)
#define CAMACQ_MAIN_EXT_REG_IS_CNTS(A)				(((A[0]==CAMACQ_MAIN_REG_FLAG_BURST) && (A[1]==0x01))? 1:0)
//add for burst

#if (CAMACQ_MAIN_FS_MODE==1)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)\
memcpy(dest, &(srce[idx*CAMACQ_MAIN_REG_DAT_SZ*CAMACQ_MAIN_REG_SET_SZ]), CAMACQ_MAIN_REG_DAT_SZ*CAMACQ_MAIN_REG_SET_SZ);
#elif (CAMACQ_MAIN_REG_DAT_SZ==1)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)	dest[0] = (srce[idx][0] & 0xFF); dest[1] = (srce[idx][1] & 0xFF);
#elif (CAMACQ_MAIN_REG_DAT_SZ==2)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)	dest[0] = ((U8)(srce[idx] >> 8) & 0xFF); dest[1] = ((U8)(srce[idx]) & 0xFF);
#endif

#else // CAMACQ_MAIN_2BYTE_SENSOR

#define CAMACQ_MAIN_EXT_REG_IS_BTM_OF_DATA(A)		(((A[0]==CAMACQ_MAIN_END_MARKER) && (A[1]==CAMACQ_MAIN_END_MARKER) && \
(A[2]==CAMACQ_MAIN_END_MARKER) && (A[3]==CAMACQ_MAIN_END_MARKER))? 1:0)
#define CAMACQ_MAIN_EXT_REG_IS_DELAY(A)				(((A[0]==((CAMACQ_MAIN_REG_DELAY>>8) & 0xFF)) && (A[1]==(CAMACQ_MAIN_REG_DELAY & 0xFF)))? 1:0)
#define CAMACQ_MAIN_EXT_REG_IS_CNTS(A)				(((A[0]==((CAMACQ_MAIN_REG_FLAG_CNTS>>8) & 0xFF)) && (A[1]==(CAMACQ_MAIN_REG_FLAG_CNTS & 0xFF)))? 1:0)

#if (CAMACQ_MAIN_FS_MODE==1)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)\
memcpy(dest, &(srce[idx*CAMACQ_MAIN_REG_DAT_SZ*CAMACQ_MAIN_REG_SET_SZ]), CAMACQ_MAIN_REG_DAT_SZ*CAMACQ_MAIN_REG_SET_SZ);
#elif (CAMACQ_MAIN_REG_DAT_SZ==2)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)	dest[0]=((srce[idx][0] >> 8) & 0xFF); dest[1]=(srce[idx][0] & 0xFF); \
dest[2]=((srce[idx][1] >> 8) & 0xFF); dest[3]=(srce[idx][1] & 0xFF);
#elif (CAMACQ_MAIN_REG_DAT_SZ==1)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)	dest[0]=srce[idx][0]; dest[1]=srce[idx][1]; \
dest[2]=srce[idx][2]; dest[3]=srce[idx][3];
#elif (CAMACQ_MAIN_REG_DAT_SZ==4)
#define CAMACQ_MAIN_EXT_REG_GET_DATA(dest,srce,idx)	dest[0] = ((U8)(srce[idx] >> 24) & 0xFF); dest[1] = ((U8)(srce[idx] >> 16) & 0xFF); \
dest[2] = ((U8)(srce[idx] >> 8) & 0xFF); dest[3] = ((U8)(srce[idx]) & 0xFF);			
#endif
#endif /* CAMACQ_2BYTE_SENSOR */
// MACRO FUNCTIONS END /////////////////////////////////////////////////////////// 


/* DEFINE for sensor regs*/
#if( CAMACQ_MAIN_FS_MODE )
#define CAMACQ_MAIN_REG_INIT            "INIT"
#define CAMACQ_MAIN_REG_PREVIEW         "PREVIEW"
#define CAMACQ_MAIN_REG_SNAPSHOT        "SNAPSHOT"
#define CAMACQ_MAIN_REG_CAMCORDER        "CAMCORDER"

#define CAMACQ_MAIN_REG_WB_AUTO                 "WB_AUTO"
#define CAMACQ_MAIN_REG_WB_DAYLIGHT             "WB_DAYLIGHT"
#define CAMACQ_MAIN_REG_WB_CLOUDY               "WB_CLOUDY"
#define CAMACQ_MAIN_REG_WB_INCANDESCENT         "WB_INCANDESCENT"
#define CAMACQ_MAIN_REG_WB_FLUORESCENT         "WB_FLUORESCENT"

#define CAMACQ_MAIN_REG_NIGHTSHOT               "NIGHTSHOT" //swsw_for vendor request
#define CAMACQ_MAIN_REG_SCENE_AUTO              "SCENE_AUTO" 
#define CAMACQ_MAIN_REG_SCENE_NIGHT             "SCENE_NIGHT"
#define CAMACQ_MAIN_REG_SCENE_NIGHT_DARK        "SCENE_NIGHT_DARK"
#define CAMACQ_MAIN_REG_SCENE_LANDSCAPE         "SCENE_LANDSCAPE"
#define CAMACQ_MAIN_REG_SCENE_PORTRAIT          "SCENE_PORTRAIT"
#define CAMACQ_MAIN_REG_SCENE_SPORTS            "SCENE_SPORTS"
#define CAMACQ_MAIN_REG_SCENE_INDOOR            "SCENE_INDOOR"
#define CAMACQ_MAIN_REG_SCENE_SUNSET            "SCENE_SUNSET"
#define CAMACQ_MAIN_REG_SCENE_SUNRISE           "SCENE_SUNRISE"    // dawn
#define CAMACQ_MAIN_REG_SCENE_BEACH             "SCENE_BEACH"
#define CAMACQ_MAIN_REG_SCENE_FALLCOLOR         "SCENE_FALLCOLOR"
#define CAMACQ_MAIN_REG_SCENE_FIREWORKS         "SCENE_FIREWORKS"
#define CAMACQ_MAIN_REG_SCENE_CANDLELIGHT       "SCENE_CANDLELIGHT"
#define CAMACQ_MAIN_REG_SCENE_AGAINSTLIGHT      "SCENE_AGAINSTLIGHT"  // backlight

#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_0      "BRIGHTNESS_LEVEL_0"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_1      "BRIGHTNESS_LEVEL_1"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_2      "BRIGHTNESS_LEVEL_2"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_3      "BRIGHTNESS_LEVEL_3"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_4      "BRIGHTNESS_LEVEL_4"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_5      "BRIGHTNESS_LEVEL_5"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_6      "BRIGHTNESS_LEVEL_6"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_7      "BRIGHTNESS_LEVEL_7"
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_8      "BRIGHTNESS_LEVEL_8"

#define CAMACQ_MAIN_REG_METER_MATRIX            "METER_MATRIX"
#define CAMACQ_MAIN_REG_METER_CW                "METER_CW"
#define CAMACQ_MAIN_REG_METER_SPOT              "METER_SPOT"

#define CAMACQ_MAIN_REG_EFFECT_NONE             "EFFECT_NONE"
#define CAMACQ_MAIN_REG_EFFECT_GRAY             "EFFECT_GRAY" // mono, blackwhite
#define CAMACQ_MAIN_REG_EFFECT_NEGATIVE         "EFFECT_NEGATIVE"
#define CAMACQ_MAIN_REG_EFFECT_SEPIA            "EFFECT_SEPIA"

#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_M2              "CONTRAST_M2"
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_M1              "CONTRAST_M1"
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_DEFAULT         "CONTRAST_DEFAULT"
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_P1              "CONTRAST_P1"
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_P2              "CONTRAST_P2"

#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_M2             "SHARPNESS_M2"
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_M1             "SHARPNESS_M1"
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_DEFAULT        "SHARPNESS_DEFAULT"
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_P1             "SHARPNESS_P1"
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_P2             "SHARPNESS_P2"

#define CAMACQ_MAIN_REG_ADJUST_SATURATION_M2            "SATURATION_M2"
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_M1            "SATURATION_M1"
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_DEFAULT       "SATURATION_DEFAULT"
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_P1            "SATURATION_P1"
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_P2            "SATURATION_P2"

#else
#define CAMACQ_MAIN_REG_INIT            reg_main_init
#define CAMACQ_MAIN_REG_PREVIEW         reg_main_preview
#define CAMACQ_MAIN_REG_SNAPSHOT        reg_main_snapshot
#define CAMACQ_MAIN_REG_CAMCORDER      reg_main_camcorder

#define CAMACQ_MAIN_REG_WB_AUTO                 reg_main_wb_auto
#define CAMACQ_MAIN_REG_WB_DAYLIGHT             reg_main_wb_daylight
#define CAMACQ_MAIN_REG_WB_CLOUDY               reg_main_wb_cloudy
#define CAMACQ_MAIN_REG_WB_INCANDESCENT         reg_main_wb_incandescent
#define CAMACQ_MAIN_REG_WB_FLUORESCENT          reg_main_wb_fluorescent


#define CAMACQ_MAIN_REG_NIGHTSHOT               reg_main_nightshot
#define CAMACQ_MAIN_REG_SCENE_AUTO              reg_main_scene_auto  // auto, off
#define CAMACQ_MAIN_REG_SCENE_NIGHT             reg_main_scene_night
#define CAMACQ_MAIN_REG_SCENE_NIGHT_DARK        reg_main_scene_night_dark
#define CAMACQ_MAIN_REG_SCENE_LANDSCAPE         reg_main_scene_landscape
#define CAMACQ_MAIN_REG_SCENE_PORTRAIT          reg_main_scene_portrait
#define CAMACQ_MAIN_REG_SCENE_SPORTS            reg_main_scene_sports
#define CAMACQ_MAIN_REG_SCENE_INDOOR            reg_main_scene_indoor
#define CAMACQ_MAIN_REG_SCENE_SUNSET            reg_main_scene_sunset
#define CAMACQ_MAIN_REG_SCENE_SUNRISE           reg_main_scene_sunrise    // dawn
#define CAMACQ_MAIN_REG_SCENE_BEACH             reg_main_scene_beach
#define CAMACQ_MAIN_REG_SCENE_FALLCOLOR         reg_main_scene_fallcolor
#define CAMACQ_MAIN_REG_SCENE_FIREWORKS         reg_main_scene_fireworks
#define CAMACQ_MAIN_REG_SCENE_CANDLELIGHT       reg_main_scene_candlelight
#define CAMACQ_MAIN_REG_SCENE_AGAINSTLIGHT      reg_main_scene_againstlight  // backlight

#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_0      reg_main_brightness_level_0
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_1      reg_main_brightness_level_1
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_2      reg_main_brightness_level_2
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_3      reg_main_brightness_level_3
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_4      reg_main_brightness_level_4
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_5      reg_main_brightness_level_5
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_6      reg_main_brightness_level_6
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_7      reg_main_brightness_level_7
#define CAMACQ_MAIN_REG_BRIGHTNESS_LEVEL_8      reg_main_brightness_level_8

#define CAMACQ_MAIN_REG_METER_MATRIX            reg_main_meter_matrix
#define CAMACQ_MAIN_REG_METER_CW                reg_main_meter_cw
#define CAMACQ_MAIN_REG_METER_SPOT              reg_main_meter_spot

#define CAMACQ_MAIN_REG_EFFECT_NONE             reg_main_effect_none
#define CAMACQ_MAIN_REG_EFFECT_GRAY             reg_main_effect_gray // mono, blackwhite
#define CAMACQ_MAIN_REG_EFFECT_NEGATIVE         reg_main_effect_negative
#define CAMACQ_MAIN_REG_EFFECT_SEPIA            reg_main_effect_sepia

#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_M2              reg_main_adjust_contrast_m2
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_M1              reg_main_adjust_contrast_m1
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_DEFAULT         reg_main_adjust_contrast_default
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_P1              reg_main_adjust_contrast_p1
#define CAMACQ_MAIN_REG_ADJUST_CONTRAST_P2              reg_main_adjust_contrast_p2

#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_M2             reg_main_adjust_sharpness_m2
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_M1             reg_main_adjust_sharpness_m1
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_DEFAULT        reg_main_adjust_sharpness_default
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_P1             reg_main_adjust_sharpness_p1
#define CAMACQ_MAIN_REG_ADJUST_SHARPNESS_P2             reg_main_adjust_sharpness_p2

#define CAMACQ_MAIN_REG_ADJUST_SATURATION_M2            reg_main_adjust_saturation_m2
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_M1            reg_main_adjust_saturation_m1
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_DEFAULT       reg_main_adjust_saturation_default
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_P1            reg_main_adjust_saturation_p1
#define CAMACQ_MAIN_REG_ADJUST_SATURATION_P2            reg_main_adjust_saturation_p2
#endif


#define CAMACQ_MAIN_REG_MIDLIGHT                reg_main_midlight
#define CAMACQ_MAIN_REG_LOWLIGHT                reg_main_lowlight
#define CAMACQ_MAIN_REG_NIGHTSHOT_ON            reg_main_nightshot_on
#define CAMACQ_MAIN_REG_NIGHTSHOT_OFF           reg_main_nightshot_off

#define CAMACQ_MAIN_REG_WB_TWILIGHT             reg_main_wb_twilight
#define CAMACQ_MAIN_REG_WB_TUNGSTEN             reg_main_wb_tungsten
#define CAMACQ_MAIN_REG_WB_OFF                  reg_main_wb_off
#define CAMACQ_MAIN_REG_WB_HORIZON              reg_main_wb_horizon
#define CAMACQ_MAIN_REG_WB_SHADE                reg_main_wb_shade

#define CAMACQ_MAIN_REG_EFFECT_SOLARIZE         reg_main_effect_solarize
#define CAMACQ_MAIN_REG_EFFECT_POSTERIZE        reg_main_effect_posterize
#define CAMACQ_MAIN_REG_EFFECT_WHITEBOARD       reg_main_effect_whiteboard
#define CAMACQ_MAIN_REG_EFFECT_BLACKBOARD       reg_main_effect_blackboard
#define CAMACQ_MAIN_REG_EFFECT_AQUA             reg_main_effect_aqua
#define CAMACQ_MAIN_REG_EFFECT_SHARPEN          reg_main_effect_sharpen
#define CAMACQ_MAIN_REG_EFFECT_VIVID            reg_main_effect_vivid
#define CAMACQ_MAIN_REG_EFFECT_GREEN            reg_main_effect_green
#define CAMACQ_MAIN_REG_EFFECT_SKETCH           reg_main_effect_sketch


#define CAMACQ_MAIN_REG_FLIP_NONE               reg_main_flip_none
#define CAMACQ_MAIN_REG_FLIP_WATER              reg_main_flip_water
#define CAMACQ_MAIN_REG_FLIP_MIRROR             reg_main_flip_mirror
#define CAMACQ_MAIN_REG_FLIP_WATER_MIRROR       reg_main_flip_water_mirror


#define CAMACQ_MAIN_REG_FPS_FIXED_5             reg_main_fps_fixed_5
#define CAMACQ_MAIN_REG_FPS_FIXED_7             reg_main_fps_fixed_7
#define CAMACQ_MAIN_REG_FPS_FIXED_10            reg_main_fps_fixed_10
#define CAMACQ_MAIN_REG_FPS_FIXED_15            reg_main_fps_fixed_15
#define CAMACQ_MAIN_REG_FPS_FIXED_20            reg_main_fps_fixed_20
#define CAMACQ_MAIN_REG_FPS_FIXED_25            reg_main_fps_fixed_25
#define CAMACQ_MAIN_REG_FPS_VAR_15              reg_main_fps_var_15
#define CAMACQ_MAIN_REG_FPS_FIXED_30            reg_main_fps_fixed_30


#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_0 reg_main_expcompensation_level_0
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_1 reg_main_expcompensation_level_1
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_2 reg_main_expcompensation_level_2
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_3 reg_main_expcompensation_level_3
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_4 reg_main_expcompensation_level_4
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_5 reg_main_expcompensation_level_5
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_6 reg_main_expcompensation_level_6
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_7 reg_main_expcompensation_level_7
#define CAMACQ_MAIN_REG_EXPCOMPENSATION_LEVEL_8 reg_main_expcompensation_level_8

#define CAMACQ_MAIN_REG_SET_AF                  reg_main_set_af  // start af
#define CAMACQ_MAIN_REG_OFF_AF                  reg_main_off_af
#define CAMACQ_MAIN_REG_CHECK_AF                reg_main_check_af
#define CAMACQ_MAIN_REG_RESET_AF                reg_main_reset_af
#define CAMACQ_MAIN_REG_MANUAL_AF               reg_main_manual_af    // normal_af
#define CAMACQ_MAIN_REG_MACRO_AF                reg_main_macro_af
#define CAMACQ_MAIN_REG_RETURN_MANUAL_AF        reg_main_return_manual_af
#define CAMACQ_MAIN_REG_RETURN_MACRO_AF         reg_main_return_macro_af
#define CAMACQ_MAIN_REG_SET_AF_NLUX             reg_main_set_af_nlux
#define CAMACQ_MAIN_REG_SET_AF_LLUX             reg_main_set_af_llux
#define CAMACQ_MAIN_REG_SET_AF_NORMAL_MODE_1    reg_main_set_af_normal_mode_1
#define CAMACQ_MAIN_REG_SET_AF_NORMAL_MODE_2    reg_main_set_af_normal_mode_2
#define CAMACQ_MAIN_REG_SET_AF_NORMAL_MODE_3    reg_main_set_af_normal_mode_3
#define CAMACQ_MAIN_REG_SET_AF_MACRO_MODE_1     reg_main_set_af_macro_mode_1
#define CAMACQ_MAIN_REG_SET_AF_MACRO_MODE_2     reg_main_set_af_macro_mode_2
#define CAMACQ_MAIN_REG_SET_AF_MACRO_MODE_3     reg_main_set_af_macro_mode_3

#define CAMACQ_MAIN_REG_ISO_AUTO                reg_main_iso_auto
#define CAMACQ_MAIN_REG_ISO_50                  reg_main_iso_50
#define CAMACQ_MAIN_REG_ISO_100                 reg_main_iso_100
#define CAMACQ_MAIN_REG_ISO_200                 reg_main_iso_200
#define CAMACQ_MAIN_REG_ISO_400                 reg_main_iso_400
#define CAMACQ_MAIN_REG_ISO_800                 reg_main_iso_800
#define CAMACQ_MAIN_REG_ISO_1600                reg_main_iso_1600
#define CAMACQ_MAIN_REG_ISO_3200                reg_main_iso_3200


#define CAMACQ_MAIN_REG_SCENE_PARTY             reg_main_scene_party
#define CAMACQ_MAIN_REG_SCENE_SNOW              reg_main_scene_snow
#define CAMACQ_MAIN_REG_SCENE_TEXT              reg_main_scene_text

#define CAMACQ_MAIN_REG_QQVGA                   reg_main_qqvga
#define CAMACQ_MAIN_REG_QCIF                    reg_main_qcif
#define CAMACQ_MAIN_REG_QVGA                    reg_main_qvga
#define CAMACQ_MAIN_REG_WQVGA                    reg_main_wqvga
#define CAMACQ_MAIN_REG_CIF                     reg_main_cif
#define CAMACQ_MAIN_REG_VGA                     reg_main_vga
#define CAMACQ_MAIN_REG_WVGA                     reg_main_wvga // 800* 480
#define CAMACQ_MAIN_REG_SVGA                    reg_main_svga
#define CAMACQ_MAIN_REG_SXGA                    reg_main_sxga
#define CAMACQ_MAIN_REG_QXGA                    reg_main_qxga
#define CAMACQ_MAIN_REG_UXGA                    reg_main_uxga
#define CAMACQ_MAIN_REG_FULL_YUV                reg_main_full_yuv
#define CAMACQ_MAIN_REG_CROP_YUV                reg_main_crop_yuv
#define CAMACQ_MAIN_REG_QVGA_V		            reg_main_qvga_v
#define CAMACQ_MAIN_REG_HALF_VGA_V	            reg_main_half_vga_v
#define CAMACQ_MAIN_REG_HALF_VGA		        reg_main_half_vga	
#define CAMACQ_MAIN_REG_VGA_V		            reg_main_vga_v			
#define CAMACQ_MAIN_REG_5M			            reg_main_5M
#define CAMACQ_MAIN_REG_1080P		            reg_main_1080P
#define CAMACQ_MAIN_REG_720P			        reg_main_720P
#define CAMACQ_MAIN_REG_NOT                     reg_main_not

#define CAMACQ_MAIN_REG_JPEG_5M                 reg_main_jpeg_5m        //2560X1920
#define CAMACQ_MAIN_REG_JPEG_5M_2               reg_main_jpeg_5m_2      // 2592X1944
#define CAMACQ_MAIN_REG_JPEG_W4M                 reg_main_jpeg_w4m      // 2560x1536
#define CAMACQ_MAIN_REG_JPEG_3M                 reg_main_jpeg_3m        // QXGA 2048X1536
#define CAMACQ_MAIN_REG_JPEG_2M                 reg_main_jpeg_2m        // UXGA 1600x1200
#define CAMACQ_MAIN_REG_JPEG_W1_5M               reg_main_jpeg_w1_5m    // 1280x960
#define CAMACQ_MAIN_REG_JPEG_1M                 reg_main_jpeg_1m
#define CAMACQ_MAIN_REG_JPEG_VGA                reg_main_jpeg_vga   //640x480
#define CAMACQ_MAIN_REG_JPEG_WQVGA              reg_main_jpeg_wqvga //420x240
#define CAMACQ_MAIN_REG_JPEG_QVGA               reg_main_jpeg_qvga  //320x240

#define CAMACQ_MAIN_REG_FLICKER_DISABLED        reg_main_flicker_disabled
#define CAMACQ_MAIN_REG_FLICKER_50HZ            reg_main_flicker_50hz
#define CAMACQ_MAIN_REG_FLICKER_60HZ            reg_main_flicker_60hz
#define CAMACQ_MAIN_REG_FLICKER_AUTO            reg_main_flicker_auto

// image quality
#define CAMACQ_MAIN_REG_JPEG_QUALITY_SUPERFINE reg_main_jpeg_quality_superfine
#define CAMACQ_MAIN_REG_JPEG_QUALITY_FINE      reg_main_jpeg_quality_fine
#define CAMACQ_MAIN_REG_JPEG_QUALITY_NORMAL    reg_main_jpeg_quality_normal

// Private Control
#define CAMACQ_MAIN_REG_PRIVCTRL_RETURNPREVIEW  reg_main_priv_ctrl_returnpreview

// Format
#define CAMACQ_MAIN_REG_FMT_YUV422 	            reg_main_fmt_yuv422
#define CAMACQ_MAIN_REG_FMT_JPG		            reg_main_fmt_jpg


// NEW
#define CAMACQ_MAIN_REG_SLEEP                   reg_main_sleep
#define CAMACQ_MAIN_REG_WAKEUP                  reg_main_wakeup

/* Enumeration */

/* Global Value */

GLOBAL const U8 reg_main_sleep[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


GLOBAL const U8 reg_main_wakeup[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_init[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00},
{0x01, 0xf1},

{0x01, 0xf1},
{0x01, 0xf3},
{0x01, 0xf1},
{0x02, 0x7f}, //pad divility set

///////////////////////////////////////////
// 0 Page PLL setting
///////////////////////////////////////////
{0x03, 0x00},
{0x07, 0x25}, //24/(5+1) = 4Mhz
{0x08, 0x6c}, //108Mhz
{0x09, 0x82},
{0x07, 0xa5},
{0x07, 0xa5},
{0x09, 0xa2}, //clock divider enable

{0x0A, 0x01}, //MCU hardware reset
{0x0A, 0x00},
{0x0A, 0x01},
{0x0A, 0x00},
///////////////////////////////////////////
// 20 Page OTP/ROM LSC download select setting
///////////////////////////////////////////
{0x03, 0x20},
{0x3a, 0x00},
{0x3b, 0x00},
{0x3c, 0x00},

///////////////////////////////////////////
// 30 Page MCU reset and configration
///////////////////////////////////////////
{0x03, 0x30},
{0x30, 0x86},
{0x31, 0x00},
{0x32, 0x0c},
{0xe0, 0x00},
{0x10, 0x80}, // mcu reset high
{0x10, 0x8a}, // mcu enable high
{0x11, 0x08}, // xdata memory reset high
{0x11, 0x00}, // xdata memory reset low

///////////////////////////////////////////
// Copy OTP register to Xdata.
///////////////////////////////////////////
{0x03, 0x07}, // otp page
{0x12, 0x01}, // memory mux on(mcu)
//108M
{0x40, 0x35}, // otp_cfg1 value is different by PLLMCLK
{0x47, 0x0B}, // otp_cfg8 value is different by PLLMCLK
//DPC reg in otp down to xdata
{0x2E, 0x00}, // OTP (DPC block) start addr h(OTP DPC -> xdata DPC)
{0x2F, 0x20}, // OTP (DPC block) start addr l
{0x30, 0x00}, // MCU (DPC block) sram addr h(OTP DPC -> xdata DPC)
{0x31, 0xD6}, // MCU (DPC block) sram addr l
{0x32, 0x00}, // Copy reg sram size h(DPC reg size)
{0x33, 0xFF}, // Copy reg sram size l
{0x10, 0x02}, // Copy mcu down set(OTP DPC -> xdata DPC)
{0x8C, 0x08}, //OTP DPC pos offset
{0x8F, 0x20},
{0x92, 0x00},
{0x93, 0x54}, //Full size normal No_flip case
{0x94, 0x00},
{0x95, 0x11}, //Full size normal No_flip case
{0xfe, 0x32}, //Delay 50ms
// Color ratio reg in otp down to xdata
{0x2E, 0x03}, // OTP (ColorRatio block) start addr h(OTP ColorRatio->xdata ColorRatio)
{0x2F, 0x20}, // OTP (ColorRatio block) start addr l
{0x30, 0x20}, // MCU(ColorRatio block) sram addr h(OTP ColorRatio->xdata ColorRatio)
{0x31, 0xA6}, // MCU (ColorRatio block) sram addr l
{0x32, 0x01}, // Copy reg sram size h(MCU reg size)
{0x33, 0x00}, // Copy reg sram size l
{0x10, 0x02}, // Copy mcu down set(OTP ColorRatio -> xdata ColorRatio)
{0xfe, 0x32}, //Delay 50ms
{0x12, 0x00}, // memory mux off
{0x98, 0x00}, // dpc_mem_ctl1
{0x97, 0x01}, // otp_dpc_ctl1

///////////////////////////////////////////
// 30 Page MCU reset, enable setting
///////////////////////////////////////////
{0x03, 0x30},
{0x10, 0x0a}, // mcu on div 1/3, MCU=36Mhz
///////////////////////////////////////////
// 0 Page
///////////////////////////////////////////
{0x03, 0x00},
{0x0B, 0x02}, //PLL lock time
{0x10, 0x00}, //Full
{0x11, 0x80}, //0 frame skip
{0x13, 0x80},
{0x14, 0x30},
{0x15, 0x03},
{0x17, 0x20}, //Parallel, MIPI : 04, JPEG : 0c
{0x20, 0x00}, //Start Height
{0x21, 0x04},
{0x22, 0x00}, //Start Width
{0x23, 0x0a},

{0x24, 0x06}, //Height Size
{0x25, 0x00},
{0x26, 0x08}, //Widht Size
{0x27, 0x00},

{0x50, 0x01}, // HBLANK 2180 + 320 = 2500
{0x51, 0x40},

{0x52, 0x00}, //VBLANK >= 33
{0x53, 0x21},

//BLC
{0x80, 0x02},
{0x81, 0x87},
{0x82, 0x28},
{0x83, 0x08},
{0x84, 0x8c},
{0x85, 0x0c},//blc on
{0x86, 0x00},
{0x87, 0x00},
{0x88, 0x98},
{0x89, 0x10},
{0x8a, 0x80},
{0x8b, 0x00},
{0x8e, 0x80},
{0x8f, 0x0f},
{0x90, 0x0f}, //BLC_TIME_TH_ON
{0x91, 0x0f}, //BLC_TIME_TH_OFF
{0x92, 0xa0}, //BLC_AG_TH_ON
{0x93, 0x90}, //BLC_AG_TH_OFF
{0x96, 0xfe}, //BLC_OUT_TH
{0x97, 0xE0}, //BLC_OUT_TH
{0x98, 0x20},
{0xa1, 0x82}, //odd_adj_out
{0xa2, 0x83}, //odd_adj_in
{0xa3, 0x87}, //odd_adj_dark
{0xa5, 0x82}, //even_adj_out
{0xa6, 0x83}, //even_adj_in
{0xa7, 0x87}, //even_adj_dark
{0xbb, 0x20},

///////////////////////////////////////////
// 2 Page
///////////////////////////////////////////
{0x03, 0x02},
{0x1a, 0x00}, //adaptive dcdc off
{0x20, 0x33},
{0x21, 0x01},
{0x22, 0x22},
{0x23, 0x30},
{0x24, 0x33},
{0x27, 0x77},
{0x31, 0xf0},
{0x32, 0x22},
{0x33, 0x02},
{0x34, 0x30},
{0x35, 0x00},
{0x36, 0x08},
{0x37, 0x20},
{0x40, 0x01},
{0x41, 0x8a},
{0x42, 0x00},
{0x48, 0x3C},
{0x49, 0x10},
{0x54, 0xc0},
{0x55, 0x40},
{0x5b, 0x00},
{0x78, 0x02},
{0x79, 0x36},
{0x7a, 0x02},
{0x7b, 0x3a},
{0xa0, 0x01},
{0xa1, 0xc4},
{0xa2, 0x02},
{0xa3, 0xde},
{0xa4, 0x03},
{0xa5, 0x3b},
{0xa6, 0x08},
{0xa7, 0xee},
{0xa8, 0x00},
{0xa9, 0xcd},
{0xaa, 0x01},
{0xab, 0xba},
{0xac, 0x02},
{0xad, 0x8a},
{0xae, 0x05},
{0xaF, 0x96},
{0xb0, 0x00},
{0xb1, 0x76},
{0xb2, 0x00},
{0xb3, 0xe6},
{0xb4, 0x00},
{0xb5, 0x2d},
{0xb6, 0x01},
{0xb7, 0xb8},
{0xb8, 0x00},
{0xb9, 0x67},
{0xba, 0x00},
{0xbb, 0xe7},
{0xbc, 0x00},
{0xbd, 0x03},
{0xbe, 0x03},
{0xbF, 0x01},
{0xc0, 0x00},
{0xc1, 0x76},
{0xc2, 0x00},
{0xc3, 0xe8},
{0xc4, 0x00},
{0xc5, 0x2d},
{0xc6, 0x01},
{0xc7, 0xba},
{0xc8, 0x00},
{0xc9, 0x67},
{0xca, 0x00},
{0xcb, 0xeb},
{0xcc, 0x00},
{0xcd, 0x03},
{0xce, 0x03},
{0xcF, 0x05},
//DCDC //
{0xd4, 0x0f}, //DCDC_TIME_TH_ON//
{0xd5, 0x0f}, //DCDC_TIME_TH_OFF//
{0xd6, 0xa8}, //DCDC_AG_TH_ON//
{0xd7, 0xa0}, //DCDC_AG_TH_OFF//
{0xEF, 0x65},
{0xF0, 0x0c},
{0xF4, 0x0a},
/////////////////////////////////////////////
// 3 Page
/////////////////////////////////////////////
{0x03, 0x03},
{0x10, 0x00},
{0x11, 0xdc},
{0x12, 0x00},
{0x13, 0x82},
{0x14, 0x02},
{0x15, 0xd3},
{0x16, 0x02},
{0x17, 0xdb},
{0x18, 0x01},
{0x19, 0x19},
{0x1a, 0x02},
{0x1b, 0x3c},
{0x1c, 0x01},
{0x1d, 0x19},
{0x1e, 0x02},
{0x1F, 0x3c},
{0x20, 0x01},
{0x21, 0x19},
{0x22, 0x01},
{0x23, 0x4a},
{0x24, 0x01},
{0x25, 0x19},
{0x26, 0x01},
{0x27, 0x4a},
{0x28, 0x01},
{0x29, 0x19},
{0x2a, 0x01},
{0x2b, 0x4b},
{0x2c, 0x01},
{0x2d, 0x19},
{0x2e, 0x01},
{0x2F, 0x4b},
{0x30, 0x00},
{0x31, 0x01},
{0x32, 0x05},
{0x33, 0xb1},
{0x34, 0x00},
{0x35, 0x01},
{0x36, 0x05},
{0x37, 0xb1},
{0x38, 0x00},
{0x39, 0x01},
{0x3a, 0x03},
{0x3b, 0x1d},
{0x3c, 0x00},
{0x3d, 0x01},
{0x3e, 0x03},
{0x3F, 0x05},
{0x40, 0x00},
{0x41, 0x04},
{0x42, 0x00},
{0x43, 0x44},
{0x44, 0x00},
{0x45, 0x02},
{0x46, 0x00},
{0x47, 0x73},
{0x48, 0x00},
{0x49, 0x06},
{0x4a, 0x00},
{0x4b, 0x42},
{0x4c, 0x00},
{0x4d, 0x06},
{0x4e, 0x00},
{0x4F, 0x42},
{0x50, 0x00},
{0x51, 0x08},
{0x52, 0x00},
{0x53, 0x2d},
{0x54, 0x00},
{0x55, 0x08},
{0x56, 0x00},
{0x57, 0x2d},
{0x58, 0x00},
{0x59, 0x08},
{0x5a, 0x00},
{0x5b, 0x2d},
{0x5c, 0x00},
{0x5d, 0x06},
{0x5e, 0x00},
{0x5F, 0x44},
{0x68, 0x00},
{0x69, 0x04},
{0x6a, 0x00},
{0x6b, 0x46},
{0x70, 0x00},
{0x71, 0xe8},
{0x72, 0x02},
{0x73, 0x38},
{0x74, 0x00},
{0x75, 0xed},
{0x76, 0x01},
{0x77, 0x15},
{0x78, 0x02},
{0x79, 0x36},
{0x7a, 0x02},
{0x7b, 0x3a},
{0x7c, 0x02},
{0x7d, 0x36},
{0x7e, 0x02},
{0x7F, 0x3a},
{0x80, 0x01},
{0x81, 0xcc},
{0x82, 0x02},
{0x83, 0x12},
{0x84, 0x02},
{0x85, 0x36},
{0x86, 0x02},
{0x87, 0x3a},
{0x88, 0x02},
{0x89, 0x36},
{0x8a, 0x02},
{0x8b, 0x3a},
{0x8c, 0x00},
{0x8d, 0xea},
{0x8e, 0x01},
{0x8F, 0x18},
{0x90, 0x00},
{0x91, 0xe8},
{0x92, 0x02},
{0x93, 0x32},
{0x94, 0x00},
{0x95, 0xe8},
{0x96, 0x02},
{0x97, 0x32},
{0x98, 0x02},
{0x99, 0x32},
{0x9a, 0x00},
{0x9b, 0xe8},
{0x9c, 0x02},
{0x9d, 0x32},
{0x9e, 0x00},
{0x9F, 0xe8},
{0xa0, 0x00},
{0xa1, 0x0a},
{0xa2, 0x00},
{0xa3, 0x06},
{0xa4, 0x00},
{0xa5, 0x0a},
{0xa6, 0x00},
{0xa7, 0x06},
{0xa8, 0x00},
{0xa9, 0xF5},
{0xaa, 0x00},
{0xab, 0xe6},
{0xac, 0x00},
{0xad, 0xF5},
{0xae, 0x00},
{0xaF, 0xe6},
{0xc0, 0x00},
{0xc1, 0x48},
{0xc2, 0x00},
{0xc3, 0x6E},
{0xc4, 0x00},
{0xc5, 0x48},
{0xc6, 0x00},
{0xc7, 0x6E},
{0xc8, 0x00},
{0xc9, 0x4a},
{0xca, 0x00},
{0xcb, 0x6c},
{0xcc, 0x00},
{0xcd, 0x4a},
{0xce, 0x00},
{0xcF, 0x6c},
{0xd0, 0x00},
{0xd1, 0x4c},
{0xd2, 0x00},
{0xd3, 0x6a},
{0xd4, 0x00},
{0xd5, 0x4c},
{0xd6, 0x00},
{0xd7, 0x6a},
{0xd8, 0x00},
{0xd9, 0x4e},
{0xda, 0x00},
{0xdb, 0x68},
{0xdc, 0x00},
{0xdd, 0x4e},
{0xde, 0x00},
{0xdF, 0x68},
{0xe0, 0x00},
{0xe1, 0xed},
{0xe2, 0x01},
{0xe3, 0x54},
{0xe4, 0x01},
{0xe5, 0x68},
{0xe6, 0x02},
{0xe7, 0x59},
{0xe8, 0x01},
{0xe9, 0x17},
{0xea, 0x01},
{0xeb, 0xc8},
{0xec, 0x00},
{0xed, 0xdd},
{0xee, 0x00},
{0xef, 0x00},
{0xf0, 0x00},
{0xf1, 0x34},

///////////////////////////////////////////
// 10 Page
///////////////////////////////////////////
{0x03, 0x10},

{0x10, 0x03}, //YUV422-YUYV
{0x12, 0x30}, //Y,DY offset Enb
{0x13, 0x0a}, //Bright2, Contrast Enb
{0x20, 0x80},
{0x41, 0x0c}, //DY OFFSET
{0x50, 0xa0},

{0x60, 0x03}, //Sat, Trans Enb
//Desat - Chroma
//10 1.25, 20 1.30, 40 1.15
{0x70, 0x0c},
{0x71, 0x00},
{0x72, 0x7a},
{0x73, 0x28},
{0x74, 0x14},
{0x75, 0x0d},
{0x76, 0x40},
{0x77, 0x49},
{0x78, 0x99},
{0x79, 0x4c},
{0x7a, 0xcc},
{0x7b, 0x49},
{0x7c, 0x99},
{0x7d, 0x14},
{0x7e, 0x28},
{0x7f, 0x50},

{0xe0, 0xff}, //don't touch
{0xe1, 0x3f}, //don't touch
{0xe2, 0xff}, //don't touch
{0xe3, 0xff}, //don't touch
{0xe4, 0xf7}, //don't touch
{0xe5, 0x79}, //don't touch
{0xe6, 0xce}, //don't touch
{0xe7, 0x1f}, //don't touch
{0xe8, 0x5f}, //don't touch
{0xf0, 0x3f}, //don't touch

///////////////////////////////////////////
// 11 page D-LPF
///////////////////////////////////////////
//LPF
{0x03, 0x11},
{0x10, 0x13}, //DLPF
{0xf0, 0x40}, //lpf_auto_ctl1
{0xf2, 0x6e}, //LPF_AG_TH_ON
{0xf3, 0x64}, //LPF_AG_TH_OFF
{0xf4, 0xfe}, //lpf_out_th_h
{0xf5, 0xfd}, //lpf_out_th_lo

{0xf6, 0x00}, //lpf_ymean_th_hi
{0xf7, 0x00}, //lpf_ymean_th_lo

///////////////////////////////////////////
// 12 page DPC / GBGR /LensDebulr
///////////////////////////////////////////
{0x03, 0x12},
{0x12, 0x08},
{0x2b, 0x08}, //white
{0x2c, 0x08}, //mid_high
{0x2d, 0x08}, //mid_low
{0x2e, 0x06}, //dark

{0x33, 0x09},
{0x35, 0x03},
{0x36, 0x0f},
{0x37, 0x0d},
{0x38, 0x02},

{0x60, 0x21},
{0x61, 0x0e},
{0x62, 0x70},
{0x63, 0x70},
{0x65, 0x01},

{0xE1, 0x58},
{0xEC, 0x32},
{0xEE, 0x03},

///////////////////////////////////////////
// 13 page YC2D LPF
///////////////////////////////////////////
{0x03, 0x13},

{0x10, 0x33}, //Don't touch
{0xa0, 0x0f}, //Don't touch

{0xe1, 0x07},

///////////////////////////////////////////
// 14 page Sharpness
///////////////////////////////////////////
{0x03, 0x14},

{0x10, 0x27}, //Don't touch
{0x11, 0x02}, //Don't touch
{0x12, 0x40}, //Don't touch
{0x20, 0x82}, //Don't touch
{0x30, 0x82}, //Don't touch
{0x40, 0x84}, //Don't touch
{0x50, 0x84}, //Don't touch

{0x03, 0x00},
{0xfe, 0x07},
///////////////////////////////////////////
// 15 Page LSC off
///////////////////////////////////////////
{0x03, 0x15},
{0x10, 0x82},
{0x03, 0x07},
{0x12, 0x04},
{0x34, 0x00},
{0x35, 0x00},
{0x13, 0x85},
{0x13, 0x05},
{0x37, 0x3b},
{0x37, 0x3c},
{0x37, 0x39},
{0x37, 0x34},
{0x37, 0x2f},
{0x37, 0x2a},
{0x37, 0x25},
{0x37, 0x22},
{0x37, 0x20},
{0x37, 0x20},
{0x37, 0x21},
{0x37, 0x24},
{0x37, 0x28},
{0x37, 0x2d},
{0x37, 0x32},
{0x37, 0x36},
{0x37, 0x3a},
{0x37, 0x39},
{0x37, 0x3c},
{0x37, 0x3d},
{0x37, 0x38},
{0x37, 0x33},
{0x37, 0x2c},
{0x37, 0x27},
{0x37, 0x22},
{0x37, 0x1e},
{0x37, 0x1c},
{0x37, 0x1c},
{0x37, 0x1d},
{0x37, 0x20},
{0x37, 0x25},
{0x37, 0x2a},
{0x37, 0x30},
{0x37, 0x35},
{0x37, 0x3a},
{0x37, 0x3a},
{0x37, 0x39},
{0x37, 0x39},
{0x37, 0x33},
{0x37, 0x2c},
{0x37, 0x25},
{0x37, 0x1e},
{0x37, 0x19},
{0x37, 0x16},
{0x37, 0x14},
{0x37, 0x14},
{0x37, 0x15},
{0x37, 0x18},
{0x37, 0x1d},
{0x37, 0x22},
{0x37, 0x29},
{0x37, 0x30},
{0x37, 0x36},
{0x37, 0x37},
{0x37, 0x36},
{0x37, 0x36},
{0x37, 0x2e},
{0x37, 0x26},
{0x37, 0x1e},
{0x37, 0x18},
{0x37, 0x13},
{0x37, 0x0f},
{0x37, 0x0d},
{0x37, 0x0c},
{0x37, 0x0e},
{0x37, 0x11},
{0x37, 0x16},
{0x37, 0x1c},
{0x37, 0x23},
{0x37, 0x2b},
{0x37, 0x32},
{0x37, 0x33},
{0x37, 0x34},
{0x37, 0x33},
{0x37, 0x2a},
{0x37, 0x22},
{0x37, 0x1a},
{0x37, 0x13},
{0x37, 0x0d},
{0x37, 0x09},
{0x37, 0x07},
{0x37, 0x06},
{0x37, 0x08},
{0x37, 0x0c},
{0x37, 0x11},
{0x37, 0x17},
{0x37, 0x1f},
{0x37, 0x27},
{0x37, 0x2f},
{0x37, 0x31},
{0x37, 0x32},
{0x37, 0x30},
{0x37, 0x27},
{0x37, 0x1f},
{0x37, 0x16},
{0x37, 0x0f},
{0x37, 0x09},
{0x37, 0x04},
{0x37, 0x02},
{0x37, 0x02},
{0x37, 0x04},
{0x37, 0x08},
{0x37, 0x0d},
{0x37, 0x14},
{0x37, 0x1c},
{0x37, 0x24},
{0x37, 0x2c},
{0x37, 0x2f},
{0x37, 0x32},
{0x37, 0x30},
{0x37, 0x26},
{0x37, 0x1d},
{0x37, 0x15},
{0x37, 0x0d},
{0x37, 0x07},
{0x37, 0x02},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x01},
{0x37, 0x05},
{0x37, 0x0b},
{0x37, 0x12},
{0x37, 0x1a},
{0x37, 0x23},
{0x37, 0x2c},
{0x37, 0x2e},
{0x37, 0x32},
{0x37, 0x30},
{0x37, 0x27},
{0x37, 0x1e},
{0x37, 0x16},
{0x37, 0x0e},
{0x37, 0x08},
{0x37, 0x03},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x02},
{0x37, 0x06},
{0x37, 0x0c},
{0x37, 0x13},
{0x37, 0x1b},
{0x37, 0x24},
{0x37, 0x2d},
{0x37, 0x30},
{0x37, 0x33},
{0x37, 0x32},
{0x37, 0x29},
{0x37, 0x20},
{0x37, 0x18},
{0x37, 0x11},
{0x37, 0x0b},
{0x37, 0x06},
{0x37, 0x03},
{0x37, 0x03},
{0x37, 0x05},
{0x37, 0x09},
{0x37, 0x0f},
{0x37, 0x16},
{0x37, 0x1d},
{0x37, 0x26},
{0x37, 0x2e},
{0x37, 0x31},
{0x37, 0x35},
{0x37, 0x34},
{0x37, 0x2c},
{0x37, 0x24},
{0x37, 0x1d},
{0x37, 0x16},
{0x37, 0x10},
{0x37, 0x0b},
{0x37, 0x09},
{0x37, 0x09},
{0x37, 0x0b},
{0x37, 0x0e},
{0x37, 0x14},
{0x37, 0x1a},
{0x37, 0x21},
{0x37, 0x2a},
{0x37, 0x32},
{0x37, 0x33},
{0x37, 0x38},
{0x37, 0x38},
{0x37, 0x31},
{0x37, 0x2a},
{0x37, 0x23},
{0x37, 0x1c},
{0x37, 0x17},
{0x37, 0x14},
{0x37, 0x11},
{0x37, 0x11},
{0x37, 0x12},
{0x37, 0x16},
{0x37, 0x1b},
{0x37, 0x21},
{0x37, 0x27},
{0x37, 0x2e},
{0x37, 0x35},
{0x37, 0x36},
{0x37, 0x3c},
{0x37, 0x3c},
{0x37, 0x37},
{0x37, 0x30},
{0x37, 0x2a},
{0x37, 0x24},
{0x37, 0x1f},
{0x37, 0x1c},
{0x37, 0x1a},
{0x37, 0x1a},
{0x37, 0x1b},
{0x37, 0x1e},
{0x37, 0x22},
{0x37, 0x27},
{0x37, 0x2e},
{0x37, 0x34},
{0x37, 0x3a},
{0x37, 0x3a},
{0x37, 0x3e},
{0x37, 0x40},
{0x37, 0x3c},
{0x37, 0x37},
{0x37, 0x32},
{0x37, 0x2c},
{0x37, 0x28},
{0x37, 0x25},
{0x37, 0x24},
{0x37, 0x23},
{0x37, 0x24},
{0x37, 0x27},
{0x37, 0x2b},
{0x37, 0x30},
{0x37, 0x35},
{0x37, 0x3a},
{0x37, 0x3e},
{0x37, 0x3d},
{0x37, 0x3d},
{0x37, 0x40},
{0x37, 0x3e},
{0x37, 0x39},
{0x37, 0x34},
{0x37, 0x30},
{0x37, 0x2c},
{0x37, 0x29},
{0x37, 0x27},
{0x37, 0x27},
{0x37, 0x28},
{0x37, 0x2a},
{0x37, 0x2e},
{0x37, 0x33},
{0x37, 0x37},
{0x37, 0x3b},
{0x37, 0x3e},
{0x37, 0x3c},
{0x37, 0x44},
{0x37, 0x46},
{0x37, 0x43},
{0x37, 0x3d},
{0x37, 0x37},
{0x37, 0x30},
{0x37, 0x2b},
{0x37, 0x27},
{0x37, 0x25},
{0x37, 0x25},
{0x37, 0x26},
{0x37, 0x29},
{0x37, 0x2e},
{0x37, 0x35},
{0x37, 0x3b},
{0x37, 0x3f},
{0x37, 0x43},
{0x37, 0x41},
{0x37, 0x45},
{0x37, 0x47},
{0x37, 0x41},
{0x37, 0x3b},
{0x37, 0x33},
{0x37, 0x2c},
{0x37, 0x26},
{0x37, 0x22},
{0x37, 0x20},
{0x37, 0x20},
{0x37, 0x22},
{0x37, 0x25},
{0x37, 0x2a},
{0x37, 0x31},
{0x37, 0x38},
{0x37, 0x3e},
{0x37, 0x43},
{0x37, 0x42},
{0x37, 0x42},
{0x37, 0x42},
{0x37, 0x3b},
{0x37, 0x32},
{0x37, 0x29},
{0x37, 0x22},
{0x37, 0x1c},
{0x37, 0x18},
{0x37, 0x16},
{0x37, 0x16},
{0x37, 0x17},
{0x37, 0x1b},
{0x37, 0x20},
{0x37, 0x27},
{0x37, 0x2f},
{0x37, 0x38},
{0x37, 0x3e},
{0x37, 0x3e},
{0x37, 0x3f},
{0x37, 0x3e},
{0x37, 0x35},
{0x37, 0x2b},
{0x37, 0x21},
{0x37, 0x1a},
{0x37, 0x14},
{0x37, 0x0f},
{0x37, 0x0d},
{0x37, 0x0d},
{0x37, 0x0f},
{0x37, 0x13},
{0x37, 0x18},
{0x37, 0x1f},
{0x37, 0x28},
{0x37, 0x32},
{0x37, 0x3a},
{0x37, 0x3b},
{0x37, 0x3d},
{0x37, 0x3b},
{0x37, 0x30},
{0x37, 0x25},
{0x37, 0x1c},
{0x37, 0x14},
{0x37, 0x0d},
{0x37, 0x09},
{0x37, 0x06},
{0x37, 0x06},
{0x37, 0x08},
{0x37, 0x0c},
{0x37, 0x12},
{0x37, 0x1a},
{0x37, 0x23},
{0x37, 0x2d},
{0x37, 0x37},
{0x37, 0x39},
{0x37, 0x3b},
{0x37, 0x38},
{0x37, 0x2d},
{0x37, 0x22},
{0x37, 0x18},
{0x37, 0x10},
{0x37, 0x09},
{0x37, 0x04},
{0x37, 0x02},
{0x37, 0x01},
{0x37, 0x03},
{0x37, 0x08},
{0x37, 0x0e},
{0x37, 0x16},
{0x37, 0x1f},
{0x37, 0x29},
{0x37, 0x34},
{0x37, 0x38},
{0x37, 0x3a},
{0x37, 0x37},
{0x37, 0x2c},
{0x37, 0x21},
{0x37, 0x17},
{0x37, 0x0e},
{0x37, 0x07},
{0x37, 0x02},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x01},
{0x37, 0x05},
{0x37, 0x0c},
{0x37, 0x14},
{0x37, 0x1d},
{0x37, 0x28},
{0x37, 0x33},
{0x37, 0x37},
{0x37, 0x3c},
{0x37, 0x38},
{0x37, 0x2d},
{0x37, 0x22},
{0x37, 0x18},
{0x37, 0x0f},
{0x37, 0x08},
{0x37, 0x03},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x02},
{0x37, 0x06},
{0x37, 0x0c},
{0x37, 0x15},
{0x37, 0x1e},
{0x37, 0x29},
{0x37, 0x35},
{0x37, 0x38},
{0x37, 0x3d},
{0x37, 0x3a},
{0x37, 0x2f},
{0x37, 0x24},
{0x37, 0x1b},
{0x37, 0x13},
{0x37, 0x0c},
{0x37, 0x07},
{0x37, 0x04},
{0x37, 0x03},
{0x37, 0x05},
{0x37, 0x09},
{0x37, 0x10},
{0x37, 0x18},
{0x37, 0x21},
{0x37, 0x2b},
{0x37, 0x37},
{0x37, 0x3a},
{0x37, 0x3f},
{0x37, 0x3d},
{0x37, 0x33},
{0x37, 0x29},
{0x37, 0x20},
{0x37, 0x18},
{0x37, 0x12},
{0x37, 0x0d},
{0x37, 0x0a},
{0x37, 0x0a},
{0x37, 0x0c},
{0x37, 0x0f},
{0x37, 0x15},
{0x37, 0x1d},
{0x37, 0x26},
{0x37, 0x30},
{0x37, 0x3a},
{0x37, 0x3d},
{0x37, 0x43},
{0x37, 0x42},
{0x37, 0x3a},
{0x37, 0x30},
{0x37, 0x28},
{0x37, 0x20},
{0x37, 0x1a},
{0x37, 0x16},
{0x37, 0x13},
{0x37, 0x13},
{0x37, 0x14},
{0x37, 0x18},
{0x37, 0x1d},
{0x37, 0x24},
{0x37, 0x2d},
{0x37, 0x36},
{0x37, 0x3f},
{0x37, 0x41},
{0x37, 0x47},
{0x37, 0x47},
{0x37, 0x41},
{0x37, 0x39},
{0x37, 0x30},
{0x37, 0x29},
{0x37, 0x23},
{0x37, 0x20},
{0x37, 0x1d},
{0x37, 0x1d},
{0x37, 0x1f},
{0x37, 0x22},
{0x37, 0x27},
{0x37, 0x2d},
{0x37, 0x35},
{0x37, 0x3e},
{0x37, 0x45},
{0x37, 0x45},
{0x37, 0x4a},
{0x37, 0x4c},
{0x37, 0x48},
{0x37, 0x41},
{0x37, 0x3a},
{0x37, 0x34},
{0x37, 0x2e},
{0x37, 0x2b},
{0x37, 0x29},
{0x37, 0x29},
{0x37, 0x2a},
{0x37, 0x2d},
{0x37, 0x32},
{0x37, 0x38},
{0x37, 0x3f},
{0x37, 0x45},
{0x37, 0x4a},
{0x37, 0x49},
{0x37, 0x49},
{0x37, 0x4c},
{0x37, 0x49},
{0x37, 0x44},
{0x37, 0x3e},
{0x37, 0x38},
{0x37, 0x33},
{0x37, 0x30},
{0x37, 0x2e},
{0x37, 0x2e},
{0x37, 0x2f},
{0x37, 0x32},
{0x37, 0x37},
{0x37, 0x3d},
{0x37, 0x43},
{0x37, 0x47},
{0x37, 0x4b},
{0x37, 0x49},
{0x37, 0x30},
{0x37, 0x31},
{0x37, 0x2f},
{0x37, 0x2b},
{0x37, 0x27},
{0x37, 0x22},
{0x37, 0x1e},
{0x37, 0x1b},
{0x37, 0x19},
{0x37, 0x19},
{0x37, 0x1a},
{0x37, 0x1c},
{0x37, 0x20},
{0x37, 0x24},
{0x37, 0x28},
{0x37, 0x2b},
{0x37, 0x2d},
{0x37, 0x2b},
{0x37, 0x31},
{0x37, 0x33},
{0x37, 0x2f},
{0x37, 0x2a},
{0x37, 0x25},
{0x37, 0x20},
{0x37, 0x1c},
{0x37, 0x19},
{0x37, 0x17},
{0x37, 0x16},
{0x37, 0x18},
{0x37, 0x1a},
{0x37, 0x1e},
{0x37, 0x23},
{0x37, 0x28},
{0x37, 0x2b},
{0x37, 0x2e},
{0x37, 0x2c},
{0x37, 0x30},
{0x37, 0x30},
{0x37, 0x2b},
{0x37, 0x26},
{0x37, 0x20},
{0x37, 0x1a},
{0x37, 0x16},
{0x37, 0x12},
{0x37, 0x11},
{0x37, 0x10},
{0x37, 0x12},
{0x37, 0x15},
{0x37, 0x19},
{0x37, 0x1e},
{0x37, 0x23},
{0x37, 0x28},
{0x37, 0x2b},
{0x37, 0x2a},
{0x37, 0x2e},
{0x37, 0x2d},
{0x37, 0x27},
{0x37, 0x21},
{0x37, 0x1b},
{0x37, 0x15},
{0x37, 0x10},
{0x37, 0x0d},
{0x37, 0x0b},
{0x37, 0x0b},
{0x37, 0x0c},
{0x37, 0x0f},
{0x37, 0x14},
{0x37, 0x19},
{0x37, 0x1e},
{0x37, 0x24},
{0x37, 0x28},
{0x37, 0x28},
{0x37, 0x2b},
{0x37, 0x2a},
{0x37, 0x24},
{0x37, 0x1d},
{0x37, 0x16},
{0x37, 0x10},
{0x37, 0x0c},
{0x37, 0x08},
{0x37, 0x06},
{0x37, 0x06},
{0x37, 0x08},
{0x37, 0x0b},
{0x37, 0x0f},
{0x37, 0x14},
{0x37, 0x1a},
{0x37, 0x20},
{0x37, 0x25},
{0x37, 0x25},
{0x37, 0x29},
{0x37, 0x28},
{0x37, 0x21},
{0x37, 0x1a},
{0x37, 0x13},
{0x37, 0x0d},
{0x37, 0x08},
{0x37, 0x04},
{0x37, 0x02},
{0x37, 0x02},
{0x37, 0x04},
{0x37, 0x07},
{0x37, 0x0c},
{0x37, 0x11},
{0x37, 0x17},
{0x37, 0x1e},
{0x37, 0x23},
{0x37, 0x24},
{0x37, 0x28},
{0x37, 0x27},
{0x37, 0x20},
{0x37, 0x19},
{0x37, 0x12},
{0x37, 0x0c},
{0x37, 0x06},
{0x37, 0x02},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x01},
{0x37, 0x05},
{0x37, 0x0a},
{0x37, 0x10},
{0x37, 0x16},
{0x37, 0x1d},
{0x37, 0x22},
{0x37, 0x23},
{0x37, 0x29},
{0x37, 0x27},
{0x37, 0x20},
{0x37, 0x19},
{0x37, 0x12},
{0x37, 0x0c},
{0x37, 0x07},
{0x37, 0x03},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x02},
{0x37, 0x05},
{0x37, 0x0a},
{0x37, 0x10},
{0x37, 0x17},
{0x37, 0x1d},
{0x37, 0x23},
{0x37, 0x24},
{0x37, 0x29},
{0x37, 0x28},
{0x37, 0x21},
{0x37, 0x1a},
{0x37, 0x14},
{0x37, 0x0e},
{0x37, 0x09},
{0x37, 0x05},
{0x37, 0x03},
{0x37, 0x03},
{0x37, 0x04},
{0x37, 0x08},
{0x37, 0x0c},
{0x37, 0x12},
{0x37, 0x18},
{0x37, 0x1f},
{0x37, 0x24},
{0x37, 0x25},
{0x37, 0x2b},
{0x37, 0x2a},
{0x37, 0x23},
{0x37, 0x1d},
{0x37, 0x17},
{0x37, 0x12},
{0x37, 0x0d},
{0x37, 0x0a},
{0x37, 0x08},
{0x37, 0x07},
{0x37, 0x09},
{0x37, 0x0c},
{0x37, 0x10},
{0x37, 0x16},
{0x37, 0x1c},
{0x37, 0x22},
{0x37, 0x27},
{0x37, 0x27},
{0x37, 0x2d},
{0x37, 0x2d},
{0x37, 0x28},
{0x37, 0x22},
{0x37, 0x1d},
{0x37, 0x17},
{0x37, 0x13},
{0x37, 0x10},
{0x37, 0x0e},
{0x37, 0x0e},
{0x37, 0x0f},
{0x37, 0x12},
{0x37, 0x16},
{0x37, 0x1b},
{0x37, 0x21},
{0x37, 0x26},
{0x37, 0x2a},
{0x37, 0x29},
{0x37, 0x30},
{0x37, 0x30},
{0x37, 0x2c},
{0x37, 0x27},
{0x37, 0x22},
{0x37, 0x1d},
{0x37, 0x19},
{0x37, 0x16},
{0x37, 0x15},
{0x37, 0x15},
{0x37, 0x16},
{0x37, 0x19},
{0x37, 0x1c},
{0x37, 0x21},
{0x37, 0x25},
{0x37, 0x2a},
{0x37, 0x2d},
{0x37, 0x2b},
{0x37, 0x32},
{0x37, 0x33},
{0x37, 0x31},
{0x37, 0x2d},
{0x37, 0x28},
{0x37, 0x24},
{0x37, 0x20},
{0x37, 0x1d},
{0x37, 0x1c},
{0x37, 0x1c},
{0x37, 0x1d},
{0x37, 0x20},
{0x37, 0x23},
{0x37, 0x27},
{0x37, 0x2b},
{0x37, 0x2e},
{0x37, 0x2f},
{0x37, 0x2d},
{0x37, 0x31},
{0x37, 0x33},
{0x37, 0x31},
{0x37, 0x2e},
{0x37, 0x2a},
{0x37, 0x26},
{0x37, 0x22},
{0x37, 0x20},
{0x37, 0x1f},
{0x37, 0x1f},
{0x37, 0x20},
{0x37, 0x22},
{0x37, 0x25},
{0x37, 0x29},
{0x37, 0x2c},
{0x37, 0x2e},
{0x37, 0x2f},
{0x37, 0x2c},
{0x37, 0x3b},
{0x37, 0x3c},
{0x37, 0x39},
{0x37, 0x34},
{0x37, 0x2f},
{0x37, 0x2a},
{0x37, 0x25},
{0x37, 0x22},
{0x37, 0x20},
{0x37, 0x20},
{0x37, 0x21},
{0x37, 0x24},
{0x37, 0x28},
{0x37, 0x2d},
{0x37, 0x32},
{0x37, 0x36},
{0x37, 0x3a},
{0x37, 0x39},
{0x37, 0x3c},
{0x37, 0x3d},
{0x37, 0x38},
{0x37, 0x33},
{0x37, 0x2c},
{0x37, 0x27},
{0x37, 0x22},
{0x37, 0x1e},
{0x37, 0x1c},
{0x37, 0x1c},
{0x37, 0x1d},
{0x37, 0x20},
{0x37, 0x25},
{0x37, 0x2a},
{0x37, 0x30},
{0x37, 0x35},
{0x37, 0x3a},
{0x37, 0x3a},
{0x37, 0x39},
{0x37, 0x39},
{0x37, 0x33},
{0x37, 0x2c},
{0x37, 0x25},
{0x37, 0x1e},
{0x37, 0x19},
{0x37, 0x16},
{0x37, 0x14},
{0x37, 0x14},
{0x37, 0x15},
{0x37, 0x18},
{0x37, 0x1d},
{0x37, 0x22},
{0x37, 0x29},
{0x37, 0x30},
{0x37, 0x36},
{0x37, 0x37},
{0x37, 0x36},
{0x37, 0x36},
{0x37, 0x2e},
{0x37, 0x26},
{0x37, 0x1e},
{0x37, 0x18},
{0x37, 0x13},
{0x37, 0x0f},
{0x37, 0x0d},
{0x37, 0x0c},
{0x37, 0x0e},
{0x37, 0x11},
{0x37, 0x16},
{0x37, 0x1c},
{0x37, 0x23},
{0x37, 0x2b},
{0x37, 0x32},
{0x37, 0x33},
{0x37, 0x34},
{0x37, 0x33},
{0x37, 0x2a},
{0x37, 0x22},
{0x37, 0x1a},
{0x37, 0x13},
{0x37, 0x0d},
{0x37, 0x09},
{0x37, 0x07},
{0x37, 0x06},
{0x37, 0x08},
{0x37, 0x0c},
{0x37, 0x11},
{0x37, 0x17},
{0x37, 0x1f},
{0x37, 0x27},
{0x37, 0x2f},
{0x37, 0x31},
{0x37, 0x32},
{0x37, 0x30},
{0x37, 0x27},
{0x37, 0x1f},
{0x37, 0x16},
{0x37, 0x0f},
{0x37, 0x09},
{0x37, 0x04},
{0x37, 0x02},
{0x37, 0x02},
{0x37, 0x04},
{0x37, 0x08},
{0x37, 0x0d},
{0x37, 0x14},
{0x37, 0x1c},
{0x37, 0x24},
{0x37, 0x2c},
{0x37, 0x2f},
{0x37, 0x32},
{0x37, 0x30},
{0x37, 0x26},
{0x37, 0x1d},
{0x37, 0x15},
{0x37, 0x0d},
{0x37, 0x07},
{0x37, 0x02},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x01},
{0x37, 0x05},
{0x37, 0x0b},
{0x37, 0x12},
{0x37, 0x1a},
{0x37, 0x23},
{0x37, 0x2c},
{0x37, 0x2e},
{0x37, 0x32},
{0x37, 0x30},
{0x37, 0x27},
{0x37, 0x1e},
{0x37, 0x16},
{0x37, 0x0e},
{0x37, 0x08},
{0x37, 0x03},
{0x37, 0x00},
{0x37, 0x00},
{0x37, 0x02},
{0x37, 0x06},
{0x37, 0x0c},
{0x37, 0x13},
{0x37, 0x1b},
{0x37, 0x24},
{0x37, 0x2d},
{0x37, 0x30},
{0x37, 0x33},
{0x37, 0x32},
{0x37, 0x29},
{0x37, 0x20},
{0x37, 0x18},
{0x37, 0x11},
{0x37, 0x0b},
{0x37, 0x06},
{0x37, 0x03},
{0x37, 0x03},
{0x37, 0x05},
{0x37, 0x09},
{0x37, 0x0f},
{0x37, 0x16},
{0x37, 0x1d},
{0x37, 0x26},
{0x37, 0x2e},
{0x37, 0x31},
{0x37, 0x35},
{0x37, 0x34},
{0x37, 0x2c},
{0x37, 0x24},
{0x37, 0x1d},
{0x37, 0x16},
{0x37, 0x10},
{0x37, 0x0b},
{0x37, 0x09},
{0x37, 0x09},
{0x37, 0x0b},
{0x37, 0x0e},
{0x37, 0x14},
{0x37, 0x1a},
{0x37, 0x21},
{0x37, 0x2a},
{0x37, 0x32},
{0x37, 0x33},
{0x37, 0x38},
{0x37, 0x38},
{0x37, 0x31},
{0x37, 0x2a},
{0x37, 0x23},
{0x37, 0x1c},
{0x37, 0x17},
{0x37, 0x14},
{0x37, 0x11},
{0x37, 0x11},
{0x37, 0x12},
{0x37, 0x16},
{0x37, 0x1b},
{0x37, 0x21},
{0x37, 0x27},
{0x37, 0x2e},
{0x37, 0x35},
{0x37, 0x36},
{0x37, 0x3c},
{0x37, 0x3c},
{0x37, 0x37},
{0x37, 0x30},
{0x37, 0x2a},
{0x37, 0x24},
{0x37, 0x1f},
{0x37, 0x1c},
{0x37, 0x1a},
{0x37, 0x1a},
{0x37, 0x1b},
{0x37, 0x1e},
{0x37, 0x22},
{0x37, 0x27},
{0x37, 0x2e},
{0x37, 0x34},
{0x37, 0x3a},
{0x37, 0x3a},
{0x37, 0x3e},
{0x37, 0x40},
{0x37, 0x3c},
{0x37, 0x37},
{0x37, 0x32},
{0x37, 0x2c},
{0x37, 0x28},
{0x37, 0x25},
{0x37, 0x24},
{0x37, 0x23},
{0x37, 0x24},
{0x37, 0x27},
{0x37, 0x2b},
{0x37, 0x30},
{0x37, 0x35},
{0x37, 0x3a},
{0x37, 0x3e},
{0x37, 0x3d},
{0x37, 0x3d},
{0x37, 0x40},
{0x37, 0x3e},
{0x37, 0x39},
{0x37, 0x34},
{0x37, 0x30},
{0x37, 0x2c},
{0x37, 0x29},
{0x37, 0x27},
{0x37, 0x27},
{0x37, 0x28},
{0x37, 0x2a},
{0x37, 0x2e},
{0x37, 0x33},
{0x37, 0x37},
{0x37, 0x3b},
{0x37, 0x3e},
{0x37, 0x3c},

{0x12, 0x00},
{0x13, 0x00},
{0x03, 0x15},
{0x10, 0x83},

///////////////////////////////////////////
// 16 Page CMC
///////////////////////////////////////////
{0x03, 0x16},
{0x10, 0x0f}, //cmc
{0x60, 0xff}, //mcmc

//automatic saturation
{0x8a, 0x68},
{0x8b, 0x7c},
{0x8c, 0x7f},
{0x8d, 0x7f},
{0x8e, 0x7f},
{0x8f, 0x7f},
{0x90, 0x7f},
{0x91, 0x7f},
{0x92, 0x7f},
{0x93, 0x7f},
{0x94, 0x7a},
{0x95, 0x78},
{0x96, 0x74},
{0x97, 0x70},
{0x98, 0x6c},
{0x99, 0x68},
{0x9a, 0x64},

//WB gain
{0xa0, 0x81}, //Manual WB gain enable
{0xa1, 0x00},
{0xa2, 0x68}, //R_start_gain
{0xa3, 0x70}, //B_start_gain
{0xa6, 0xf0}, //r max
{0xa8, 0xf0}, //b max
// Pre WB gain setting(after AWB setting)
{0xF0, 0x09}, //Pre WB gain enable Gain resolution_2x
{0xF1, 0x80},
{0xF2, 0x80},
{0xF3, 0x80},
{0xF4, 0x80},

///////////////////////////////////////////
// 17 Page Gamma
///////////////////////////////////////////
{0x03, 0x17},
{0x10, 0x01},

///////////////////////////////////////////
// 18 Page Histogram
///////////////////////////////////////////
{0x03, 0x18},
{0x10, 0x00},

///////////////////////////////////////////
// 20 Page AE
///////////////////////////////////////////
{0x03, 0x20},
{0x10, 0x9f}, //50Hz
{0x12, 0x2d}, //en_ramp_gain_auto
{0x17, 0xa0}, //AE fuzzy (Y Mean)
{0x1f, 0x1f},

{0x20, 0x00}, //EXP Normal 33.33 fps
{0x21, 0x18},
{0x22, 0xb8},
{0x23, 0x20},
{0x24, 0x00}, //EXP Max 8.33 fps
{0x25, 0x62},
{0x26, 0xe0},
{0x27, 0x80},
{0x28, 0x00}, //EXPMin 10800.00 fps
{0x29, 0x13},
{0x2a, 0x88},
{0x30, 0x08}, //EXP100
{0x31, 0x3d},
{0x32, 0x60},
{0x33, 0x06}, //EXP120
{0x34, 0xdd},
{0x35, 0xd0},
{0x36, 0x00}, //EXP Unit
{0x37, 0x09},
{0x38, 0xc4},
{0x40, 0x00}, //exp 12000
{0x41, 0x08},
{0x42, 0x3d},

{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

{0x71, 0x84}, //DG MAX
{0x72, 0x80}, //DG MIN

{0x80, 0x32}, //AE target

///////////////////////////////////////////
// 30 page MCU Set
///////////////////////////////////////////
{0x03, 0x30},
{0x12, 0x00},
{0x20, 0x08},
{0x50, 0x00},
{0xe0, 0x02}, //Don't touch
{0xf0, 0x00},
{0x11, 0x05}, //B[0]: MCU holding
{0x03, 0xc0},
{0xe4, 0xA0}, //delay

///////////////////////////////////////////
// 30 Page DMA address set
///////////////////////////////////////////
{0x03, 0x30}, //DMA
{0x7c, 0x2c}, //Extra str
{0x7d, 0xce},
{0x7e, 0x2c}, //Extra end
{0x7f, 0xd1},
{0x80, 0x24}, //Outdoor str
{0x81, 0x70},
{0x82, 0x24}, //Outdoor end
{0x83, 0x73},
{0x84, 0x21}, //Indoor str
{0x85, 0xa6},
{0x86, 0x21}, //Indoor end
{0x87, 0xa9},
{0x88, 0x27}, //Dark1 str
{0x89, 0x3a},
{0x8a, 0x27}, //Dark1 end
{0x8b, 0x3d},
{0x8c, 0x2a}, //Dark2 str
{0x8d, 0x04},
{0x8e, 0x2a}, //Dark2 end
{0x8f, 0x07},

{0x03, 0xC0},
{0x2F, 0xf0}, //DMA busy flag check
{0x31, 0x20}, //Delay before DMA write
{0x33, 0x20}, //DMA full stuck mode
{0x32, 0x01}, //DMA on first
{0x03, 0xC0},
{0x2F, 0xf0}, //DMA busy flag check
{0x31, 0x20}, //Delay before DMA write
{0x33, 0x20},
{0x32, 0x01}, //DMA on second

{0x03, 0x00},
{0x10, 0x13}, // Preview2
{0x01, 0xF0}, // sleep off

///////////////////////////////////////////
// 30 page
///////////////////////////////////////////
{0x03, 0x30},
{0xDE, 0x20}, //OTP color ratio xdata address set
{0xDF, 0xA5},
{0x03, 0xE7},
{0x1F, 0x18}, //OTP color ratio Rg typical set = 6300
{0x20, 0x9c},
{0x21, 0x0F}, //OTP color ratio Bg typical set = 3920
{0x22, 0x50},

///////////////////////////////////////////
// CD Page Adaptive Mode(Color ratio)
///////////////////////////////////////////
{0x03, 0xCD},
{0x47, 0x00},
{0x12, 0x80},
{0x13, 0x80}, //Ratio WB R gain min
{0x14, 0x8C}, //Ratio WB R gain max
{0x15, 0x80}, //Ratio WB B gain min
{0x16, 0x8C}, //Ratio WB B gain max
{0x10, 0xB9}, //enable

///////////////////////////////////////////
// 1F Page SSD
///////////////////////////////////////////
{0x03, 0x1f}, //1F page
{0x11, 0x00}, //bit[5:4]: debug mode
{0x12, 0x60},
{0x13, 0x14},
{0x14, 0x10},
{0x15, 0x00},
{0x20, 0x18}, //ssd_x_start_pos
{0x21, 0x14}, //ssd_y_start_pos
{0x22, 0x8C}, //ssd_blk_width
{0x23, 0x60}, //ssd_blk_height
{0x28, 0x18},
{0x29, 0x02},
{0x3B, 0x18},
{0x3C, 0x8C},
{0x10, 0x19}, //SSD enable

///////////////////////////////////////////
// C4 Page MCU AE
///////////////////////////////////////////
{0x03, 0xc4},
{0x12, 0x90},
{0x15, 0x10}, //Th1
{0x16, 0x0a}, //Th2
{0x17, 0x08}, //Th3
{0x18, 0x04}, //Th4

//Shutter Setting
{0x19, 0x3c}, //Band1 Gain
{0x1e, 0x00}, //Bnd1 33.33fps
{0x1f, 0x18},
{0x20, 0xb8},
{0x21, 0x20},

{0x1a, 0x46}, //Band2 Gain
{0x22, 0x00}, //Bnd2 20fps
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},

{0x1b, 0x5c}, //Bnd3 Gain
{0x26, 0x00}, //Bnd3 12.5fps
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

{0x36, 0x11}, //B[7:4]Lock, B[3:0]Unlock0 (x2)

///////////////////////////////////////////
// c3 Page MCU AE Weight
///////////////////////////////////////////
{0x03, 0xc3},
{0x10, 0x00},
{0x38, 0xFF},
{0x39, 0xFF},

//AE_CenterWeighted
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

{0xE1, 0x25}, //Outdoor AG Max
{0xE2, 0x03},
///////////////////////////////////////////
// Capture Setting
///////////////////////////////////////////
{0x03, 0xd5},
{0x11, 0x99}, //PLL, Line time, Y Correction
{0x1e, 0x04}, //Main x1
{0x86, 0x08}, //Prev x2

{0x1f, 0x01}, //Capture Hblank  320
{0x20, 0x40},
{0x21, 0x09}, //Capture oneline 2500
{0x22, 0xc4},

{0x8c, 0x01}, //Preview Hblank  320
{0x8d, 0x40},
{0x92, 0x09}, //Preview oneline 2500
{0x93, 0xc4},
{0x33, 0x00},

///////////////////////////////////////////
// C0 Page Firmware system
///////////////////////////////////////////
{0x03, 0xc0},
{0x16, 0x80},
{0x16, 0x81}, //MCU main roof holding on

///////////////////////////////////////////
// C5 Page AWB
///////////////////////////////////////////
{0x03, 0xc5},
{0x0e, 0x01}, //burst start
{0x10, 0x30},
{0x11, 0xa5},
{0x12, 0x97},
{0x13, 0x1d},
{0x14, 0x02}, //bLockTh
{0x15, 0x0A}, //bTraceStep
{0x16, 0x06}, //bTraceStepLmt
{0x17, 0x08}, //bBlkPtBndWdhTh
{0x18, 0x30}, //bBlkPtBndCntTh
{0x19, 0x14}, //bBlkPtBndCntLmt
{0x1a, 0xa0}, //bBrtUnStbYThhi
{0x1b, 0x18}, //bBrtUnStbYThLo
{0x1c, 0x10}, //bBrtUnStbCntTh
{0x1d, 0x40}, //bGgainDef
{0x1e, 0x00}, //iOut2AglMaxLmt
{0x1f, 0xc8},
{0x20, 0x00}, //iOut2AglMinLmt
{0x21, 0x9b},
{0x22, 0x00}, //iOut1AglMaxLmt
{0x23, 0xd2},
{0x24, 0x00}, //iOut1AglMinLmt
{0x25, 0xa0},
{0x26, 0x00}, //iInAglMaxLmt
{0x27, 0xff},
{0x28, 0x00}, //iInAglMinLmt
{0x29, 0x55},
{0x2a, 0x00}, //iDakAglMaxLmt
{0x2b, 0xd2},
{0x2c, 0x00}, //iDakAglMinLmt
{0x2d, 0x55},
{0x2e, 0x00}, //dwOut2LmtTh
{0x2f, 0x02},
{0x30, 0x0f},
{0x31, 0x58},
{0x32, 0x00}, //dwOut2StrLmtTh
{0x33, 0x02},
{0x34, 0x51},
{0x35, 0x43},
{0x36, 0x00}, //dwOut1LmtTh
{0x37, 0x09},
{0x38, 0x45},
{0x39, 0x0c},
{0x3a, 0x00}, //dwOut1StrLmtTh
{0x3b, 0x12},
{0x3c, 0x8a},
{0x3d, 0x18},
{0x3e, 0x01}, //dwDakStrLmtTh
{0x3f, 0xee},
{0x40, 0x62},
{0x41, 0x80},
{0x42, 0x02}, //dwDakLmtTh
{0x43, 0x51},
{0x44, 0x43},
{0x45, 0x00},
{0x46, 0x00}, //dwOutdoorCondTh
{0x47, 0x09},
{0x48, 0x45},
{0x49, 0x0c},
{0x4a, 0x00}, //dwOutdoorCondOutTh
{0x4b, 0x12},
{0x4c, 0x8a},
{0x4d, 0x18},
{0x4e, 0x00}, //bRgOfs
{0x4f, 0x00}, //bBgOfs
{0x50, 0x55}, //aSsdBlkWgt
{0x51, 0x55},
{0x52, 0x55},
{0x53, 0x55},
{0x54, 0x55},
{0x55, 0x55},
{0x56, 0x55},
{0x57, 0x55},
{0x58, 0x55},
{0x59, 0x55},
{0x5a, 0x55},
{0x5b, 0x55},
{0x5c, 0x55},
{0x5d, 0x55},
{0x5e, 0x55},
{0x5f, 0x55},
{0x60, 0x55},
{0x61, 0x55},
{0x62, 0x55},
{0x63, 0x55},
{0x64, 0x55},
{0x65, 0x55},
{0x66, 0x55},
{0x67, 0x55},
{0x68, 0x55},
{0x69, 0x55},
{0x6a, 0x55},
{0x6b, 0x16}, //aInWhtRgnBg_a00
{0x6c, 0x25},
{0x6d, 0x29},
{0x6e, 0x2d},
{0x6f, 0x33},
{0x70, 0x39},
{0x71, 0x42},
{0x72, 0x4e},
{0x73, 0x59},
{0x74, 0x64},
{0x75, 0xad},
{0x76, 0xC0}, //aInWhtRgnRgLeftLmt_a00
{0x77, 0x83},
{0x78, 0x71},
{0x79, 0x5C},
{0x7a, 0x4E},
{0x7b, 0x45},
{0x7c, 0x3e},
{0x7d, 0x3a},
{0x7e, 0x38},
{0x7f, 0x35},
{0x80, 0x2a},
{0x81, 0xD0}, //aInWhtRgnRgRightLmt_a00
{0x82, 0xA7},
{0x83, 0x9F},
{0x84, 0x95},
{0x85, 0x86},
{0x86, 0x73},
{0x87, 0x62},
{0x88, 0x4f},
{0x89, 0x45},
{0x8a, 0x3f},
{0x8b, 0x31},
{0x8c, 0x16}, //aInWhtLineBg_a00
{0x8d, 0x24},
{0x8e, 0x27},
{0x8f, 0x2b},
{0x90, 0x2e},
{0x91, 0x32},
{0x92, 0x37},
{0x93, 0x3e},
{0x94, 0x47},
{0x95, 0x62},
{0x96, 0xad},
{0x97, 0xC8}, //aInWhtLineRg_a00
{0x98, 0x9F},
{0x99, 0x90},
{0x9a, 0x83},
{0x9b, 0x73},
{0x9c, 0x68},
{0x9d, 0x5A},
{0x9e, 0x50},
{0x9f, 0x45},
{0xa0, 0x3b},
{0xa1, 0x2d},
{0xa2, 0x32}, //aInTgtAngle_a00
{0xa3, 0x37}, //01
{0xa4, 0x41}, //02
{0xa5, 0x46}, //03
{0xa6, 0x4b}, //04
{0xa7, 0x50}, //05
{0xa8, 0x5a}, //06
{0xa9, 0x6e}, //07
{0xaa, 0x08}, //aInRgTgtOfs_a00
{0xab, 0x08}, //01
{0xac, 0x08}, //02
{0xad, 0x08}, //03
{0xae, 0x00}, //04
{0xaf, 0x00}, //05
{0xb0, 0x00}, //06
{0xb1, 0x00}, //07
{0xb2, 0x95}, //aInBgTgtOfs_a00
{0xb3, 0x95}, //01
{0xb4, 0x95}, //02
{0xb5, 0x95}, //03
{0xb6, 0x00}, //04
{0xb7, 0x00}, //05
{0xb8, 0x00}, //06
{0xb9, 0x00}, //07
{0xba, 0x00}, //aInLeftOfs_a00
{0xbb, 0x00}, //01
{0xbc, 0x00}, //02
{0xbd, 0x00}, //03
{0xbe, 0x00}, //04
{0xbf, 0x00}, //05
{0xc0, 0x00}, //06
{0xc1, 0x00}, //07
{0xc2, 0x00}, //aInRightOfs_a00
{0xc3, 0x00}, //01
{0xc4, 0x00}, //02
{0xc5, 0x00}, //03
{0xc6, 0x00}, //04
{0xc7, 0x00}, //05
{0xc8, 0x00}, //06
{0xc9, 0x00}, //07
{0xca, 0x00}, //aInCorWhtPtWgt_a00
{0xcb, 0x00}, //01
{0xcc, 0x00}, //02
{0xcd, 0x00}, //03
{0xce, 0x20}, //04
{0xcf, 0x80}, //05
{0xd0, 0x20}, //06
{0xd1, 0x00}, //07
{0xd2, 0x05}, //aInYlvlWgt
{0xd3, 0x20},
{0xd4, 0x30},
{0xd5, 0x28},
{0xd6, 0x24},
{0xd7, 0x20},
{0xd8, 0x1a},
{0xd9, 0x14},
{0xda, 0x14},
{0xdb, 0x0f},
{0xdc, 0x0a},
{0xdd, 0x0a},
{0xde, 0x0a},
{0xdf, 0x0a},
{0xe0, 0x0a},
{0xe1, 0x0a},
{0xe2, 0x28}, //aInHiTmpWgtHiLmt_a00_n00
{0xe3, 0x28}, //01
{0xe4, 0x28}, //02
{0xe5, 0x28}, //03
{0xe6, 0x28}, //04
{0xe7, 0x24}, //05
{0xe8, 0x20}, //06
{0xe9, 0x1c}, //07
{0xea, 0x18}, //08
{0xeb, 0x14}, //09
{0xec, 0x14}, //10
{0xed, 0x0a}, //aInHiTmpWgtLoLmt_a00_n00
{0xee, 0x0a}, //01
{0xef, 0x0a}, //02
{0xf0, 0x0a}, //03
{0xf1, 0x09}, //04
{0xf2, 0x08}, //05
{0xf3, 0x07}, //06
{0xf4, 0x07}, //07
{0xf5, 0x06}, //08
{0xf6, 0x06}, //09
{0xf7, 0x05}, //10
{0xf8, 0x64}, //aInHiTmpWgtRatio
{0xf9, 0x05}, //bInDyAglDiffMin
{0xfa, 0x32}, //bInDyAglDiffMax
{0xfb, 0x28}, //bInDyMinMaxTempWgt
{0xfc, 0x64}, //bInSplTmpAgl
{0xfd, 0x1E}, //bInSplTmpAglOfs
{0x0e, 0x00}, //burst end
{0x03, 0xc6},
{0x0e, 0x01}, //burst start
{0x10, 0x1e}, //bInSplTmpBpCntTh
{0x11, 0x50}, //bInSplTmpPtCorWgt
{0x12, 0x1e}, //bInSplTmpPtWgtRatio
{0x13, 0x1E}, //bInSplTmpAglMinLmt
{0x14, 0x4B}, //bInSplTmpAglMaxLmt
{0x15, 0x1e}, //bInSplTmpDistTh
{0x16, 0x08}, //bInYlvlMin
{0x17, 0xe0}, //bInYlvlMax
{0x18, 0x46}, //bInRgainMin
{0x19, 0x90}, //bInRgainMax
{0x1a, 0x40}, //bInBgainMin
{0x1b, 0xa4}, //bInBgainMax
{0x1c, 0x0A}, //bInCntLmtHiTh
{0x1d, 0x0A}, //bInCntLmtLoTh
{0x1e, 0x14}, //aOutWhtRgnBg
{0x1f, 0x29},
{0x20, 0x2E},
{0x21, 0x34},
{0x22, 0x3B},
{0x23, 0x43},
{0x24, 0x4A},
{0x25, 0x51},
{0x26, 0x59},
{0x27, 0x61},
{0x28, 0xA0},
{0x29, 0xA3}, //aOutWhtRgnRgLeftLmt
{0x2a, 0x5C},
{0x2b, 0x58},
{0x2c, 0x53},
{0x2d, 0x4d},
{0x2e, 0x4a},
{0x2f, 0x48},
{0x30, 0x46},
{0x31, 0x45},
{0x32, 0x44},
{0x33, 0x40},
{0x34, 0xAE}, //aOutWhtRgnRgRightLmt
{0x35, 0x6C},
{0x36, 0x6A},
{0x37, 0x68},
{0x38, 0x66},
{0x39, 0x63},
{0x3a, 0x60},
{0x3b, 0x5D},
{0x3c, 0x57},
{0x3d, 0x54},
{0x3e, 0x4E},
{0x3f, 0x14}, //aOutWhtLineBg
{0x40, 0x2A},
{0x41, 0x30},
{0x42, 0x37},
{0x43, 0x3E},
{0x44, 0x46},
{0x45, 0x4D},
{0x46, 0x54},
{0x47, 0x5B},
{0x48, 0x61},
{0x49, 0xA0},
{0x4a, 0xA9}, //aOutWhtLineRg
{0x4b, 0x63},
{0x4c, 0x60},
{0x4d, 0x5B},
{0x4e, 0x58},
{0x4f, 0x54},
{0x50, 0x52},
{0x51, 0x4F},
{0x52, 0x4C},
{0x53, 0x4B},
{0x54, 0x47},
{0x55, 0x50}, //aOutTgtAngle_a00
{0x56, 0x55}, //01
{0x57, 0x5a}, //02
{0x58, 0x5f}, //03
{0x59, 0x64}, //04
{0x5a, 0x69}, //05
{0x5b, 0x6e}, //06
{0x5c, 0x73}, //07
{0x5d, 0x00}, //aOutRgTgtOfs_a00
{0x5e, 0x00}, //01
{0x5f, 0x00}, //02
{0x60, 0x00}, //03
{0x61, 0x00}, //04
{0x62, 0x00}, //05
{0x63, 0x00}, //06
{0x64, 0x00}, //07
{0x65, 0x00}, //aOutBgTgtOfs_a00_n00
{0x66, 0x00}, //01
{0x67, 0x00}, //02
{0x68, 0x00}, //03
{0x69, 0x00}, //04
{0x6a, 0x00}, //05
{0x6b, 0x00}, //06
{0x6c, 0x00}, //07
{0x6d, 0x00}, //aOutLeftOfs_a00_n00
{0x6e, 0x00}, //01
{0x6f, 0x00}, //02
{0x70, 0x00}, //03
{0x71, 0x00}, //04
{0x72, 0x00}, //05
{0x73, 0x00}, //06
{0x74, 0x00}, //07
{0x75, 0x00}, //aOutRightOfs_a00_n00
{0x76, 0x00}, //01
{0x77, 0x00}, //02
{0x78, 0x00}, //03
{0x79, 0x00}, //04
{0x7a, 0x00}, //05
{0x7b, 0x00}, //06
{0x7c, 0x00}, //07
{0x7d, 0x00}, //aOutCorWhtPtWgt_a00
{0x7e, 0x00}, //01
{0x7f, 0x00}, //02
{0x80, 0x11}, //03
{0x81, 0x22}, //04
{0x82, 0x22}, //05
{0x83, 0x33}, //06
{0x84, 0x33}, //07
{0x85, 0x12}, //aOutYlvlWgt
{0x86, 0x1e},
{0x87, 0x28},
{0x88, 0x2d},
{0x89, 0x2d},
{0x8a, 0x12},
{0x8b, 0x0a},
{0x8c, 0x15},
{0x8d, 0x1f},
{0x8e, 0x16},
{0x8f, 0x15},
{0x90, 0x0a},
{0x91, 0x0a},
{0x92, 0x0a},
{0x93, 0x0a},
{0x94, 0x0a},
{0x95, 0x20}, //aOutHiTmpWgtHiLmt_a00_n00
{0x96, 0x1e}, //01
{0x97, 0x1c}, //02
{0x98, 0x1e}, //03
{0x99, 0x1e}, //04
{0x9a, 0x20}, //05
{0x9b, 0x23}, //06
{0x9c, 0x24}, //07
{0x9d, 0x27}, //08
{0x9e, 0x28}, //09
{0x9f, 0x29}, //10
{0xa0, 0x08}, //aOutHiTmpWgtLoLmt_a00_n00
{0xa1, 0x08}, //01
{0xa2, 0x08}, //02
{0xa3, 0x0d}, //03
{0xa4, 0x10}, //04
{0xa5, 0x12}, //05
{0xa6, 0x12}, //06
{0xa7, 0x12}, //07
{0xa8, 0x13}, //08
{0xa9, 0x13}, //09
{0xaa, 0x14}, //10
{0xab, 0x64}, //aOutHiTmpWgtRatio
{0xac, 0x01}, //bOutDyAglDiffMin
{0xad, 0x14}, //bOutDyAglDiffMax
{0xae, 0x19}, //bOutDyMinMaxTempWgt
{0xaf, 0x64}, //bOutSplTmpAgl
{0xb0, 0x1E}, //bOutSplTmpAglOfs
{0xb1, 0x1e}, //bOutSplTmpBpCntTh
{0xb2, 0x1E}, //bOutSplTmpPtCorWgt
{0xb3, 0x50}, //bOutSplTmpPtWgtRatio
{0xb4, 0x14}, //bOutSplTmpAglMinLmt
{0xb5, 0x3c}, //bOutSplTmpAglMaxLmt
{0xb6, 0x1e}, //bOutSplTmpDistTh
{0xb7, 0x08}, //bOutYlvlMin
{0xb8, 0xd2}, //bOutYlvlMax
{0xb9, 0x60}, //bOutRgainMin
{0xba, 0x66}, //bOutRgainMax
{0xbb, 0x66}, //bOutBgainMin
{0xbc, 0x80}, //bOutBgainMax
{0xbd, 0x0A}, //bOutCntLmtHiTh
{0xbe, 0x0A}, //bOutCntLmtLoTh
{0x0e, 0x00}, //burst end

{0x03, 0xd4},
{0x31, 0x5e}, //out2 r_min
{0x32, 0x66}, //out2 r_max
{0x35, 0x68}, //out2 b_min
{0x36, 0x84}, //out2 b_max
{0x37, 0x5e}, //out1 r_min
{0x38, 0x6a}, //out1 r_max
{0x3b, 0x68}, //out1 b_min
{0x3c, 0x86}, //out1 b_max
{0x3d, 0x46}, //in r_min
{0x3e, 0x90}, //in r_max
{0x41, 0x40}, //in b_min
{0x42, 0xa7}, //in b_max
{0x03, 0xc9},
{0x42, 0x68}, //Rgain (16a2)
{0x43, 0x40}, //Ggain
{0x44, 0x70}, //Bgain (16a4)
///////////////////////////////////////////
// CD Page (Color ratio)
///////////////////////////////////////////
{0x03, 0xCD},
{0x47, 0x06},
{0x10, 0xB8}, //enable

///////////////////////////////////////////
// Cf Page Adaptive Mode
///////////////////////////////////////////
{0x03, 0xcf}, //page cf
{0x0e, 0x01}, //burst_start
{0x10, 0x00}, //control

{0x11, 0x05},
{0x12, 0x01},

{0x13, 0x02}, //Y_LUM_MAX
{0x14, 0x82},
{0x15, 0xb3},
{0x16, 0x40},

{0x17, 0x00}, //Y_LUM mid1
{0x18, 0xcf},
{0x19, 0x06},
{0x1a, 0x0c},

{0x1b, 0x00}, //Y_LUM mid2
{0x1c, 0x09},
{0x1d, 0x45},
{0x1e, 0x0c},
{0x1f, 0x00}, //Y_LUM min
{0x20, 0x00},
{0x21, 0x20},
{0x22, 0xF5},

{0x23, 0x78}, //CTEM high2
{0x24, 0x58}, //CTEM middle
{0x25, 0x38}, //CTEM low

{0x26, 0x60}, //YCON high
{0x27, 0x40}, //YCON middle
{0x28, 0x01}, //YCON low

{0x29, 0x00}, //Y_LUM max_TH
{0x2a, 0x00},
{0x2b, 0x00},
{0x2c, 0x00},

{0x2d, 0x00}, //Y_LUM mid1_TH
{0x2e, 0xbc},
{0x2f, 0x7b},
{0x30, 0xf4},

{0x31, 0x00}, //Y_LUM mid2_TH
{0x32, 0x00},
{0x33, 0x00},
{0x34, 0x00},

{0x35, 0x00}, //Y_LUM min_TH
{0x36, 0x00},
{0x37, 0x00},
{0x38, 0x00},

{0x39, 0x00}, //CTEM high_TH
{0x3a, 0x14}, //CTEM middle_TH
{0x3b, 0x00}, //CTEM low_TH

{0x3c, 0x00}, //YCON high_TH
{0x3d, 0x00}, //YCON middle_TH
{0x3e, 0x00}, //YCON low_TH

////////////////////////////////////////////
// CF Page Adaptive Y Target
///////////////////////////////////////////
{0x3f, 0x28}, //YLVL_00
{0x40, 0x28}, //YLVL_01
{0x41, 0x28}, //YLVL_02
{0x42, 0x2e}, //YLVL_03
{0x43, 0x2e}, //YLVL_04
{0x44, 0x2e}, //YLVL_05
{0x45, 0x33}, //YLVL_06
{0x46, 0x33}, //YLVL_07
{0x47, 0x33}, //YLVL_08
{0x48, 0x33}, //YLVL_09
{0x49, 0x33}, //YLVL_10
{0x4a, 0x33}, //YLVL_11

///////////////////////////////////////////
// CF Page Adaptive Y Contrast (4b~56)
///////////////////////////////////////////
{0x4b, 0x80}, //YCON_00
{0x4c, 0x80}, //YCON_01
{0x4d, 0x80}, //YCON_02
{0x4e, 0x80}, //YCON_03
{0x4f, 0x80}, //YCON_04
{0x50, 0x80}, //YCON_05
{0x51, 0x80}, //YCON_06
{0x52, 0x80}, //YCON_07
{0x53, 0x80}, //YCON_08
{0x54, 0x80}, //YCON_09
{0x55, 0x80}, //YCON_10
{0x56, 0x80}, //YCON_11
///////////////////////////////////////////
// CF Page Adaptive Y OFFSET (57~62)
///////////////////////////////////////////
{0x57, 0x00}, //y offset 0
{0x58, 0x00}, //y offset 1
{0x59, 0x00}, //y offset 2
{0x5a, 0x00}, //y offset 3
{0x5b, 0x00}, //y offset 4
{0x5c, 0x00}, //y offset 5
{0x5d, 0x00}, //y offset 6
{0x5e, 0x00}, //y offset 7
{0x5f, 0x00}, //y offset 8
{0x60, 0x00}, //y offset 9
{0x61, 0x00}, //y offset 10
{0x62, 0x00}, //y offset 11
///////////////////////////////////////////
// CF~D0~D1 Page Adaptive GAMMA
///////////////////////////////////////////
{0x63, 0x00}, //GMA00
{0x64, 0x02},
{0x65, 0x04},
{0x66, 0x0a},
{0x67, 0x11},
{0x68, 0x23},
{0x69, 0x36},
{0x6a, 0x46},
{0x6b, 0x57},
{0x6c, 0x64},
{0x6d, 0x6f},
{0x6e, 0x78},
{0x6f, 0x80},
{0x70, 0x87},
{0x71, 0x8c},
{0x72, 0x91},
{0x73, 0x96},
{0x74, 0x9a},
{0x75, 0x9f},
{0x76, 0xa3},
{0x77, 0xa8},
{0x78, 0xaf},
{0x79, 0xb6},
{0x7a, 0xbc},
{0x7b, 0xc6},
{0x7c, 0xd1},
{0x7d, 0xdb},
{0x7e, 0xe2},
{0x7f, 0xe9},
{0x80, 0xf0},
{0x81, 0xf6},
{0x82, 0xfa},
{0x83, 0xfe},
{0x84, 0xff},

{0x85, 0x00}, //GMA01
{0x86, 0x02},
{0x87, 0x04},
{0x88, 0x0a},
{0x89, 0x11},
{0x8a, 0x23},
{0x8b, 0x36},
{0x8c, 0x46},
{0x8d, 0x57},
{0x8e, 0x64},
{0x8f, 0x6f},
{0x90, 0x78},
{0x91, 0x80},
{0x92, 0x87},
{0x93, 0x8c},
{0x94, 0x91},
{0x95, 0x96},
{0x96, 0x9a},
{0x97, 0x9f},
{0x98, 0xa3},
{0x99, 0xa8},
{0x9a, 0xaf},
{0x9b, 0xb6},
{0x9c, 0xbc},
{0x9d, 0xc6},
{0x9e, 0xd1},
{0x9f, 0xdb},
{0xa0, 0xe2},
{0xa1, 0xe9},
{0xa2, 0xf0},
{0xa3, 0xf6},
{0xa4, 0xfa},
{0xa5, 0xfe},
{0xa6, 0xff},

{0xa7, 0x00}, //GMA02
{0xa8, 0x02},
{0xa9, 0x04},
{0xaa, 0x0a},
{0xab, 0x11},
{0xac, 0x23},
{0xad, 0x36},
{0xae, 0x46},
{0xaf, 0x57},
{0xb0, 0x64},
{0xb1, 0x6f},
{0xb2, 0x78},
{0xb3, 0x80},
{0xb4, 0x87},
{0xb5, 0x8c},
{0xb6, 0x91},
{0xb7, 0x96},
{0xb8, 0x9a},
{0xb9, 0x9f},
{0xba, 0xa3},
{0xbb, 0xa8},
{0xbc, 0xaf},
{0xbd, 0xb6},
{0xbe, 0xbc},
{0xbf, 0xc6},
{0xc0, 0xd1},
{0xc1, 0xdb},
{0xc2, 0xe2},
{0xc3, 0xe9},
{0xc4, 0xf0},
{0xc5, 0xf6},
{0xc6, 0xfa},
{0xc7, 0xfe},
{0xc8, 0xff},

{0xc9, 0x00}, //GMA03
{0xca, 0x02},
{0xcb, 0x04},
{0xcc, 0x0a},
{0xcd, 0x15},
{0xce, 0x24},
{0xcf, 0x34},
{0xd0, 0x44},
{0xd1, 0x51},
{0xd2, 0x5f},
{0xd3, 0x6b},
{0xd4, 0x75},
{0xd5, 0x7d},
{0xd6, 0x85},
{0xd7, 0x8a},
{0xd8, 0x8f},
{0xd9, 0x93},
{0xda, 0x98},
{0xdb, 0x9c},
{0xdc, 0xa0},
{0xdd, 0xa5},
{0xde, 0xab},
{0xdf, 0xb2},
{0xe0, 0xba},
{0xe1, 0xc6},
{0xe2, 0xd3},
{0xe3, 0xde},
{0xe4, 0xe7},
{0xe5, 0xed},
{0xe6, 0xf3},
{0xe7, 0xf7},
{0xe8, 0xfa},
{0xe9, 0xfe},
{0xea, 0xff},

{0xeb, 0x00}, //GMA04
{0xec, 0x02},
{0xed, 0x04},
{0xee, 0x0a},
{0xef, 0x15},
{0xf0, 0x24},
{0xf1, 0x34},
{0xf2, 0x44},
{0xf3, 0x51},
{0xf4, 0x5f},
{0xf5, 0x6b},
{0xf6, 0x75},
{0xf7, 0x7d},
{0xf8, 0x85},
{0xf9, 0x8a},
{0xfa, 0x8f},
{0xfb, 0x93},
{0xfc, 0x98},
{0xfd, 0x9c},
{0x0e, 0x00}, //burst end
{0x03, 0xd0}, //Page d0
{0x0e, 0x01}, //burst start
{0x10, 0xa0},
{0x11, 0xa5},
{0x12, 0xab},
{0x13, 0xb2},
{0x14, 0xba},
{0x15, 0xc6},
{0x16, 0xd3},
{0x17, 0xde},
{0x18, 0xe7},
{0x19, 0xed},
{0x1a, 0xf3},
{0x1b, 0xf7},
{0x1c, 0xfa},
{0x1d, 0xfe},
{0x1e, 0xff},

{0x1f, 0x00}, //GMA05
{0x20, 0x02},
{0x21, 0x04},
{0x22, 0x0a},
{0x23, 0x15},
{0x24, 0x24},
{0x25, 0x34},
{0x26, 0x44},
{0x27, 0x51},
{0x28, 0x5f},
{0x29, 0x6b},
{0x2a, 0x75},
{0x2b, 0x7d},
{0x2c, 0x85},
{0x2d, 0x8a},
{0x2e, 0x8f},
{0x2f, 0x93},
{0x30, 0x98},
{0x31, 0x9c},
{0x32, 0xa0},
{0x33, 0xa5},
{0x34, 0xab},
{0x35, 0xb2},
{0x36, 0xba},
{0x37, 0xc6},
{0x38, 0xd3},
{0x39, 0xde},
{0x3a, 0xe7},
{0x3b, 0xed},
{0x3c, 0xf3},
{0x3d, 0xf7},
{0x3e, 0xfa},
{0x3f, 0xfe},
{0x40, 0xff},

{0x41, 0x00}, //GMA06
{0x42, 0x01},
{0x43, 0x04},
{0x44, 0x0a},
{0x45, 0x14},
{0x46, 0x23},
{0x47, 0x30},
{0x48, 0x40},
{0x49, 0x4d},
{0x4a, 0x57},
{0x4b, 0x62},
{0x4c, 0x6b},
{0x4d, 0x73},
{0x4e, 0x7a},
{0x4f, 0x82},
{0x50, 0x89},
{0x51, 0x8e},
{0x52, 0x94},
{0x53, 0x99},
{0x54, 0x9e},
{0x55, 0xa2},
{0x56, 0xaa},
{0x57, 0xb1},
{0x58, 0xb9},
{0x59, 0xc4},
{0x5a, 0xce},
{0x5b, 0xd6},
{0x5c, 0xdc},
{0x5d, 0xe1},
{0x5e, 0xe6},
{0x5f, 0xec},
{0x60, 0xf1},
{0x61, 0xf5},
{0x62, 0xf9},

{0x63, 0x00}, //GMA07
{0x64, 0x01},
{0x65, 0x04},
{0x66, 0x0a},
{0x67, 0x14},
{0x68, 0x23},
{0x69, 0x30},
{0x6a, 0x40},
{0x6b, 0x4d},
{0x6c, 0x57},
{0x6d, 0x62},
{0x6e, 0x6b},
{0x6f, 0x73},
{0x70, 0x7a},
{0x71, 0x82},
{0x72, 0x89},
{0x73, 0x8e},
{0x74, 0x94},
{0x75, 0x99},
{0x76, 0x9e},
{0x77, 0xa2},
{0x78, 0xaa},
{0x79, 0xb1},
{0x7a, 0xb9},
{0x7b, 0xc4},
{0x7c, 0xce},
{0x7d, 0xd6},
{0x7e, 0xdc},
{0x7f, 0xe1},
{0x80, 0xe6},
{0x81, 0xec},
{0x82, 0xf1},
{0x83, 0xf5},
{0x84, 0xf9},

{0x85, 0x00}, //GMA08
{0x86, 0x01},
{0x87, 0x04},
{0x88, 0x0a},
{0x89, 0x14},
{0x8a, 0x23},
{0x8b, 0x30},
{0x8c, 0x40},
{0x8d, 0x4d},
{0x8e, 0x57},
{0x8f, 0x62},
{0x90, 0x6b},
{0x91, 0x73},
{0x92, 0x7a},
{0x93, 0x82},
{0x94, 0x89},
{0x95, 0x8e},
{0x96, 0x94},
{0x97, 0x99},
{0x98, 0x9e},
{0x99, 0xa2},
{0x9a, 0xaa},
{0x9b, 0xb1},
{0x9c, 0xb9},
{0x9d, 0xc4},
{0x9e, 0xce},
{0x9f, 0xd6},
{0xa0, 0xdc},
{0xa1, 0xe1},
{0xa2, 0xe6},
{0xa3, 0xec},
{0xa4, 0xf1},
{0xa5, 0xf5},
{0xa6, 0xf9},

{0xa7, 0x00}, //GMA09
{0xa8, 0x01},
{0xa9, 0x04},
{0xaa, 0x0a},
{0xab, 0x14},
{0xac, 0x23},
{0xad, 0x30},
{0xae, 0x40},
{0xaf, 0x4d},
{0xb0, 0x57},
{0xb1, 0x62},
{0xb2, 0x6b},
{0xb3, 0x73},
{0xb4, 0x7a},
{0xb5, 0x82},
{0xb6, 0x89},
{0xb7, 0x8e},
{0xb8, 0x94},
{0xb9, 0x99},
{0xba, 0x9e},
{0xbb, 0xa2},
{0xbc, 0xaa},
{0xbd, 0xb1},
{0xbe, 0xb9},
{0xbf, 0xc4},
{0xc0, 0xce},
{0xc1, 0xd6},
{0xc2, 0xdc},
{0xc3, 0xe1},
{0xc4, 0xe6},
{0xc5, 0xec},
{0xc6, 0xf1},
{0xc7, 0xf5},
{0xc8, 0xf9},

{0xc9, 0x00}, //GMA10
{0xca, 0x01},
{0xcb, 0x04},
{0xcc, 0x0a},
{0xcd, 0x14},
{0xce, 0x23},
{0xcf, 0x30},
{0xd0, 0x40},
{0xd1, 0x4d},
{0xd2, 0x57},
{0xd3, 0x62},
{0xd4, 0x6b},
{0xd5, 0x73},
{0xd6, 0x7a},
{0xd7, 0x82},
{0xd8, 0x89},
{0xd9, 0x8e},
{0xda, 0x94},
{0xdb, 0x99},
{0xdc, 0x9e},
{0xdd, 0xa2},
{0xde, 0xaa},
{0xdf, 0xb1},
{0xe0, 0xb9},
{0xe1, 0xc4},
{0xe2, 0xce},
{0xe3, 0xd6},
{0xe4, 0xdc},
{0xe5, 0xe1},
{0xe6, 0xe6},
{0xe7, 0xec},
{0xe8, 0xf1},
{0xe9, 0xf5},
{0xea, 0xf9},

{0xeb, 0x00}, //GMA11
{0xec, 0x01},
{0xed, 0x04},
{0xee, 0x0a},
{0xef, 0x14},
{0xf0, 0x23},
{0xf1, 0x30},
{0xf2, 0x40},
{0xf3, 0x4d},
{0xf4, 0x57},
{0xf5, 0x62},
{0xf6, 0x6b},
{0xf7, 0x73},
{0xf8, 0x7a},
{0xf9, 0x82},
{0xfa, 0x89},
{0xfb, 0x8e},
{0xfc, 0x94},
{0xfd, 0x99},
{0x0e, 0x00}, //burst_end
{0x03, 0xd1}, //Page d1
{0x0e, 0x01}, //burst_start
{0x10, 0x9e},
{0x11, 0xa2},
{0x12, 0xaa},
{0x13, 0xb1},
{0x14, 0xb9},
{0x15, 0xc4},
{0x16, 0xce},
{0x17, 0xd6},
{0x18, 0xdc},
{0x19, 0xe1},
{0x1a, 0xe6},
{0x1b, 0xec},
{0x1c, 0xf1},
{0x1d, 0xf5},
{0x1e, 0xf9},

///////////////////////////////////////////
// D1 Page Adaptive Y Target delta (1f~2a)
///////////////////////////////////////////
{0x1f, 0x80}, //Y target delta 0
{0x20, 0x80}, //Y target delta 1
{0x21, 0x80}, //Y target delta 2
{0x22, 0x80}, //Y target delta 3
{0x23, 0x80}, //Y target delta 4
{0x24, 0x80}, //Y target delta 5
{0x25, 0x80}, //Y target delta 6
{0x26, 0x80}, //Y target delta 7
{0x27, 0x80}, //Y target delta 8
{0x28, 0x80}, //Y target delta 9
{0x29, 0x80}, //Y target delta 10
{0x2a, 0x80}, //Y target delta 11
///////////////////////////////////////////
// D1 Page Adaptive R/B saturation
///////////////////////////////////////////
//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x88}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x78}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11

///////////////////////////////////////////
// D1 Page Adaptive CMC
///////////////////////////////////////////
{0x43, 0x2f}, //CMC_00
{0x44, 0x68},
{0x45, 0x29},
{0x46, 0x01},
{0x47, 0x19},
{0x48, 0x6c},
{0x49, 0x13},
{0x4a, 0x13},
{0x4b, 0x1e},
{0x4c, 0x71},

{0x4d, 0x2f}, //CMC_01
{0x4e, 0x68},
{0x4f, 0x29},
{0x50, 0x01},
{0x51, 0x19},
{0x52, 0x6c},
{0x53, 0x13},
{0x54, 0x13},
{0x55, 0x1e},
{0x56, 0x71},

{0x57, 0x2f}, //CMC_02
{0x58, 0x68},
{0x59, 0x29},
{0x5a, 0x01},
{0x5b, 0x19},
{0x5c, 0x6c},
{0x5d, 0x13},
{0x5e, 0x13},
{0x5f, 0x1e},
{0x60, 0x71},

{0x61, 0x2f}, //CMC_03
{0x62, 0x6a},
{0x63, 0x32},
{0x64, 0x08},
{0x65, 0x1a},
{0x66, 0x6c},
{0x67, 0x12},
{0x68, 0x03},
{0x69, 0x30},
{0x6a, 0x73},

{0x6b, 0x2f},	//CMC_04
{0x6c, 0x68},
{0x6d, 0x29},
{0x6e, 0x01},
{0x6f, 0x17},
{0x70, 0x6c},
{0x71, 0x15},
{0x72, 0x01},
{0x73, 0x30},
{0x74, 0x71},

{0x75, 0x2f},	//CMC_05
{0x76, 0x68},
{0x77, 0x29},
{0x78, 0x01},
{0x79, 0x17},
{0x7a, 0x6c},
{0x7b, 0x15},
{0x7c, 0x01},
{0x7d, 0x30},
{0x7e, 0x71},

{0x7f, 0x2f}, //CMC_06
{0x80, 0x6a},
{0x81, 0x3c},
{0x82, 0x12},
{0x83, 0x21},
{0x84, 0x70},
{0x85, 0x0f},
{0x86, 0x06},
{0x87, 0x2d},
{0x88, 0x73},

{0x89, 0x2f}, //CMC_07
{0x8a, 0x6a},
{0x8b, 0x3c},
{0x8c, 0x12},
{0x8d, 0x21},
{0x8e, 0x70},
{0x8f, 0x0f},
{0x90, 0x06},
{0x91, 0x2d},
{0x92, 0x73},

{0x93, 0x2f}, //CMC_08
{0x94, 0x6a},
{0x95, 0x3c},
{0x96, 0x12},
{0x97, 0x21},
{0x98, 0x70},
{0x99, 0x0f},
{0x9a, 0x06},
{0x9b, 0x2d},
{0x9c, 0x73},

{0x9d, 0x2f}, //CMC_09
{0x9e, 0x6a},
{0x9f, 0x3c},
{0xa0, 0x12},
{0xa1, 0x21},
{0xa2, 0x70},
{0xa3, 0x0f},
{0xa4, 0x06},
{0xa5, 0x2d},
{0xa6, 0x73},

{0xa7, 0x2f}, //CMC_10
{0xa8, 0x6a},
{0xa9, 0x3c},
{0xaa, 0x12},
{0xab, 0x21},
{0xac, 0x70},
{0xad, 0x0f},
{0xae, 0x06},
{0xaf, 0x2d},
{0xb0, 0x73},

{0xb1, 0x2f}, //CMC_11
{0xb2, 0x6a},
{0xb3, 0x3c},
{0xb4, 0x12},
{0xb5, 0x21},
{0xb6, 0x70},
{0xb7, 0x0f},
{0xb8, 0x06},
{0xb9, 0x2d},
{0xba, 0x73},

///////////////////////////////////////////
// D1~D2~D3 Page Adaptive Multi-CMC
///////////////////////////////////////////
//MCMC_00
{0xbb, 0x80}, //GLB_GAIN
{0xbc, 0x00}, //GLB_HUE
{0xbd, 0x80}, //0_GAIN
{0xbe, 0x00}, //0_HUE
{0xbf, 0x35}, //0_CENTER
{0xc0, 0x13}, //0_DELTA
{0xc1, 0x80}, //1_GAIN
{0xc2, 0x00}, //1_HUE
{0xc3, 0x76}, //1_CENTER
{0xc4, 0x1c}, //1_DELTA
{0xc5, 0x80}, //2_GAIN
{0xc6, 0x00}, //2_HUE
{0xc7, 0xac}, //2_CENTER
{0xc8, 0x1c}, //2_DELTA
{0xc9, 0x80}, //3_GAIN
{0xca, 0x00}, //3_HUE
{0xcb, 0x4c}, //3_CENTER
{0xcc, 0x20}, //3_DELTA
{0xcd, 0x80}, //4_GAIN
{0xce, 0x00}, //4_HUE
{0xcf, 0x76}, //4_CENTER
{0xd0, 0x1c}, //4_DELTA
{0xd1, 0x80}, //5_GAIN
{0xd2, 0x00}, //5_HUE
{0xd3, 0x52}, //5_CENTER
{0xd4, 0x1d}, //5_DELTA

//MCMC_01
{0xd5, 0x80}, //GLB_GAIN
{0xd6, 0x00}, //GLB_HUE
{0xd7, 0x80}, //0_GAIN
{0xd8, 0x00}, //0_HUE
{0xd9, 0x35}, //0_CENTER
{0xda, 0x13}, //0_DELTA
{0xdb, 0x80}, //1_GAIN
{0xdc, 0x00}, //1_HUE
{0xdd, 0x76}, //1_CENTER
{0xde, 0x1c}, //1_DELTA
{0xdf, 0x80}, //2_GAIN
{0xe0, 0x00}, //2_HUE
{0xe1, 0xac}, //2_CENTER
{0xe2, 0x1c}, //2_DELTA
{0xe3, 0x80}, //3_GAIN
{0xe4, 0x00}, //3_HUE
{0xe5, 0x4c}, //3_CENTER
{0xe6, 0x20}, //3_DELTA
{0xe7, 0x80}, //4_GAIN
{0xe8, 0x00}, //4_HUE
{0xe9, 0x76}, //4_CENTER
{0xea, 0x1c}, //4_DELTA
{0xeb, 0x80}, //5_GAIN
{0xec, 0x00}, //5_HUE
{0xed, 0x52}, //5_CENTER
{0xee, 0x1d}, //5_DELTA

//MCMC_02
{0xef, 0x80}, //GLB_GAIN
{0xf0, 0x00}, //GLB_HUE
{0xf1, 0x80}, //0_GAIN
{0xf2, 0x00}, //0_HUE
{0xf3, 0x35}, //0_CENTER
{0xf4, 0x13}, //0_DELTA
{0xf5, 0x80}, //1_GAIN
{0xf6, 0x00}, //1_HUE
{0xf7, 0x76}, //1_CENTER
{0xf8, 0x1c}, //1_DELTA
{0xf9, 0x80}, //2_GAIN
{0xfa, 0x00}, //2_HUE
{0xfb, 0xac}, //2_CENTER
{0xfc, 0x1c}, //2_DELTA
{0xfd, 0x80}, //3_GAIN
{0x0e, 0x00}, //burst end
{0x03, 0xd2}, //Page d2
{0x0e, 0x01}, //burst start
{0x10, 0x00}, //3_HUE
{0x11, 0x4c}, //3_CENTER
{0x12, 0x20}, //3_DELTA
{0x13, 0x80}, //4_GAIN
{0x14, 0x00}, //4_HUE
{0x15, 0x76}, //4_CENTER
{0x16, 0x1c}, //4_DELTA
{0x17, 0x80}, //5_GAIN
{0x18, 0x00}, //5_HUE
{0x19, 0x52}, //5_CENTER
{0x1a, 0x1d}, //5_DELTA

//MCMC_03
{0x1b, 0x80}, //GLB_GAIN
{0x1c, 0x00}, //GLB_HUE
{0x1d, 0x70}, //0_GAIN
{0x1e, 0x04}, //0_HUE
{0x1f, 0x36}, //0_CENTER
{0x20, 0x0d}, //0_DELTA
{0x21, 0xa8}, //1_GAIN
{0x22, 0x0c}, //1_HUE
{0x23, 0x6b}, //1_CENTER
{0x24, 0x14}, //1_DELTA
{0x25, 0x70}, //2_GAIN
{0x26, 0x00}, //2_HUE
{0x27, 0xaf}, //2_CENTER
{0x28, 0x1c}, //2_DELTA
{0x29, 0x80}, //3_GAIN
{0x2a, 0x87}, //3_HUE
{0x2b, 0x51}, //3_CENTER
{0x2c, 0x1c}, //3_DELTA
{0x2d, 0x80}, //4_GAIN
{0x2e, 0x0c}, //4_HUE
{0x2f, 0x76}, //4_CENTER
{0x30, 0x1c}, //4_DELTA
{0x31, 0x80}, //5_GAIN
{0x32, 0x00}, //5_HUE
{0x33, 0x9a}, //5_CENTER
{0x34, 0x14}, //5_DELTA

//MCMC_04
{0x35, 0x80},	//GLB_GAIN
{0x36, 0x00},	//GLB_HUE
{0x37, 0x80},	//0_GAIN
{0x38, 0x0a},	//0_HUE
{0x39, 0x32},	//0_CENTER
{0x3a, 0x0f},	//0_DELTA
{0x3b, 0x90},	//1_GAIN
{0x3c, 0x14},	//1_HUE
{0x3d, 0x6a},	//1_CENTER
{0x3e, 0x14},	//1_DELTA
{0x3f, 0x70},	//2_GAIN
{0x40, 0x88},	//2_HUE
{0x41, 0xaf},	//2_CENTER
{0x42, 0x1c},	//2_DELTA
{0x43, 0x90},	//3_GAIN
{0x44, 0x00},	//3_HUE
{0x45, 0x51},	//3_CENTER
{0x46, 0x15},	//3_DELTA
{0x47, 0xa9},	//4_GAIN
{0x48, 0x10},	//4_HUE
{0x49, 0x7c},	//4_CENTER
{0x4a, 0x18},	//4_DELTA
{0x4b, 0xa0},	//5_GAIN
{0x4c, 0x00},	//5_HUE
{0x4d, 0x99},	//5_CENTER
{0x4e, 0x1e},	//5_DELTA

//MCMC_05
{0x4f, 0x80},	//GLB_GAIN
{0x50, 0x00},	//GLB_HUE
{0x51, 0x78},	//0_GAIN
{0x52, 0x08},	//0_HUE
{0x53, 0x32},	//0_CENTER
{0x54, 0x0f},	//0_DELTA
{0x55, 0x90},	//1_GAIN
{0x56, 0x0a},	//1_HUE
{0x57, 0x6a},	//1_CENTER
{0x58, 0x14},	//1_DELTA
{0x59, 0x70},	//2_GAIN
{0x5a, 0x88},	//2_HUE
{0x5b, 0xaf},	//2_CENTER
{0x5c, 0x1c},	//2_DELTA
{0x5d, 0x90},	//3_GAIN
{0x5e, 0x00},	//3_HUE
{0x5f, 0x4b},	//3_CENTER
{0x60, 0x15},	//3_DELTA
{0x61, 0x90},	//4_GAIN
{0x62, 0x10},	//4_HUE
{0x63, 0x7c},	//4_CENTER
{0x64, 0x18},	//4_DELTA
{0x65, 0xa0},	//5_GAIN
{0x66, 0x00},	//5_HUE
{0x67, 0x99},	//5_CENTER
{0x68, 0x1e},	//5_DELTA

//MCMC_06
{0x69, 0x80}, //GLB_GAIN
{0x6a, 0x00}, //GLB_HUE
{0x6b, 0x60}, //0_GAIN
{0x6c, 0x04}, //0_HUE
{0x6d, 0x34}, //0_CENTER
{0x6e, 0x0c}, //0_DELTA
{0x6f, 0x93}, //1_GAIN
{0x70, 0x10}, //1_HUE
{0x71, 0x5e}, //1_CENTER
{0x72, 0x14}, //1_DELTA
{0x73, 0xa0}, //2_GAIN
{0x74, 0x88}, //2_HUE
{0x75, 0xaf}, //2_CENTER
{0x76, 0x28}, //2_DELTA
{0x77, 0x80}, //3_GAIN
{0x78, 0x91}, //3_HUE
{0x79, 0x48}, //3_CENTER
{0x7a, 0x14}, //3_DELTA
{0x7b, 0x80}, //4_GAIN
{0x7c, 0x0c}, //4_HUE
{0x7d, 0x72}, //4_CENTER
{0x7e, 0x14}, //4_DELTA
{0x7f, 0x80}, //5_GAIN
{0x80, 0x00}, //5_HUE
{0x81, 0x9a}, //5_CENTER
{0x82, 0x14}, //5_DELTA

//MCMC_07
{0x83, 0x80}, //GLB_GAIN
{0x84, 0x00}, //GLB_HUE
{0x85, 0x60}, //0_GAIN
{0x86, 0x04}, //0_HUE
{0x87, 0x34}, //0_CENTER
{0x88, 0x0c}, //0_DELTA
{0x89, 0x93}, //1_GAIN
{0x8a, 0x10}, //1_HUE
{0x8b, 0x5e}, //1_CENTER
{0x8c, 0x14}, //1_DELTA
{0x8d, 0xa0}, //2_GAIN
{0x8e, 0x88}, //2_HUE
{0x8f, 0xaf}, //2_CENTER
{0x90, 0x28}, //2_DELTA
{0x91, 0x80}, //3_GAIN
{0x92, 0x91}, //3_HUE
{0x93, 0x48}, //3_CENTER
{0x94, 0x14}, //3_DELTA
{0x95, 0x80}, //4_GAIN
{0x96, 0x0c}, //4_HUE
{0x97, 0x72}, //4_CENTER
{0x98, 0x14}, //4_DELTA
{0x99, 0x80}, //5_GAIN
{0x9a, 0x00}, //5_HUE
{0x9b, 0x9a}, //5_CENTER
{0x9c, 0x14}, //5_DELTA

//MCMC_08
{0x9d, 0x80}, //GLB_GAIN
{0x9e, 0x00}, //GLB_HUE
{0x9f, 0x60}, //0_GAIN
{0xa0, 0x04}, //0_HUE
{0xa1, 0x34}, //0_CENTER
{0xa2, 0x0c}, //0_DELTA
{0xa3, 0x93}, //1_GAIN
{0xa4, 0x10}, //1_HUE
{0xa5, 0x5e}, //1_CENTER
{0xa6, 0x14}, //1_DELTA
{0xa7, 0xa0}, //2_GAIN
{0xa8, 0x88}, //2_HUE
{0xa9, 0xaf}, //2_CENTER
{0xaa, 0x28}, //2_DELTA
{0xab, 0x80}, //3_GAIN
{0xac, 0x91}, //3_HUE
{0xad, 0x48}, //3_CENTER
{0xae, 0x14}, //3_DELTA
{0xaf, 0x80}, //4_GAIN
{0xb0, 0x0c}, //4_HUE
{0xb1, 0x72}, //4_CENTER
{0xb2, 0x14}, //4_DELTA
{0xb3, 0x80}, //5_GAIN
{0xb4, 0x00}, //5_HUE
{0xb5, 0x9a}, //5_CENTER
{0xb6, 0x14}, //5_DELTA

//MCMC_09
{0xb7, 0x80}, //GLB_GAIN
{0xb8, 0x00}, //GLB_HUE
{0xb9, 0x60}, //0_GAIN
{0xba, 0x04}, //0_HUE
{0xbb, 0x34}, //0_CENTER
{0xbc, 0x0c}, //0_DELTA
{0xbd, 0x93}, //1_GAIN
{0xbe, 0x10}, //1_HUE
{0xbf, 0x5e}, //1_CENTER
{0xc0, 0x14}, //1_DELTA
{0xc1, 0xa0}, //2_GAIN
{0xc2, 0x88}, //2_HUE
{0xc3, 0xaf}, //2_CENTER
{0xc4, 0x28}, //2_DELTA
{0xc5, 0x80}, //3_GAIN
{0xc6, 0x91}, //3_HUE
{0xc7, 0x48}, //3_CENTER
{0xc8, 0x14}, //3_DELTA
{0xc9, 0x80}, //4_GAIN
{0xca, 0x0c}, //4_HUE
{0xcb, 0x72}, //4_CENTER
{0xcc, 0x14}, //4_DELTA
{0xcd, 0x80}, //5_GAIN
{0xce, 0x00}, //5_HUE
{0xcf, 0x9a}, //5_CENTER
{0xd0, 0x14}, //5_DELTA

//MCMC_10
{0xd1, 0x80}, //GLB_GAIN
{0xd2, 0x00}, //GLB_HUE
{0xd3, 0x60}, //0_GAIN
{0xd4, 0x04}, //0_HUE
{0xd5, 0x34}, //0_CENTER
{0xd6, 0x0c}, //0_DELTA
{0xd7, 0x93}, //1_GAIN
{0xd8, 0x10}, //1_HUE
{0xd9, 0x5e}, //1_CENTER
{0xda, 0x14}, //1_DELTA
{0xdb, 0xa0}, //2_GAIN
{0xdc, 0x88}, //2_HUE
{0xdd, 0xaf}, //2_CENTER
{0xde, 0x28}, //2_DELTA
{0xdf, 0x80}, //3_GAIN
{0xe0, 0x91}, //3_HUE
{0xe1, 0x48}, //3_CENTER
{0xe2, 0x14}, //3_DELTA
{0xe3, 0x80}, //4_GAIN
{0xe4, 0x0c}, //4_HUE
{0xe5, 0x72}, //4_CENTER
{0xe6, 0x14}, //4_DELTA
{0xe7, 0x80}, //5_GAIN
{0xe8, 0x00}, //5_HUE
{0xe9, 0x9a}, //5_CENTER
{0xea, 0x14}, //5_DELTA

//MCMC_11
{0xeb, 0x80}, //GLB_GAIN
{0xec, 0x00}, //GLB_HUE
{0xed, 0x60}, //0_GAIN
{0xee, 0x04}, //0_HUE
{0xef, 0x34}, //0_CENTER
{0xf0, 0x0c}, //0_DELTA
{0xf1, 0x93}, //1_GAIN
{0xf2, 0x10}, //1_HUE
{0xf3, 0x5e}, //1_CENTER
{0xf4, 0x14}, //1_DELTA
{0xf5, 0xa0}, //2_GAIN
{0xf6, 0x88}, //2_HUE
{0xf7, 0xaf}, //2_CENTER
{0xf8, 0x28}, //2_DELTA
{0xf9, 0x80}, //3_GAIN
{0xfa, 0x91}, //3_HUE
{0xfb, 0x48}, //3_CENTER
{0xfc, 0x14}, //3_DELTA
{0xfd, 0x80}, //4_GAIN
{0x0e, 0x00}, //burst_end
{0x03, 0xd3}, //Page d3
{0x0e, 0x01}, //burst_start
{0x10, 0x0c}, //4_HUE
{0x11, 0x72}, //4_CENTER
{0x12, 0x14}, //4_DELTA
{0x13, 0x80}, //5_GAIN
{0x14, 0x00}, //5_HUE
{0x15, 0x9a}, //5_CENTER
{0x16, 0x14}, //5_DELTA

///////////////////////////////////////////
// D3 Page Adaptive LSC
///////////////////////////////////////////
{0x17, 0x00}, //LSC 00 ofs GB
{0x18, 0x00}, //LSC 00 ofs B
{0x19, 0x00}, //LSC 00 ofs R
{0x1a, 0x00}, //LSC 00 ofs GR
{0x1b, 0x5c}, //LSC 00 Gain GB
{0x1c, 0x60}, //LSC 00 Gain B
{0x1d, 0x60}, //LSC 00 Gain R
{0x1e, 0x5c}, //LSC 00 Gain GR

{0x1f, 0x00}, //LSC 01 ofs GB
{0x20, 0x00}, //LSC 01 ofs B
{0x21, 0x00}, //LSC 01 ofs R
{0x22, 0x00}, //LSC 01 ofs GR
{0x23, 0x5c}, //LSC 01 Gain GB
{0x24, 0x60}, //LSC 01 Gain B
{0x25, 0x60}, //LSC 01 Gain R
{0x26, 0x5c}, //LSC 01 Gain GR

{0x27, 0x00}, //LSC 02 ofs GB
{0x28, 0x00}, //LSC 02 ofs B
{0x29, 0x00}, //LSC 02 ofs R
{0x2a, 0x00}, //LSC 02 ofs GR
{0x2b, 0x5c}, //LSC 02 Gain GB
{0x2c, 0x60}, //LSC 02 Gain B
{0x2d, 0x60}, //LSC 02 Gain R
{0x2e, 0x5c}, //LSC 02 Gain GR

{0x2f, 0x00}, //LSC 03 ofs GB
{0x30, 0x00}, //LSC 03 ofs B
{0x31, 0x00}, //LSC 03 ofs R
{0x32, 0x00}, //LSC 03 ofs GR
{0x33, 0x80}, //LSC 03 Gain GB
{0x34, 0x80}, //LSC 03 Gain B
{0x35, 0x80}, //LSC 03 Gain R
{0x36, 0x80}, //LSC 03 Gain GR

{0x37, 0x00}, //LSC 04 ofs GB
{0x38, 0x00}, //LSC 04 ofs B
{0x39, 0x00}, //LSC 04 ofs R
{0x3a, 0x00}, //LSC 04 ofs GR
{0x3b, 0x80}, //LSC 04 Gain GB
{0x3c, 0x80}, //LSC 04 Gain B
{0x3d, 0x80}, //LSC 04 Gain R
{0x3e, 0x80}, //LSC 04 Gain GR

{0x3f, 0x00}, //LSC 05 ofs GB
{0x40, 0x00}, //LSC 05 ofs B
{0x41, 0x00}, //LSC 05 ofs R
{0x42, 0x00}, //LSC 05 ofs GR
{0x43, 0x80}, //LSC 05 Gain GB
{0x44, 0x80}, //LSC 05 Gain B
{0x45, 0x80}, //LSC 05 Gain R
{0x46, 0x80}, //LSC 05 Gain GR

{0x47, 0x00}, //LSC 06 ofs GB
{0x48, 0x00}, //LSC 06 ofs B
{0x49, 0x00}, //LSC 06 ofs R
{0x4a, 0x00}, //LSC 06 ofs GR
{0x4b, 0x80}, //LSC 06 Gain GB
{0x4c, 0x88}, //LSC 06 Gain B
{0x4d, 0x88}, //LSC 06 Gain R
{0x4e, 0x80}, //LSC 06 Gain GR

{0x4f, 0x00}, //LSC 07 ofs GB
{0x50, 0x00}, //LSC 07 ofs B
{0x51, 0x00}, //LSC 07 ofs R
{0x52, 0x00}, //LSC 07 ofs GR
{0x53, 0x80}, //LSC 07 Gain GB
{0x54, 0x88}, //LSC 07 Gain B
{0x55, 0x88}, //LSC 07 Gain R
{0x56, 0x80}, //LSC 07 Gain GR

{0x57, 0x00}, //LSC 08 ofs GB
{0x58, 0x00}, //LSC 08 ofs B
{0x59, 0x00}, //LSC 08 ofs R
{0x5a, 0x00}, //LSC 08 ofs GR
{0x5b, 0x80}, //LSC 08 Gain GB
{0x5c, 0x88}, //LSC 08 Gain B
{0x5d, 0x88}, //LSC 08 Gain R
{0x5e, 0x80}, //LSC 08 Gain GR

{0x5f, 0x00}, //LSC 09 ofs GB
{0x60, 0x00}, //LSC 09 ofs B
{0x61, 0x00}, //LSC 09 ofs R
{0x62, 0x00}, //LSC 09 ofs GR
{0x63, 0x80}, //LSC 09 Gain GB
{0x64, 0x88}, //LSC 09 Gain B
{0x65, 0x88}, //LSC 09 Gain R
{0x66, 0x80}, //LSC 09 Gain GR

{0x67, 0x00}, //LSC 10 ofs GB
{0x68, 0x00}, //LSC 10 ofs B
{0x69, 0x00}, //LSC 10 ofs R
{0x6a, 0x00}, //LSC 10 ofs GR
{0x6b, 0x80}, //LSC 10 Gain GB
{0x6c, 0x88}, //LSC 10 Gain B
{0x6d, 0x88}, //LSC 10 Gain R
{0x6e, 0x80}, //LSC 10 Gain GR

{0x6f, 0x00}, //LSC 11 ofs GB
{0x70, 0x00}, //LSC 11 ofs B
{0x71, 0x00}, //LSC 11 ofs R
{0x72, 0x00}, //LSC 11 ofs GR
{0x73, 0x80}, //LSC 11 Gain GB
{0x74, 0x88}, //LSC 11 Gain B
{0x75, 0x88}, //LSC 11 Gain R
{0x76, 0x80}, //LSC 11 Gain GR

///////////////////////////////////////////
// D3 Page OTP, ROM Select TH
///////////////////////////////////////////
{0x77, 0x60}, //2 ROM High
{0x78, 0x20}, //2 ROM Low
{0x79, 0x60}, //3 OTP High
{0x7a, 0x40}, //3 OTP Mid
{0x7b, 0x20}, //3 OTP Low

///////////////////////////////////////////
// D3 Page Adaptive DNP
///////////////////////////////////////////
{0x7c, 0x00}, //LSC EV max
{0x7d, 0x01},
{0x7e, 0xfb},
{0x7f, 0xd0},

{0x80, 0x00}, //LSC EV min
{0x81, 0x01},
{0x82, 0x5f},
{0x83, 0x90},

{0x84, 0x78}, //CTEM max
{0x85, 0x62}, //CTEM min

{0x86, 0x08}, //Y STD max
{0x87, 0x02}, //Y STD min

{0x88, 0x00}, //offset
{0x89, 0x00},
{0x8a, 0x00},
{0x8b, 0x00},
{0x8c, 0x80}, //gain
{0x8d, 0x80},
{0x8e, 0x80},
{0x8f, 0x80},

{0x90, 0x50},
{0x91, 0x50},
{0x0e, 0x00}, //burst_end

///////////////////////////////////
// D9 Page DMA EXTRA
///////////////////////////////////

{0x03, 0xd9},
{0x0e, 0x01}, //BURST_START
{0x10, 0x03}, //Page 10
{0x11, 0x10},
{0x12, 0x61},
{0x13, 0x80}, //1061 : SATB
{0x14, 0x62},
{0x15, 0x80}, //1062 : SATR
{0x16, 0x40},
{0x17, 0x00}, //1040 : Brightness
{0x18, 0x48},
{0x19, 0x80}, //1048 : Contrast
{0x1a, 0x03}, //Page 16
{0x1b, 0x16},
{0x1c, 0x30},
{0x1d, 0x7f}, //1630 : CMC
{0x1e, 0x31},
{0x1f, 0x42}, //1631
{0x20, 0x32},
{0x21, 0x03}, //1632
{0x22, 0x33},
{0x23, 0x22}, //1633
{0x24, 0x34},
{0x25, 0x7b}, //1634
{0x26, 0x35},
{0x27, 0x19}, //1635
{0x28, 0x36},
{0x29, 0x01}, //1636
{0x2a, 0x37},
{0x2b, 0x43}, //1637
{0x2c, 0x38},
{0x2d, 0x84}, //1638
{0x2e, 0x70},
{0x2f, 0x80}, //1670 : MCMC
{0x30, 0x71},
{0x31, 0x00}, //1671
{0x32, 0x72},
{0x33, 0x9b}, //1672
{0x34, 0x73},
{0x35, 0x05}, //1673
{0x36, 0x74},
{0x37, 0x34}, //1674
{0x38, 0x75},
{0x39, 0x1e}, //1675
{0x3a, 0x76},
{0x3b, 0xa6}, //1676
{0x3c, 0x77},
{0x3d, 0x10}, //1677
{0x3e, 0x78},
{0x3f, 0x69}, //1678
{0x40, 0x79},
{0x41, 0x1e}, //1679
{0x42, 0x7a},
{0x43, 0x80}, //167a
{0x44, 0x7b},
{0x45, 0x80}, //167b
{0x46, 0x7c},
{0x47, 0xad}, //167c
{0x48, 0x7d},
{0x49, 0x1e}, //167d
{0x4a, 0x7e},
{0x4b, 0x98}, //167e
{0x4c, 0x7f},
{0x4d, 0x80}, //167f
{0x4e, 0x80},
{0x4f, 0x51}, //1680
{0x50, 0x81},
{0x51, 0x1e}, //1681
{0x52, 0x82},
{0x53, 0x80}, //1682
{0x54, 0x83},
{0x55, 0x0c}, //1683
{0x56, 0x84},
{0x57, 0x23}, //1684
{0x58, 0x85},
{0x59, 0x1e}, //1685
{0x5a, 0x86},
{0x5b, 0xb3}, //1686
{0x5c, 0x87},
{0x5d, 0x8a}, //1687
{0x5e, 0x88},
{0x5f, 0x52}, //1688
{0x60, 0x89},
{0x61, 0x1e}, //1689
{0x62, 0x03}, //Page 17 Gamma
{0x63, 0x17},
{0x64, 0x20},
{0x65, 0x00}, //1720 : GMA
{0x66, 0x21},
{0x67, 0x02}, //1721
{0x68, 0x22},
{0x69, 0x04}, //1722
{0x6a, 0x23},
{0x6b, 0x09}, //1723
{0x6c, 0x24},
{0x6d, 0x12}, //1724
{0x6e, 0x25},
{0x6f, 0x23}, //1725
{0x70, 0x26},
{0x71, 0x37}, //1726
{0x72, 0x27},
{0x73, 0x47}, //1727
{0x74, 0x28},
{0x75, 0x57}, //1728
{0x76, 0x29},
{0x77, 0x61}, //1729
{0x78, 0x2a},
{0x79, 0x6b}, //172a
{0x7a, 0x2b},
{0x7b, 0x71}, //172b
{0x7c, 0x2c},
{0x7d, 0x76}, //172c
{0x7e, 0x2d},
{0x7f, 0x7a}, //172d
{0x80, 0x2e},
{0x81, 0x7f}, //172e
{0x82, 0x2f},
{0x83, 0x84}, //172f
{0x84, 0x30},
{0x85, 0x88}, //1730
{0x86, 0x31},
{0x87, 0x8c}, //1731
{0x88, 0x32},
{0x89, 0x91}, //1732
{0x8a, 0x33},
{0x8b, 0x94}, //1733
{0x8c, 0x34},
{0x8d, 0x98}, //1734
{0x8e, 0x35},
{0x8f, 0x9f}, //1735
{0x90, 0x36},
{0x91, 0xa6}, //1736
{0x92, 0x37},
{0x93, 0xae}, //1737
{0x94, 0x38},
{0x95, 0xbb}, //1738
{0x96, 0x39},
{0x97, 0xc9}, //1739
{0x98, 0x3a},
{0x99, 0xd3}, //173a
{0x9a, 0x3b},
{0x9b, 0xdc}, //173b
{0x9c, 0x3c},
{0x9d, 0xe2}, //173c
{0x9e, 0x3d},
{0x9f, 0xe8}, //173d
{0xa0, 0x3e},
{0xa1, 0xed}, //173e
{0xa2, 0x3f},
{0xa3, 0xf4}, //173f
{0xa4, 0x40},
{0xa5, 0xfa}, //1740
{0xa6, 0x41},
{0xa7, 0xff}, //1741
{0xa8, 0x03}, //page 20 AE
{0xa9, 0x20},
{0xaa, 0x39},
{0xab, 0x40}, //2039 : Y target
{0xac, 0x03}, //Page 15 SHD
{0xad, 0x15},
{0xae, 0x24},
{0xaf, 0x00}, //1524 : Shading
{0xb0, 0x25},
{0xb1, 0x00}, //1525
{0xb2, 0x26},
{0xb3, 0x00}, //1526
{0xb4, 0x27},
{0xb5, 0x00}, //1527
{0xb6, 0x28},
{0xb7, 0x80}, //1528
{0xb8, 0x29},
{0xb9, 0x80}, //1529
{0xba, 0x2a},
{0xbb, 0x80}, //152a
{0xbc, 0x2b},
{0xbd, 0x80}, //152b
{0xbe, 0x11},
{0xbf, 0x40}, //1511
{0x0e, 0x00}, //burst_end
///////////////////////////////////
// DA Page (DMA Outdoor)
///////////////////////////////////

{0x03, 0xda},
{0x0e, 0x01}, //burst_start
{0x10, 0x03},
{0x11, 0x11}, //11 page
{0x12, 0x10},
{0x13, 0x13}, //Outdoor 1110
{0x14, 0x11},
{0x15, 0x25}, //Outdoor 1111
{0x16, 0x12},
{0x17, 0x22}, //Outdoor 1112
{0x18, 0x13},
{0x19, 0x11}, //Outdoor 1113
{0x1a, 0x14},
{0x1b, 0x21}, //Outdoor 1114
{0x1c, 0x30},
{0x1d, 0x20}, //Outdoor 1130
{0x1e, 0x31},
{0x1f, 0x20}, //Outdoor 1131
{0x20, 0x32},
{0x21, 0x70}, //Outdoor 1132
{0x22, 0x33},
{0x23, 0x4a}, //Outdoor 1133
{0x24, 0x34},
{0x25, 0x2a}, //Outdoor 1134
{0x26, 0x35},
{0x27, 0x2b}, //Outdoor 1135
{0x28, 0x36},
{0x29, 0x16}, //Outdoor 1136
{0x2a, 0x37},
{0x2b, 0x1b}, //Outdoor 1137
{0x2c, 0x38},
{0x2d, 0x14}, //Outdoor 1138
{0x2e, 0x39},
{0x2f, 0x10}, //Outdoor 1139 : R2 Lum Lv 01 NR Gain
{0x30, 0x3a},
{0x31, 0x10}, //Outdoor 113a : R2 Lum Lv 02 NR Gain
{0x32, 0x3b},
{0x33, 0x2c}, //Outdoor 113b : R2 Lum Lv 03 NR Gain
{0x34, 0x3c},
{0x35, 0x60}, //Outdoor 113c : R2 Lum Lv 04 NR Gain
{0x36, 0x3d},
{0x37, 0x38}, //Outdoor 113d : R2 Lum Lv 05 NR Gain
{0x38, 0x3e},
{0x39, 0x68}, //Outdoor 113e : R2 Lum Lv 06 NR Gain
{0x3a, 0x3f},
{0x3b, 0x68}, //Outdoor 113f : R2 Lum Lv 07 NR Gain
{0x3c, 0x40},
{0x3d, 0x68}, //Outdoor 1140 : R2 Lum Lv 08 NR Gain
{0x3e, 0x41},
{0x3f, 0x1a}, //Outdoor 1141 : R2 Lum Lv 01 NR offset
{0x40, 0x42},
{0x41, 0x1a}, //Outdoor 1142 : R2 Lum Lv 02 NR offset
{0x42, 0x43},
{0x43, 0x1a}, //Outdoor 1143 : R2 Lum Lv 03 NR offset
{0x44, 0x44},
{0x45, 0x30}, //Outdoor 1144 : R2 Lum Lv 04 NR offset
{0x46, 0x45},
{0x47, 0x30}, //Outdoor 1145 : R2 Lum Lv 05 NR offset
{0x48, 0x46},
{0x49, 0x40}, //Outdoor 1146 : R2 Lum Lv 06 NR offset
{0x4a, 0x47},
{0x4b, 0x40}, //Outdoor 1147 : R2 Lum Lv 07 NR offset
{0x4c, 0x48},
{0x4d, 0x40}, //Outdoor 1148 : R2 Lum Lv 08 NR offset
{0x4e, 0x49},
{0x4f, 0xf0}, //Outdoor 1149
{0x50, 0x4a},
{0x51, 0xf0}, //Outdoor 114a
{0x52, 0x4b},
{0x53, 0xf0}, //Outdoor 114b
{0x54, 0x4c},
{0x55, 0xf0}, //Outdoor 114c
{0x56, 0x4d},
{0x57, 0xf0}, //Outdoor 114d
{0x58, 0x4e},
{0x59, 0xf0}, //Outdoor 114e
{0x5a, 0x4f},
{0x5b, 0xf0}, //Outdoor 114f
{0x5c, 0x50},
{0x5d, 0xf0}, //Outdoor 1150
{0x5e, 0x51},
{0x5f, 0x60}, //Outdoor 1151
{0x60, 0x52},
{0x61, 0x60}, //Outdoor 1152
{0x62, 0x53},
{0x63, 0x60}, //Outdoor 1153
{0x64, 0x54},
{0x65, 0x60}, //Outdoor 1154
{0x66, 0x55},
{0x67, 0x60}, //Outdoor 1155
{0x68, 0x56},
{0x69, 0x60}, //Outdoor 1156
{0x6a, 0x57},
{0x6b, 0x60}, //Outdoor 1157
{0x6c, 0x58},
{0x6d, 0x60}, //Outdoor 1158
{0x6e, 0x59},
{0x6f, 0x80}, //Outdoor 1159
{0x70, 0x5a},
{0x71, 0x80}, //Outdoor 115a
{0x72, 0x5b},
{0x73, 0x80}, //Outdoor 115b
{0x74, 0x5c},
{0x75, 0x80}, //Outdoor 115c
{0x76, 0x5d},
{0x77, 0x80}, //Outdoor 115d
{0x78, 0x5e},
{0x79, 0x80}, //Outdoor 115e
{0x7a, 0x5f},
{0x7b, 0x80}, //Outdoor 115f
{0x7c, 0x60},
{0x7d, 0x80}, //Outdoor 1160
{0x7e, 0x61},
{0x7f, 0xf0}, //Outdoor 1161
{0x80, 0x62},
{0x81, 0xfc}, //Outdoor 1162
{0x82, 0x63},
{0x83, 0x60}, //Outdoor 1163
{0x84, 0x64},
{0x85, 0x20}, //Outdoor 1164
{0x86, 0x65},
{0x87, 0x24}, //Outdoor 1165 Imp Lv1 Hi Gain
{0x88, 0x66},
{0x89, 0x24}, //Outdoor 1166 Imp Lv1 Middle Gain
{0x8a, 0x67},
{0x8b, 0x1a}, //Outdoor 1167 Imp Lv1 Low Gain
{0x8c, 0x68},
{0x8d, 0x5a}, //Outdoor 1168
{0x8e, 0x69},
{0x8f, 0x24}, //Outdoor 1169
{0x90, 0x6a},
{0x91, 0x24}, //Outdoor 116a Imp Lv2 Hi Gain
{0x92, 0x6b},
{0x93, 0x24}, //Outdoor 116b Imp Lv2 Middle Gain
{0x94, 0x6c},
{0x95, 0x1a}, //Outdoor 116c Imp Lv2 Low Gain
{0x96, 0x6d},
{0x97, 0x5c}, //Outdoor 116d
{0x98, 0x6e},
{0x99, 0x20}, //Outdoor 116e
{0x9a, 0x6f},
{0x9b, 0x26}, //Outdoor 116f Imp Lv3 Hi Gain
{0x9c, 0x70},
{0x9d, 0x26}, //Outdoor 1170 Imp Lv3 Middle Gain
{0x9e, 0x71},
{0x9f, 0x30}, //Outdoor 1171 Imp Lv3 Low Gain
{0xa0, 0x72},
{0xa1, 0x5c}, //Outdoor 1172
{0xa2, 0x73},
{0xa3, 0x20}, //Outdoor 1173
{0xa4, 0x74},
{0xa5, 0x90}, //Outdoor 1174 Imp Lv4 Hi Gain
{0xa6, 0x75},
{0xa7, 0x90}, //Outdoor 1175 Imp Lv4 Middle Gain
{0xa8, 0x76},
{0xa9, 0x80}, //Outdoor 1176 Imp Lv4 Low Gain
{0xaa, 0x77},
{0xab, 0x40}, //Outdoor 1177
{0xac, 0x78},
{0xad, 0x26}, //Outdoor 1178
{0xae, 0x79},
{0xaf, 0x90}, //Outdoor 1179 Imp Lv5 Hi Gain
{0xb0, 0x7a},
{0xb1, 0x90}, //Outdoor 117a Imp Lv5 Middle Gain
{0xb2, 0x7b},
{0xb3, 0x80}, //Outdoor 117b Imp Lv5 Low Gain
{0xb4, 0x7c},
{0xb5, 0x38}, //Outdoor 117c
{0xb6, 0x7d},
{0xb7, 0x1c}, //Outdoor 117d
{0xb8, 0x7e},
{0xb9, 0x68}, //Outdoor 117e Imp Lv6 Hi Gain
{0xba, 0x7f},
{0xbb, 0x58}, //Outdoor 117f Imp Lv6 Middle Gain
{0xbc, 0x80},
{0xbd, 0x48}, //Outdoor 1180 Imp Lv6 Low Gain
{0xbe, 0x81},
{0xbf, 0x32}, //Outdoor 1181
{0xc0, 0x82},
{0xc1, 0x10}, //Outdoor 1182
{0xc2, 0x83},
{0xc3, 0x68}, //Outdoor 1183 Imp Lv7 Hi Gain
{0xc4, 0x84},
{0xc5, 0x58}, //Outdoor 1184 Imp Lv7 Middle Gain
{0xc6, 0x85},
{0xc7, 0x48}, //Outdoor 1185 Imp Lv7 Low Gain
{0xc8, 0x86},
{0xc9, 0x1c}, //Outdoor 1186
{0xca, 0x87},
{0xcb, 0x08}, //Outdoor 1187
{0xcc, 0x88},
{0xcd, 0x64}, //Outdoor 1188
{0xce, 0x89},
{0xcf, 0x64}, //Outdoor 1189
{0xd0, 0x8a},
{0xd1, 0x48}, //Outdoor 118a
{0xd2, 0x90},
{0xd3, 0x02}, //Outdoor 1190
{0xd4, 0x91},
{0xd5, 0x48}, //Outdoor 1191
{0xd6, 0x92},
{0xd7, 0x00}, //Outdoor 1192
{0xd8, 0x93},
{0xd9, 0x04}, //Outdoor 1193
{0xda, 0x94},
{0xdb, 0x02}, //Outdoor 1194
{0xdc, 0x95},
{0xdd, 0x64}, //Outdoor 1195
{0xde, 0x96},
{0xdf, 0x14}, //Outdoor 1196
{0xe0, 0x97},
{0xe1, 0x90}, //Outdoor 1197
{0xe2, 0xb0},
{0xe3, 0x60}, //Outdoor 11b0
{0xe4, 0xb1},
{0xe5, 0x90}, //Outdoor 11b1
{0xe6, 0xb2},
{0xe7, 0x10}, //Outdoor 11b2
{0xe8, 0xb3},
{0xe9, 0x08}, //Outdoor 11b3
{0xea, 0xb4},
{0xeb, 0x04}, //Outdoor 11b4
{0xec, 0x03},
{0xed, 0x12},
{0xee, 0x10},
{0xef, 0x03}, //Outdoor 1210
{0xf0, 0x11},
{0xf1, 0x29}, //Outdoor 1211
{0xf2, 0x12},
{0xf3, 0x30}, //Outdoor 1212
{0xf4, 0x40},
{0xf5, 0x37}, //Outdoor 1240
{0xf6, 0x41},
{0xf7, 0x24}, //Outdoor 1241
{0xf8, 0x42},
{0xf9, 0x00}, //Outdoor 1242
{0xfa, 0x43},
{0xfb, 0x62}, //Outdoor 1243
{0xfc, 0x44},
{0xfd, 0x02}, //Outdoor 1244
{0x0e, 0x00}, //burst_end
{0x03, 0xdb},
{0x0e, 0x01}, //burst_start
{0x10, 0x45},
{0x11, 0x0a}, //Outdoor 1245
{0x12, 0x46},
{0x13, 0x40}, //Outdoor 1246
{0x14, 0x60},
{0x15, 0x02}, //Outdoor 1260
{0x16, 0x61},
{0x17, 0x04}, //Outdoor 1261
{0x18, 0x62},
{0x19, 0x4b}, //Outdoor 1262
{0x1a, 0x63},
{0x1b, 0x41}, //Outdoor 1263
{0x1c, 0x64},
{0x1d, 0x14}, //Outdoor 1264
{0x1e, 0x65},
{0x1f, 0x00}, //Outdoor 1265
{0x20, 0x68},
{0x21, 0x0a}, //Outdoor 1268
{0x22, 0x69},
{0x23, 0x04}, //Outdoor 1269
{0x24, 0x6a},
{0x25, 0x0a}, //Outdoor 126a
{0x26, 0x6b},
{0x27, 0x0a}, //Outdoor 126b
{0x28, 0x6c},
{0x29, 0x24}, //Outdoor 126c
{0x2a, 0x6d},
{0x2b, 0x01}, //Outdoor 126d
{0x2c, 0x70},
{0x2d, 0x01}, //Outdoor 1270
{0x2e, 0x71},
{0x2f, 0x3d}, //Outdoor 1271
{0x30, 0x80},
{0x31, 0x80}, //Outdoor 1280
{0x32, 0x81},
{0x33, 0x8a}, //Outdoor 1281
{0x34, 0x82},
{0x35, 0x0a}, //Outdoor 1282
{0x36, 0x83},
{0x37, 0x12}, //Outdoor 1283
{0x38, 0x84},
{0x39, 0xc8}, //Outdoor 1284
{0x3a, 0x85},
{0x3b, 0x92}, //Outdoor 1285
{0x3c, 0x86},
{0x3d, 0x20}, //Outdoor 1286
{0x3e, 0x87},
{0x3f, 0x00}, //Outdoor 1287
{0x40, 0x88},
{0x41, 0x70}, //Outdoor 1288 lmt center
{0x42, 0x89},
{0x43, 0xaa}, //Outdoor 1289
{0x44, 0x8a},
{0x45, 0x50}, //Outdoor 128a
{0x46, 0x8b},
{0x47, 0x10}, //Outdoor 128b
{0x48, 0x8c},
{0x49, 0x04}, //Outdoor 128c
{0x4a, 0x8d},
{0x4b, 0x02}, //Outdoor 128d
{0x4c, 0xe6},
{0x4d, 0xff}, //Outdoor 12e6
{0x4e, 0xe7},
{0x4f, 0x18}, //Outdoor 12e7
{0x50, 0xe8},
{0x51, 0x20}, //Outdoor 12e8
{0x52, 0xe9},
{0x53, 0x04}, //Outdoor 12e9
{0x54, 0x03},
{0x55, 0x13},
{0x56, 0x10},
{0x57, 0x3f}, //Outdoor 1310 Skin Color On
{0x58, 0x20},
{0x59, 0x20}, //Outdoor 1320
{0x5a, 0x21},
{0x5b, 0x30}, //Outdoor 1321
{0x5c, 0x22},
{0x5d, 0x36}, //Outdoor 1322
{0x5e, 0x23},
{0x5f, 0x6a}, //Outdoor 1323
{0x60, 0x24},
{0x61, 0xa0}, //Outdoor 1324
{0x62, 0x25},
{0x63, 0xc0}, //Outdoor 1325
{0x64, 0x26},
{0x65, 0xe0}, //Outdoor 1326
{0x66, 0x27},
{0x67, 0x0a}, //Outdoor 1327
{0x68, 0x28},
{0x69, 0x0a}, //Outdoor 1328
{0x6a, 0x29},
{0x6b, 0x0a}, //Outdoor 1329
{0x6c, 0x2a},
{0x6d, 0x08}, //Outdoor 132a
{0x6e, 0x2b},
{0x6f, 0x06}, //Outdoor 132b
{0x70, 0x2c},
{0x71, 0x05}, //Outdoor 132c
{0x72, 0x2d},
{0x73, 0x04}, //Outdoor 132d
{0x74, 0x2e},
{0x75, 0x03}, //Outdoor 132e
{0x76, 0x2f},
{0x77, 0x01}, //Outdoor 132f weight skin
{0x78, 0x30},
{0x79, 0x02}, //Outdoor 1330 weight blue
{0x7a, 0x31},
{0x7b, 0x78}, //Outdoor 1331 weight green
{0x7c, 0x32},
{0x7d, 0x01}, //Outdoor 1332 weight strong color
{0x7e, 0x33},
{0x7f, 0x80}, //Outdoor 1333
{0x80, 0x34},
{0x81, 0xf0}, //Outdoor 1334
{0x82, 0x35},
{0x83, 0x10}, //Outdoor 1335
{0x84, 0x36},
{0x85, 0xf0}, //Outdoor 1336
{0x86, 0xa0},
{0x87, 0x07}, //Outdoor 13a0
{0x88, 0xa8},
{0x89, 0x24}, //Outdoor 13a8 Outdoor Cb-filter
{0x8a, 0xa9},
{0x8b, 0x24}, //Outdoor 13a9 Outdoor Cr-filter
{0x8c, 0xaa},
{0x8d, 0x20}, //Outdoor 13aa
{0x8e, 0xab},
{0x8f, 0x02}, //Outdoor 13ab
{0x90, 0xc0},
{0x91, 0x27}, //Outdoor 13c0
{0x92, 0xc2},
{0x93, 0x08}, //Outdoor 13c2
{0x94, 0xc3},
{0x95, 0x08}, //Outdoor 13c3
{0x96, 0xc4},
{0x97, 0x40}, //Outdoor 13c4 Green Detect
{0x98, 0xc5},
{0x99, 0x78}, //Outdoor 13c5
{0x9a, 0xc6},
{0x9b, 0xf0}, //Outdoor 13c6
{0x9c, 0xc7},
{0x9d, 0x10}, //Outdoor 13c7
{0x9e, 0xc8},
{0x9f, 0x44}, //Outdoor 13c8
{0xa0, 0xc9},
{0xa1, 0x87}, //Outdoor 13c9
{0xa2, 0xca},
{0xa3, 0xff}, //Outdoor 13ca
{0xa4, 0xcb},
{0xa5, 0x20}, //Outdoor 13cb
{0xa6, 0xcc},
{0xa7, 0x61}, //Outdoor 13cc skin range_cb_l
{0xa8, 0xcd},
{0xa9, 0x87}, //Outdoor 13cd skin range_cb_h
{0xaa, 0xce},
{0xab, 0x8a}, //Outdoor 13ce skin range_cr_l
{0xac, 0xcf},
{0xad, 0xa5}, //Outdoor 13cf skin range_cr_h
{0xae, 0x03},
{0xaf, 0x14},
{0xb0, 0x11},
{0xb1, 0x02}, //Outdoor 1410
{0xb2, 0x11},
{0xb3, 0x02}, //Outdoor 1411
{0xb4, 0x12},
{0xb5, 0x60}, //Outdoor 1412 Top H_Clip
{0xb6, 0x13},
{0xb7, 0x62}, //Outdoor 1413
{0xb8, 0x14},
{0xb9, 0x20}, //Outdoor 1414
{0xba, 0x15},
{0xbb, 0x30}, //Outdoor 1415 sharp positive ya
{0xbc, 0x16},
{0xbd, 0x30}, //Outdoor 1416 sharp positive mi
{0xbe, 0x17},
{0xbf, 0x30}, //Outdoor 1417 sharp positive low
{0xc0, 0x18},
{0xc1, 0x54}, //Outdoor 1418 sharp negative ya
{0xc2, 0x19},
{0xc3, 0x54}, //Outdoor 1419 sharp negative mi
{0xc4, 0x1a},
{0xc5, 0x40}, //Outdoor 141a sharp negative low
{0xc6, 0x20},
{0xc7, 0xd2}, //Outdoor 1420
{0xc8, 0x21},
{0xc9, 0x03}, //Outdoor 1421
{0xca, 0x22},
{0xcb, 0x04}, //Outdoor 1422
{0xcc, 0x23},
{0xcd, 0x04}, //Outdoor 1423
{0xce, 0x24},
{0xcf, 0x05}, //Outdoor 1424
{0xd0, 0x25},
{0xd1, 0x32}, //Outdoor 1425
{0xd2, 0x26},
{0xd3, 0x30}, //Outdoor 1426
{0xd4, 0x27},
{0xd5, 0x20}, //Outdoor 1427
{0xd6, 0x28},
{0xd7, 0x3c}, //Outdoor 1428
{0xd8, 0x29},
{0xd9, 0x00}, //Outdoor 1429
{0xda, 0x2a},
{0xdb, 0x16}, //Outdoor 142a S_Diff Hi Dr_Gain
{0xdc, 0x2b},
{0xdd, 0x16}, //Outdoor 142b S_Diff Middle Dr_Gain
{0xde, 0x2c},
{0xdf, 0x16}, //Outdoor 142c S_Diff Low Dr_Gain
{0xe0, 0x2d},
{0xe1, 0x54}, //Outdoor 142d
{0xe2, 0x2e},
{0xe3, 0x54}, //Outdoor 142e
{0xe4, 0x2f},
{0xe5, 0x54}, //Outdoor 142f
{0xe6, 0x30},
{0xe7, 0x82}, //Outdoor 1430
{0xe8, 0x31},
{0xe9, 0x02}, //Outdoor 1431
{0xea, 0x32},
{0xeb, 0x04}, //Outdoor 1432
{0xec, 0x33},
{0xed, 0x04}, //Outdoor 1433
{0xee, 0x34},
{0xef, 0x0a}, //Outdoor 1434
{0xf0, 0x35},
{0xf1, 0x46}, //Outdoor 1435
{0xf2, 0x36},
{0xf3, 0x32}, //Outdoor 1436
{0xf4, 0x37},
{0xf5, 0x28}, //Outdoor 1437
{0xf6, 0x38},
{0xf7, 0x12}, //Outdoor 1438
{0xf8, 0x39},
{0xf9, 0x00}, //Outdoor 1439
{0xfa, 0x3a},
{0xfb, 0x24}, //Outdoor 143a L_Diff Hi Dr_Gain
{0xfc, 0x3b},
{0xfd, 0x24}, //Outdoor 143b L_Diff Middle Dr_Gain
{0x0e, 0x00}, //burst_end
{0x03, 0xdc},
{0x0e, 0x01}, //burst_start
{0x10, 0x3c},
{0x11, 0x24}, //Outdoor 143c L_Diff Low Dr_Gain
{0x12, 0x3d},
{0x13, 0x24}, //Outdoor 143d L_Diff Hi_Normal Gain
{0x14, 0x3e},
{0x15, 0x24}, //Outdoor 143e L_Diff Middle_Normal Gain
{0x16, 0x3f},
{0x17, 0x14}, //Outdoor 143f L_Diff Low_Normal Gain
{0x18, 0x40},
{0x19, 0x82}, //Outdoor 1440
{0x1a, 0x41},
{0x1b, 0x1a}, //Outdoor 1441 H Clip
{0x1c, 0x42},
{0x1d, 0x70}, //Outdoor 1442
{0x1e, 0x43},
{0x1f, 0x20}, //Outdoor 1443
{0x20, 0x44},
{0x21, 0x26}, //Outdoor 1444 M_Diff Hi Dr_Gain
{0x22, 0x45},
{0x23, 0x1e}, //Outdoor 1445 M_Diff Low Dr_Gain
{0x24, 0x46},
{0x25, 0x24}, //Outdoor 1446 M_Diff Middle Dr_Gain
{0x26, 0x47},
{0x27, 0x18}, //Outdoor 1447
{0x28, 0x48},
{0x29, 0x0a}, //Outdoor 1448
{0x2a, 0x49},
{0x2b, 0x10}, //Outdoor 1449
{0x2c, 0x50},
{0x2d, 0x82}, //Outdoor 1450
{0x2e, 0x51},
{0x2f, 0x38}, //Outdoor 1451
{0x30, 0x52},
{0x31, 0xf0}, //Outdoor 1452
{0x32, 0x53},
{0x33, 0x78}, //Outdoor 1453
{0x34, 0x54},
{0x35, 0x24}, //Outdoor 1454
{0x36, 0x55},
{0x37, 0x24}, //Outdoor 1455
{0x38, 0x56},
{0x39, 0x24}, //Outdoor 1456
{0x3a, 0x57},
{0x3b, 0x10}, //Outdoor 1457
{0x3c, 0x58},
{0x3d, 0x14}, //Outdoor 1458
{0x3e, 0x59},
{0x3f, 0x10}, //Outdoor 1459
{0x40, 0x60},
{0x41, 0x01}, //Outdoor 1460 skin opt
{0x42, 0x61},
{0x43, 0xa0}, //Outdoor 1461
{0x44, 0x62},
{0x45, 0x98}, //Outdoor 1462
{0x46, 0x63},
{0x47, 0xe4}, //Outdoor 1463 skin_std_th_h
{0x48, 0x64},
{0x49, 0xa4}, //Outdoor 1464 skin_std_th_l
{0x4a, 0x65},
{0x4b, 0x7d}, //Outdoor 1465 sharp_std_th_h
{0x4c, 0x66},
{0x4d, 0x4b}, //Outdoor 1466 sharp_std_th_l
{0x4e, 0x70},
{0x4f, 0x10}, //Outdoor 1470
{0x50, 0x71},
{0x51, 0x10}, //Outdoor 1471
{0x52, 0x72},
{0x53, 0x10}, //Outdoor 1472
{0x54, 0x73},
{0x55, 0x10}, //Outdoor 1473
{0x56, 0x74},
{0x57, 0x10}, //Outdoor 1474
{0x58, 0x75},
{0x59, 0x10}, //Outdoor 1475
{0x5a, 0x76},
{0x5b, 0x38}, //Outdoor 1476 green sharp pos High
{0x5c, 0x77},
{0x5d, 0x38}, //Outdoor 1477 green sharp pos Middle
{0x5e, 0x78},
{0x5f, 0x38}, //Outdoor 1478 green sharp pos Low
{0x60, 0x79},
{0x61, 0x58}, //Outdoor 1479 green sharp nega High
{0x62, 0x7a},
{0x63, 0x58}, //Outdoor 147a green sharp nega Middle
{0x64, 0x7b},
{0x65, 0x58}, //Outdoor 147b green sharp nega Low

{0x66, 0x03},
{0x67, 0x10}, //10 page
{0x68, 0x60},
{0x69, 0x03}, //1060
{0x6a, 0x70},
{0x6b, 0x0c}, //1070
{0x6c, 0x71},
{0x6d, 0x00}, //1071
{0x6e, 0x72},
{0x6f, 0x7a}, //1072
{0x70, 0x73},
{0x71, 0x28}, //1073
{0x72, 0x74},
{0x73, 0x14}, //1074
{0x74, 0x75},
{0x75, 0x0d}, //1075
{0x76, 0x76},
{0x77, 0x40}, //1076
{0x78, 0x77},
{0x79, 0x49}, //1077
{0x7a, 0x78},
{0x7b, 0x99}, //1078
{0x7c, 0x79},
{0x7d, 0x4c}, //1079
{0x7e, 0x7a},
{0x7f, 0xcc}, //107a
{0x80, 0x7b},
{0x81, 0x49}, //107b
{0x82, 0x7c},
{0x83, 0x99}, //107c
{0x84, 0x7d},
{0x85, 0x14}, //107d
{0x86, 0x7e},
{0x87, 0x28}, //107e
{0x88, 0x7f},
{0x89, 0x50}, //107f

{0x8a, 0x03}, //16 page
{0x8b, 0x16},
{0x8c, 0x8a}, //168a
{0x8d, 0x68},
{0x8e, 0x8b}, //168b
{0x8f, 0x7c},
{0x90, 0x8c}, //168c
{0x91, 0x7f},
{0x92, 0x8d}, //168d
{0x93, 0x7f},
{0x94, 0x8e}, //168e
{0x95, 0x7f},
{0x96, 0x8f}, //168f
{0x97, 0x7f},
{0x98, 0x90}, //1690
{0x99, 0x7f},
{0x9a, 0x91}, //1691
{0x9b, 0x7f},
{0x9c, 0x92}, //1692
{0x9d, 0x7f},

{0x0e, 0x00}, //burst_end
//////////////////
// dd Page (DMA Indoor)
//////////////////

{0x03, 0xdd},
{0x0e, 0x01}, //burst_start
{0x10, 0x03},
{0x11, 0x11},
{0x12, 0x10},
{0x13, 0x13}, //Indoor 1110
{0x14, 0x11},
{0x15, 0x08}, //Indoor 1111
{0x16, 0x12},
{0x17, 0x1e}, //Indoor 1112
{0x18, 0x13},
{0x19, 0x0e}, //Indoor 1113
{0x1a, 0x14},
{0x1b, 0x31}, //Indoor 1114
{0x1c, 0x30},
{0x1d, 0x20}, //Indoor 1130
{0x1e, 0x31},
{0x1f, 0x20}, //Indoor 1131
{0x20, 0x32},
{0x21, 0x52}, //Indoor 1132
{0x22, 0x33},
{0x23, 0x3b}, //Indoor 1133
{0x24, 0x34},
{0x25, 0x1d}, //Indoor 1134
{0x26, 0x35},
{0x27, 0x21}, //Indoor 1135
{0x28, 0x36},
{0x29, 0x1b}, //Indoor 1136
{0x2a, 0x37},
{0x2b, 0x21}, //Indoor 1137
{0x2c, 0x38},
{0x2d, 0x18}, //Indoor 1138
{0x2e, 0x39},
{0x2f, 0x18}, //Indoor 1139 R2 lvl1 gain
{0x30, 0x3a},
{0x31, 0x18}, //Indoor 113a R2 lvl2 gain
{0x32, 0x3b},
{0x33, 0x18}, //Indoor 113b R2 lvl3 gain
{0x34, 0x3c},
{0x35, 0x1a}, //Indoor 113c R2 lvl4 gain
{0x36, 0x3d},
{0x37, 0x1a}, //Indoor 113d R2 lvl5 gain
{0x38, 0x3e},
{0x39, 0x20}, //Indoor 113e R2 lvl6 gain
{0x3a, 0x3f},
{0x3b, 0x22}, //Indoor 113f R2 lvl7 gain
{0x3c, 0x40},
{0x3d, 0x20}, //Indoor 1140 R2 lvl8 gain
{0x3e, 0x41},
{0x3f, 0x10}, //Indoor 1141 R2 Lvl1 offset
{0x40, 0x42},
{0x41, 0x10}, //Indoor 1142 R2 Lvl2 offset
{0x42, 0x43},
{0x43, 0x10}, //Indoor 1143 R2 Lvl3 offset
{0x44, 0x44},
{0x45, 0x10}, //Indoor 1144 R2 Lvl4 offset
{0x46, 0x45},
{0x47, 0x18}, //Indoor 1145 R2 Lvl5 offset
{0x48, 0x46},
{0x49, 0x18}, //Indoor 1146 R2 Lvl6 offset
{0x4a, 0x47},
{0x4b, 0x40}, //Indoor 1147 R2 Lvl7 offset
{0x4c, 0x48},
{0x4d, 0x40}, //Indoor 1148 R2 Lvl8 offset
{0x4e, 0x49},
{0x4f, 0xe0}, //Indoor 1149 Lv1 h_clip
{0x50, 0x4a},
{0x51, 0xf0}, //Indoor 114a Lv2 h_clip
{0x52, 0x4b},
{0x53, 0xfc}, //Indoor 114b Lv3 h_clip
{0x54, 0x4c},
{0x55, 0xfc}, //Indoor 114c Lv4 h_clip
{0x56, 0x4d},
{0x57, 0xfc}, //Indoor 114d Lv5 h_clip
{0x58, 0x4e},
{0x59, 0xf0}, //Indoor 114e Lv6 h_clip
{0x5a, 0x4f},
{0x5b, 0xf0}, //Indoor 114f Lv7 h_clip
{0x5c, 0x50},
{0x5d, 0xf0}, //Indoor 1150 Lv8 h_clip
{0x5e, 0x51},
{0x5f, 0x68}, //Indoor 1151 color gain start
{0x60, 0x52},
{0x61, 0x68}, //Indoor 1152
{0x62, 0x53},
{0x63, 0x68}, //Indoor 1153
{0x64, 0x54},
{0x65, 0x68}, //Indoor 1154
{0x66, 0x55},
{0x67, 0x68}, //Indoor 1155
{0x68, 0x56},
{0x69, 0x68}, //Indoor 1156
{0x6a, 0x57},
{0x6b, 0x68}, //Indoor 1157
{0x6c, 0x58},
{0x6d, 0x68}, //Indoor 1158 color gain end
{0x6e, 0x59},
{0x6f, 0x70}, //Indoor 1159 color ofs lmt start
{0x70, 0x5a},
{0x71, 0x70}, //Indoor 115a
{0x72, 0x5b},
{0x73, 0x70}, //Indoor 115b
{0x74, 0x5c},
{0x75, 0x70}, //Indoor 115c
{0x76, 0x5d},
{0x77, 0x70}, //Indoor 115d
{0x78, 0x5e},
{0x79, 0x70}, //Indoor 115e
{0x7a, 0x5f},
{0x7b, 0x70}, //Indoor 115f
{0x7c, 0x60},
{0x7d, 0x70}, //Indoor 1160 color ofs lmt end
{0x7e, 0x61},
{0x7f, 0xc0}, //Indoor 1161
{0x80, 0x62},
{0x81, 0xf0}, //Indoor 1162
{0x82, 0x63},
{0x83, 0x80}, //Indoor 1163
{0x84, 0x64},
{0x85, 0x40}, //Indoor 1164
{0x86, 0x65},
{0x87, 0x80}, //Indoor 1165
{0x88, 0x66},
{0x89, 0x80}, //Indoor 1166
{0x8a, 0x67},
{0x8b, 0x80}, //Indoor 1167
{0x8c, 0x68},
{0x8d, 0x80}, //Indoor 1168
{0x8e, 0x69},
{0x8f, 0x40}, //Indoor 1169
{0x90, 0x6a},
{0x91, 0x80}, //Indoor 116a Imp Lv2 High Gain
{0x92, 0x6b},
{0x93, 0x80}, //Indoor 116b Imp Lv2 Middle Gain
{0x94, 0x6c},
{0x95, 0x80}, //Indoor 116c Imp Lv2 Low Gain
{0x96, 0x6d},
{0x97, 0x80}, //Indoor 116d
{0x98, 0x6e},
{0x99, 0x40}, //Indoor 116e
{0x9a, 0x6f},
{0x9b, 0x80}, //Indoor 116f Imp Lv3 Hi Gain
{0x9c, 0x70},
{0x9d, 0x60}, //Indoor 1170 Imp Lv3 Middle Gain
{0x9e, 0x71},
{0x9f, 0x40}, //Indoor 1171 Imp Lv3 Low Gain
{0xa0, 0x72},
{0xa1, 0x6e}, //Indoor 1172
{0xa2, 0x73},
{0xa3, 0x3a}, //Indoor 1173
{0xa4, 0x74},
{0xa5, 0x80}, //Indoor 1174 Imp Lv4 Hi Gain
{0xa6, 0x75},
{0xa7, 0x80}, //Indoor 1175 Imp Lv4 Middle Gain
{0xa8, 0x76},
{0xa9, 0x40}, //Indoor 1176 Imp Lv4 Low Gain
{0xaa, 0x77},
{0xab, 0x6e}, //Indoor 1177 Imp Lv5 Hi Th
{0xac, 0x78},
{0xad, 0x66}, //Indoor 1178 Imp Lv5 Middle Th
{0xae, 0x79},
{0xaf, 0x60}, //Indoor 1179 Imp Lv5 Hi Gain
{0xb0, 0x7a},
{0xb1, 0x30}, //Indoor 117a Imp Lv5 Middle Gain
{0xb2, 0x7b},
{0xb3, 0x20}, //Indoor 117b Imp Lv5 Low Gain
{0xb4, 0x7c},
{0xb5, 0x5c}, //Indoor 117c Imp Lv6 Hi Th
{0xb6, 0x7d},
{0xb7, 0x30}, //Indoor 117d Imp Lv6 Middle Th
{0xb8, 0x7e},
{0xb9, 0x60}, //Indoor 117e Imp Lv6 Hi Gain
{0xba, 0x7f},
{0xbb, 0x60}, //Indoor 117f Imp Lv6 Middle Gain
{0xbc, 0x80},
{0xbd, 0x20}, //Indoor 1180 Imp Lv6 Low Gain
{0xbe, 0x81},
{0xbf, 0x62}, //Indoor 1181
{0xc0, 0x82},
{0xc1, 0x26}, //Indoor 1182
{0xc2, 0x83},
{0xc3, 0x60}, //Indoor 1183 Imp Lv7 Hi Gain
{0xc4, 0x84},
{0xc5, 0x60}, //Indoor 1184 Imp Lv7 Middle Gain
{0xc6, 0x85},
{0xc7, 0x60}, //Indoor 1185 Imp Lv7 Low Gain
{0xc8, 0x86},
{0xc9, 0x62}, //Indoor 1186
{0xca, 0x87},
{0xcb, 0x26}, //Indoor 1187
{0xcc, 0x88},
{0xcd, 0x60}, //Indoor 1188
{0xce, 0x89},
{0xcf, 0x60}, //Indoor 1189
{0xd0, 0x8a},
{0xd1, 0x60}, //Indoor 118a
{0xd2, 0x90},
{0xd3, 0x00}, //Indoor 1190
{0xd4, 0x91},
{0xd5, 0x4e}, //Indoor 1191
{0xd6, 0x92},
{0xd7, 0x00}, //Indoor 1192
{0xd8, 0x93},
{0xd9, 0x16}, //Indoor 1193
{0xda, 0x94},
{0xdb, 0x01}, //Indoor 1194
{0xdc, 0x95},
{0xdd, 0x80}, //Indoor 1195
{0xde, 0x96},
{0xdf, 0x55}, //Indoor 1196
{0xe0, 0x97},
{0xe1, 0x8d}, //Indoor 1197
{0xe2, 0xb0},
{0xe3, 0x60}, //Indoor 11b0
{0xe4, 0xb1},
{0xe5, 0xb0}, //Indoor 11b1
{0xe6, 0xb2},
{0xe7, 0x88}, //Indoor 11b2
{0xe8, 0xb3},
{0xe9, 0x10}, //Indoor 11b3
{0xea, 0xb4},
{0xeb, 0x04}, //Indoor 11b4
{0xec, 0x03},
{0xed, 0x12},
{0xee, 0x10},
{0xef, 0x03}, //Indoor 1210
{0xf0, 0x11},
{0xf1, 0x29}, //Indoor 1211
{0xf2, 0x12},
{0xf3, 0x08}, //Indoor 1212
{0xf4, 0x40},
{0xf5, 0x33}, //Indoor 1240
{0xf6, 0x41},
{0xf7, 0x0a}, //Indoor 1241
{0xf8, 0x42},
{0xf9, 0x6a}, //Indoor 1242
{0xfa, 0x43},
{0xfb, 0x80}, //Indoor 1243
{0xfc, 0x44},
{0xfd, 0x02}, //Indoor 1244
{0x0e, 0x00}, //burst_end
{0x03, 0xde},
{0x0e, 0x01}, //burst_start
{0x10, 0x45},
{0x11, 0x0a}, //Indoor 1245
{0x12, 0x46},
{0x13, 0x80}, //Indoor 1246
{0x14, 0x60},
{0x15, 0x21}, //Indoor 1260
{0x16, 0x61},
{0x17, 0x0e}, //Indoor 1261
{0x18, 0x62},
{0x19, 0x70}, //Indoor 1262
{0x1a, 0x63},
{0x1b, 0x70}, //Indoor 1263
{0x1c, 0x64},
{0x1d, 0x14}, //Indoor 1264
{0x1e, 0x65},
{0x1f, 0x01}, //Indoor 1265
{0x20, 0x68},
{0x21, 0x0a}, //Indoor 1268
{0x22, 0x69},
{0x23, 0x04}, //Indoor 1269
{0x24, 0x6a},
{0x25, 0x0a}, //Indoor 126a
{0x26, 0x6b},
{0x27, 0x0a}, //Indoor 126b
{0x28, 0x6c},
{0x29, 0x24}, //Indoor 126c
{0x2a, 0x6d},
{0x2b, 0x01}, //Indoor 126d
{0x2c, 0x70},
{0x2d, 0x01}, //Indoor 1270
{0x2e, 0x71},
{0x2f, 0x3d}, //Indoor 1271
{0x30, 0x80},
{0x31, 0x80}, //Indoor 1280
{0x32, 0x81},
{0x33, 0x88}, //Indoor 1281
{0x34, 0x82},
{0x35, 0x08}, //Indoor 1282
{0x36, 0x83},
{0x37, 0x0c}, //Indoor 1283
{0x38, 0x84},
{0x39, 0x90}, //Indoor 1284
{0x3a, 0x85},
{0x3b, 0x92}, //Indoor 1285
{0x3c, 0x86},
{0x3d, 0x20}, //Indoor 1286
{0x3e, 0x87},
{0x3f, 0x00}, //Indoor 1287
{0x40, 0x88},
{0x41, 0x70}, //Indoor 1288
{0x42, 0x89},
{0x43, 0xaa}, //Indoor 1289
{0x44, 0x8a},
{0x45, 0x50}, //Indoor 128a
{0x46, 0x8b},
{0x47, 0x10}, //Indoor 128b
{0x48, 0x8c},
{0x49, 0x04}, //Indoor 128c
{0x4a, 0x8d},
{0x4b, 0x02}, //Indoor 128d
{0x4c, 0xe6},
{0x4d, 0xff}, //Indoor 12e6
{0x4e, 0xe7},
{0x4f, 0x18}, //Indoor 12e7
{0x50, 0xe8},
{0x51, 0x20}, //Indoor 12e8
{0x52, 0xe9},
{0x53, 0x06}, //Indoor 12e9
{0x54, 0x03},
{0x55, 0x13},
{0x56, 0x10},
{0x57, 0x33}, //Indoor 1310
{0x58, 0x20},
{0x59, 0x20}, //Indoor 1320
{0x5a, 0x21},
{0x5b, 0x30}, //Indoor 1321
{0x5c, 0x22},
{0x5d, 0x36}, //Indoor 1322
{0x5e, 0x23},
{0x5f, 0x6a}, //Indoor 1323
{0x60, 0x24},
{0x61, 0xa0}, //Indoor 1324
{0x62, 0x25},
{0x63, 0xc0}, //Indoor 1325
{0x64, 0x26},
{0x65, 0xe0}, //Indoor 1326
{0x66, 0x27},
{0x67, 0x02}, //Indoor 1327
{0x68, 0x28},
{0x69, 0x03}, //Indoor 1328
{0x6a, 0x29},
{0x6b, 0x03}, //Indoor 1329
{0x6c, 0x2a},
{0x6d, 0x10}, //Indoor 132a
{0x6e, 0x2b},
{0x6f, 0x10}, //Indoor 132b
{0x70, 0x2c},
{0x71, 0x04}, //Indoor 132c
{0x72, 0x2d},
{0x73, 0x03}, //Indoor 132d
{0x74, 0x2e},
{0x75, 0x03}, //Indoor 132e
{0x76, 0x2f},
{0x77, 0x18}, //Indoor 132f
{0x78, 0x30},
{0x79, 0x03}, //Indoor 1330
{0x7a, 0x31},
{0x7b, 0x03}, //Indoor 1331
{0x7c, 0x32},
{0x7d, 0x03}, //Indoor 1332
{0x7e, 0x33},
{0x7f, 0x40}, //Indoor 1333
{0x80, 0x34},
{0x81, 0x80}, //Indoor 1334
{0x82, 0x35},
{0x83, 0x00}, //Indoor 1335
{0x84, 0x36},
{0x85, 0xf0}, //Indoor 1336
{0x86, 0xa0},
{0x87, 0x07}, //Indoor 13a0
{0x88, 0xa8},
{0x89, 0x24}, //Indoor 13a8 Cb_Filter
{0x8a, 0xa9},
{0x8b, 0x24}, //Indoor 13a9 Cr_Filter
{0x8c, 0xaa},
{0x8d, 0x20}, //Indoor 13aa
{0x8e, 0xab},
{0x8f, 0x02}, //Indoor 13ab
{0x90, 0xc0},
{0x91, 0x27}, //Indoor 13c0
{0x92, 0xc2},
{0x93, 0x08}, //Indoor 13c2
{0x94, 0xc3},
{0x95, 0x08}, //Indoor 13c3
{0x96, 0xc4},
{0x97, 0x40}, //Indoor 13c4
{0x98, 0xc5},
{0x99, 0x38}, //Indoor 13c5
{0x9a, 0xc6},
{0x9b, 0xf0}, //Indoor 13c6
{0x9c, 0xc7},
{0x9d, 0x10}, //Indoor 13c7
{0x9e, 0xc8},
{0x9f, 0x44}, //Indoor 13c8
{0xa0, 0xc9},
{0xa1, 0x87}, //Indoor 13c9
{0xa2, 0xca},
{0xa3, 0xff}, //Indoor 13ca
{0xa4, 0xcb},
{0xa5, 0x20}, //Indoor 13cb
{0xa6, 0xcc},
{0xa7, 0x61}, //Indoor 13cc
{0xa8, 0xcd},
{0xa9, 0x87}, //Indoor 13cd
{0xaa, 0xce},
{0xab, 0x8a}, //Indoor 13ce
{0xac, 0xcf},
{0xad, 0xa5}, //Indoor 13cf
{0xae, 0x03},
{0xaf, 0x14},
{0xb0, 0x11},
{0xb1, 0x02}, //Indoor 1410
{0xb2, 0x11},
{0xb3, 0x02}, //Indoor 1411 TOP L_clip
{0xb4, 0x12},
{0xb5, 0x40}, //Indoor 1412
{0xb6, 0x13},
{0xb7, 0x98}, //Indoor 1413
{0xb8, 0x14},
{0xb9, 0x3a}, //Indoor 1414
{0xba, 0x15},
{0xbb, 0x30}, //Indoor 1415
{0xbc, 0x16},
{0xbd, 0x30}, //Indoor 1416
{0xbe, 0x17},
{0xbf, 0x30}, //Indoor 1417
{0xc0, 0x18},
{0xc1, 0x58}, //Indoor 1418  Negative High Gain
{0xc2, 0x19},
{0xc3, 0x60}, //Indoor 1419  Negative Middle Gain
{0xc4, 0x1a},
{0xc5, 0x60}, //Indoor 141a  Negative Low Gain
{0xc6, 0x20},
{0xc7, 0x82}, //Indoor 1420  s_diff L_clip
{0xc8, 0x21},
{0xc9, 0x03}, //Indoor 1421
{0xca, 0x22},
{0xcb, 0x05}, //Indoor 1422
{0xcc, 0x23},
{0xcd, 0x07}, //Indoor 1423
{0xce, 0x24},
{0xcf, 0x0a}, //Indoor 1424
{0xd0, 0x25},
{0xd1, 0x46}, //Indoor 1425
{0xd2, 0x26},
{0xd3, 0x32}, //Indoor 1426
{0xd4, 0x27},
{0xd5, 0x1e}, //Indoor 1427
{0xd6, 0x28},
{0xd7, 0x10}, //Indoor 1428
{0xd8, 0x29},
{0xd9, 0x00}, //Indoor 1429
{0xda, 0x2a},
{0xdb, 0x18}, //Indoor 142a
{0xdc, 0x2b},
{0xdd, 0x18}, //Indoor 142b
{0xde, 0x2c},
{0xdf, 0x18}, //Indoor 142c
{0xe0, 0x2d},
{0xe1, 0x30}, //Indoor 142d
{0xe2, 0x2e},
{0xe3, 0x30}, //Indoor 142e
{0xe4, 0x2f},
{0xe5, 0x30}, //Indoor 142f
{0xe6, 0x30},
{0xe7, 0x82}, //Indoor 1430 Ldiff_L_cip
{0xe8, 0x31},
{0xe9, 0x02}, //Indoor 1431
{0xea, 0x32},
{0xeb, 0x04}, //Indoor 1432
{0xec, 0x33},
{0xed, 0x04}, //Indoor 1433
{0xee, 0x34},
{0xef, 0x0a}, //Indoor 1434
{0xf0, 0x35},
{0xf1, 0x46}, //Indoor 1435
{0xf2, 0x36},
{0xf3, 0x32}, //Indoor 1436
{0xf4, 0x37},
{0xf5, 0x28}, //Indoor 1437
{0xf6, 0x38},
{0xf7, 0x12}, //Indoor 1438
{0xf8, 0x39},
{0xf9, 0x00}, //Indoor 1439
{0xfa, 0x3a},
{0xfb, 0x20}, //Indoor 143a
{0xfc, 0x3b},
{0xfd, 0x30}, //Indoor 143b
{0x0e, 0x00}, //burst_end

{0x03, 0xdf},
{0x0e, 0x01}, //burst_start
{0x10, 0x3c},
{0x11, 0x20}, //Indoor 143c
{0x12, 0x3d},
{0x13, 0x18}, //Indoor 143d
{0x14, 0x3e},
{0x15, 0x28}, //Indoor 143e
{0x16, 0x3f},
{0x17, 0x14}, //Indoor 143f
{0x18, 0x40},
{0x19, 0x84}, //Indoor 1440  Mdiff Low Clip
{0x1a, 0x41},
{0x1b, 0x10}, //Indoor 1441
{0x1c, 0x42},
{0x1d, 0x70}, //Indoor 1442
{0x1e, 0x43},
{0x1f, 0x20}, //Indoor 1443
{0x20, 0x44},
{0x21, 0x18}, //Indoor 1444
{0x22, 0x45},
{0x23, 0x18}, //Indoor 1445
{0x24, 0x46},
{0x25, 0x10}, //Indoor 1446
{0x26, 0x47},
{0x27, 0x18}, //Indoor 1447
{0x28, 0x48},
{0x29, 0x0a}, //Indoor 1448
{0x2a, 0x49},
{0x2b, 0x10}, //Indoor 1449
{0x2c, 0x50},
{0x2d, 0x84}, //Indoor 1450 Hdiff Low Clip
{0x2e, 0x51},
{0x2f, 0x30}, //Indoor 1451 hclip
{0x30, 0x52},
{0x31, 0xb0}, //Indoor 1452
{0x32, 0x53},
{0x33, 0x37}, //Indoor 1453
{0x34, 0x54},
{0x35, 0x33}, //Indoor 1454
{0x36, 0x55},
{0x37, 0x33}, //Indoor 1455
{0x38, 0x56},
{0x39, 0x33}, //Indoor 1456
{0x3a, 0x57},
{0x3b, 0x10}, //Indoor 1457
{0x3c, 0x58},
{0x3d, 0x20}, //Indoor 1458
{0x3e, 0x59},
{0x3f, 0x20}, //Indoor 1459
{0x40, 0x60},
{0x41, 0x01}, //Indoor 1460
{0x42, 0x61},
{0x43, 0xa0}, //Indoor 1461
{0x44, 0x62},
{0x45, 0x98}, //Indoor 1462
{0x46, 0x63},
{0x47, 0xe4}, //Indoor 1463
{0x48, 0x64},
{0x49, 0xa4}, //Indoor 1464
{0x4a, 0x65},
{0x4b, 0x7d}, //Indoor 1465
{0x4c, 0x66},
{0x4d, 0x4b}, //Indoor 1466
{0x4e, 0x70},
{0x4f, 0x10}, //Indoor 1470
{0x50, 0x71},
{0x51, 0x10}, //Indoor 1471
{0x52, 0x72},
{0x53, 0x10}, //Indoor 1472
{0x54, 0x73},
{0x55, 0x10}, //Indoor 1473
{0x56, 0x74},
{0x57, 0x10}, //Indoor 1474
{0x58, 0x75},
{0x59, 0x10}, //Indoor 1475
{0x5a, 0x76},
{0x5b, 0x38}, //Indoor 1476    green sharp pos High
{0x5c, 0x77},
{0x5d, 0x38}, //Indoor 1477    green sharp pos Middle
{0x5e, 0x78},
{0x5f, 0x38}, //Indoor 1478    green sharp pos Low
{0x60, 0x79},
{0x61, 0x70}, //Indoor 1479    green sharp nega High
{0x62, 0x7a},
{0x63, 0x70}, //Indoor 147a    green sharp nega Middle
{0x64, 0x7b},
{0x65, 0x70}, //Indoor 147b    green sharp nega Low
{0x66, 0x03},
{0x67, 0x10}, //10 page
{0x68, 0x60},
{0x69, 0x03}, //1060
{0x6a, 0x70},
{0x6b, 0x0c}, //1070
{0x6c, 0x71},
{0x6d, 0x00}, //1071
{0x6e, 0x72},
{0x6f, 0x83}, //1072
{0x70, 0x73},
{0x71, 0x99}, //1073
{0x72, 0x74},
{0x73, 0x1b}, //1074
{0x74, 0x75},
{0x75, 0x0b}, //1075
{0x76, 0x76},
{0x77, 0x3c}, //1076
{0x78, 0x77},
{0x79, 0x43}, //1077
{0x7a, 0x78},
{0x7b, 0x33}, //1078
{0x7c, 0x79},
{0x7d, 0x4c}, //1079
{0x7e, 0x7a},
{0x7f, 0xcc}, //107a
{0x80, 0x7b},
{0x81, 0x49}, //107b
{0x82, 0x7c},
{0x83, 0x99}, //107c
{0x84, 0x7d},
{0x85, 0x0e}, //107d
{0x86, 0x7e},
{0x87, 0x1e}, //107e
{0x88, 0x7f},
{0x89, 0x3c}, //107f

{0x8a, 0x03}, //16 page
{0x8b, 0x16},
{0x8c, 0x8a}, //168a
{0x8d, 0x68},
{0x8e, 0x8b}, //168b
{0x8f, 0x7c},
{0x90, 0x8c}, //168c
{0x91, 0x7f},
{0x92, 0x8d}, //168d
{0x93, 0x7f},
{0x94, 0x8e}, //168e
{0x95, 0x7f},
{0x96, 0x8f}, //168f
{0x97, 0x7f},
{0x98, 0x90}, //1690
{0x99, 0x7f},
{0x9a, 0x91}, //1691
{0x9b, 0x7f},
{0x9c, 0x92}, //1692
{0x9d, 0x7f},

{0x0e, 0x00}, //burst_end
//////////////////
// e0 Page (DMA Dark1)
//////////////////
{0x03, 0xe0},
{0x0e, 0x01}, //burst_start
{0x10, 0x03},
{0x11, 0x11},
{0x12, 0x10},
{0x13, 0x13}, //Dark1 1110
{0x14, 0x11},
{0x15, 0x08}, //Dark1 1111
{0x16, 0x12},
{0x17, 0x1e}, //Dark1 1112
{0x18, 0x13},
{0x19, 0x0e}, //Dark1 1113
{0x1a, 0x14},
{0x1b, 0x31}, //Dark1 1114
{0x1c, 0x30},
{0x1d, 0x20}, //Dark1 1130
{0x1e, 0x31},
{0x1f, 0x20}, //Dark1 1131
{0x20, 0x32},
{0x21, 0x52}, //Dark1 1132
{0x22, 0x33},
{0x23, 0x3b}, //Dark1 1133
{0x24, 0x34},
{0x25, 0x1d}, //Dark1 1134
{0x26, 0x35},
{0x27, 0x21}, //Dark1 1135
{0x28, 0x36},
{0x29, 0x1b}, //Dark1 1136
{0x2a, 0x37},
{0x2b, 0x21}, //Dark1 1137
{0x2c, 0x38},
{0x2d, 0x18}, //Dark1 1138
{0x2e, 0x39},
{0x2f, 0x18}, //Dark1 1139 R2 lvl1 gain
{0x30, 0x3a},
{0x31, 0x20}, //Dark1 113a R2 lvl2 gain
{0x32, 0x3b},
{0x33, 0x28}, //Dark1 113b R2 lvl3 gain
{0x34, 0x3c},
{0x35, 0x20}, //Dark1 113c R2 lvl4 gain
{0x36, 0x3d},
{0x37, 0x20}, //Dark1 113d R2 lvl5 gain
{0x38, 0x3e},
{0x39, 0x1e}, //Dark1 113e R2 lvl6 gain
{0x3a, 0x3f},
{0x3b, 0x1e}, //Dark1 113f R2 lvl7 gain
{0x3c, 0x40},
{0x3d, 0x1e}, //Dark1 1140 R2 lvl8 gain
{0x3e, 0x41},
{0x3f, 0x10}, //Dark1 1141 R2 Lvl1 offset
{0x40, 0x42},
{0x41, 0x10}, //Dark1 1142 R2 Lvl2 offset
{0x42, 0x43},
{0x43, 0x20}, //Dark1 1143 R2 Lvl3 offset
{0x44, 0x44},
{0x45, 0x2a}, //Dark1 1144 R2 Lvl4 offset
{0x46, 0x45},
{0x47, 0x30}, //Dark1 1145 R2 Lvl5 offset
{0x48, 0x46},
{0x49, 0x50}, //Dark1 1146 R2 Lvl6 offset
{0x4a, 0x47},
{0x4b, 0x40}, //Dark1 1147 R2 Lvl7 offset
{0x4c, 0x48},
{0x4d, 0x40}, //Dark1 1148 R2 Lvl8 offset
{0x4e, 0x49},
{0x4f, 0x60}, //Dark1 1149 Lv1 h_clip
{0x50, 0x4a},
{0x51, 0x80}, //Dark1 114a Lv2 h_clip
{0x52, 0x4b},
{0x53, 0xa0}, //Dark1 114b Lv3 h_clip
{0x54, 0x4c},
{0x55, 0xa0}, //Dark1 114c Lv4 h_clip
{0x56, 0x4d},
{0x57, 0xa0}, //Dark1 114d Lv5 h_clip
{0x58, 0x4e},
{0x59, 0x90}, //Dark1 114e Lv6 h_clip
{0x5a, 0x4f},
{0x5b, 0x90}, //Dark1 114f Lv7 h_clip
{0x5c, 0x50},
{0x5d, 0x90}, //Dark1 1150 Lv8 h_clip
{0x5e, 0x51},
{0x5f, 0x68}, //Dark1 1151 color gain start
{0x60, 0x52},
{0x61, 0x68}, //Dark1 1152
{0x62, 0x53},
{0x63, 0x68}, //Dark1 1153
{0x64, 0x54},
{0x65, 0x68}, //Dark1 1154
{0x66, 0x55},
{0x67, 0x68}, //Dark1 1155
{0x68, 0x56},
{0x69, 0x68}, //Dark1 1156
{0x6a, 0x57},
{0x6b, 0x68}, //Dark1 1157
{0x6c, 0x58},
{0x6d, 0x68}, //Dark1 1158 color gain end
{0x6e, 0x59},
{0x6f, 0x70}, //Dark1 1159 color ofs lmt start
{0x70, 0x5a},
{0x71, 0x70}, //Dark1 115a
{0x72, 0x5b},
{0x73, 0x70}, //Dark1 115b
{0x74, 0x5c},
{0x75, 0x70}, //Dark1 115c
{0x76, 0x5d},
{0x77, 0x70}, //Dark1 115d
{0x78, 0x5e},
{0x79, 0x70}, //Dark1 115e
{0x7a, 0x5f},
{0x7b, 0x70}, //Dark1 115f
{0x7c, 0x60},
{0x7d, 0x70}, //Dark1 1160 color ofs lmt end
{0x7e, 0x61},
{0x7f, 0xc0}, //Dark1 1161
{0x80, 0x62},
{0x81, 0xf0}, //Dark1 1162
{0x82, 0x63},
{0x83, 0x80}, //Dark1 1163
{0x84, 0x64},
{0x85, 0x40}, //Dark1 1164
{0x86, 0x65},
{0x87, 0x40}, //Dark1 1165
{0x88, 0x66},
{0x89, 0x40}, //Dark1 1166
{0x8a, 0x67},
{0x8b, 0x40}, //Dark1 1167
{0x8c, 0x68},
{0x8d, 0x80}, //Dark1 1168
{0x8e, 0x69},
{0x8f, 0x40}, //Dark1 1169
{0x90, 0x6a},
{0x91, 0x40}, //Dark1 116a Imp Lv2 High Gain
{0x92, 0x6b},
{0x93, 0x40}, //Dark1 116b Imp Lv2 Middle Gain
{0x94, 0x6c},
{0x95, 0x40}, //Dark1 116c Imp Lv2 Low Gain
{0x96, 0x6d},
{0x97, 0x80}, //Dark1 116d
{0x98, 0x6e},
{0x99, 0x40}, //Dark1 116e
{0x9a, 0x6f},
{0x9b, 0x50}, //Dark1 116f Imp Lv3 Hi Gain
{0x9c, 0x70},
{0x9d, 0x50}, //Dark1 1170 Imp Lv3 Middle Gain
{0x9e, 0x71},
{0x9f, 0x50}, //Dark1 1171 Imp Lv3 Low Gain
{0xa0, 0x72},
{0xa1, 0x6e}, //Dark1 1172
{0xa2, 0x73},
{0xa3, 0x3a}, //Dark1 1173
{0xa4, 0x74},
{0xa5, 0x50}, //Dark1 1174 Imp Lv4 Hi Gain
{0xa6, 0x75},
{0xa7, 0x50}, //Dark1 1175 Imp Lv4 Middle Gain
{0xa8, 0x76},
{0xa9, 0x50}, //Dark1 1176 Imp Lv4 Low Gain
{0xaa, 0x77},
{0xab, 0x6e}, //Dark1 1177 Imp Lv5 Hi Th
{0xac, 0x78},
{0xad, 0x66}, //Dark1 1178 Imp Lv5 Middle Th
{0xae, 0x79},
{0xaf, 0x40}, //Dark1 1179 Imp Lv5 Hi Gain
{0xb0, 0x7a},
{0xb1, 0x40}, //Dark1 117a Imp Lv5 Middle Gain
{0xb2, 0x7b},
{0xb3, 0x40}, //Dark1 117b Imp Lv5 Low Gain
{0xb4, 0x7c},
{0xb5, 0x5c}, //Dark1 117c Imp Lv6 Hi Th
{0xb6, 0x7d},
{0xb7, 0x30}, //Dark1 117d Imp Lv6 Middle Th
{0xb8, 0x7e},
{0xb9, 0x40}, //Dark1 117e Imp Lv6 Hi Gain
{0xba, 0x7f},
{0xbb, 0x40}, //Dark1 117f Imp Lv6 Middle Gain
{0xbc, 0x80},
{0xbd, 0x40}, //Dark1 1180 Imp Lv6 Low Gain
{0xbe, 0x81},
{0xbf, 0x62}, //Dark1 1181
{0xc0, 0x82},
{0xc1, 0x26}, //Dark1 1182
{0xc2, 0x83},
{0xc3, 0x40}, //Dark1 1183 Imp Lv7 Hi Gain
{0xc4, 0x84},
{0xc5, 0x40}, //Dark1 1184 Imp Lv7 Middle Gain
{0xc6, 0x85},
{0xc7, 0x40}, //Dark1 1185 Imp Lv7 Low Gain
{0xc8, 0x86},
{0xc9, 0x62}, //Dark1 1186
{0xca, 0x87},
{0xcb, 0x26}, //Dark1 1187
{0xcc, 0x88},
{0xcd, 0x30}, //Dark1 1188
{0xce, 0x89},
{0xcf, 0x30}, //Dark1 1189
{0xd0, 0x8a},
{0xd1, 0x30}, //Dark1 118a
{0xd2, 0x90},
{0xd3, 0x00}, //Dark1 1190
{0xd4, 0x91},
{0xd5, 0x4e}, //Dark1 1191
{0xd6, 0x92},
{0xd7, 0x00}, //Dark1 1192
{0xd8, 0x93},
{0xd9, 0x16}, //Dark1 1193
{0xda, 0x94},
{0xdb, 0x01}, //Dark1 1194
{0xdc, 0x95},
{0xdd, 0x80}, //Dark1 1195
{0xde, 0x96},
{0xdf, 0x55}, //Dark1 1196
{0xe0, 0x97},
{0xe1, 0x8d}, //Dark1 1197
{0xe2, 0xb0},
{0xe3, 0x60}, //Dark1 11b0
{0xe4, 0xb1},
{0xe5, 0xb0}, //Dark1 11b1
{0xe6, 0xb2},
{0xe7, 0x88}, //Dark1 11b2
{0xe8, 0xb3},
{0xe9, 0x10}, //Dark1 11b3
{0xea, 0xb4},
{0xeb, 0x04}, //Dark1 11b4
{0xec, 0x03},
{0xed, 0x12},
{0xee, 0x10},
{0xef, 0x03}, //Dark1 1210
{0xf0, 0x11},
{0xf1, 0x29}, //Dark1 1211
{0xf2, 0x12},
{0xf3, 0x04}, //Dark1 1212
{0xf4, 0x40},
{0xf5, 0x33}, //Dark1 1240
{0xf6, 0x41},
{0xf7, 0x0a}, //Dark1 1241
{0xf8, 0x42},
{0xf9, 0x6a}, //Dark1 1242
{0xfa, 0x43},
{0xfb, 0x80}, //Dark1 1243
{0xfc, 0x44},
{0xfd, 0x02}, //Dark1 1244
{0x0e, 0x00}, //burst_end
{0x03, 0xe1},
{0x0e, 0x01}, //burst_start
{0x10, 0x45},
{0x11, 0x0a}, //Dark1 1245
{0x12, 0x46},
{0x13, 0x80}, //Dark1 1246
{0x14, 0x60},
{0x15, 0x21}, //Dark1 1260
{0x16, 0x61},
{0x17, 0x0e}, //Dark1 1261
{0x18, 0x62},
{0x19, 0x70}, //Dark1 1262
{0x1a, 0x63},
{0x1b, 0x70}, //Dark1 1263
{0x1c, 0x64},
{0x1d, 0x14}, //Dark1 1264
{0x1e, 0x65},
{0x1f, 0x01}, //Dark1 1265
{0x20, 0x68},
{0x21, 0x0a}, //Dark1 1268
{0x22, 0x69},
{0x23, 0x04}, //Dark1 1269
{0x24, 0x6a},
{0x25, 0x0a}, //Dark1 126a
{0x26, 0x6b},
{0x27, 0x0a}, //Dark1 126b
{0x28, 0x6c},
{0x29, 0x24}, //Dark1 126c
{0x2a, 0x6d},
{0x2b, 0x01}, //Dark1 126d
{0x2c, 0x70},
{0x2d, 0x01}, //Dark1 1270
{0x2e, 0x71},
{0x2f, 0x3d}, //Dark1 1271
{0x30, 0x80},
{0x31, 0x80}, //Dark1 1280
{0x32, 0x81},
{0x33, 0x88}, //Dark1 1281
{0x34, 0x82},
{0x35, 0x08}, //Dark1 1282
{0x36, 0x83},
{0x37, 0x0c}, //Dark1 1283
{0x38, 0x84},
{0x39, 0x90}, //Dark1 1284
{0x3a, 0x85},
{0x3b, 0x92}, //Dark1 1285
{0x3c, 0x86},
{0x3d, 0x20}, //Dark1 1286
{0x3e, 0x87},
{0x3f, 0x00}, //Dark1 1287
{0x40, 0x88},
{0x41, 0x70}, //Dark1 1288
{0x42, 0x89},
{0x43, 0xaa}, //Dark1 1289
{0x44, 0x8a},
{0x45, 0x50}, //Dark1 128a
{0x46, 0x8b},
{0x47, 0x10}, //Dark1 128b
{0x48, 0x8c},
{0x49, 0x04}, //Dark1 128c
{0x4a, 0x8d},
{0x4b, 0x02}, //Dark1 128d
{0x4c, 0xe6},
{0x4d, 0xff}, //Dark1 12e6
{0x4e, 0xe7},
{0x4f, 0x18}, //Dark1 12e7
{0x50, 0xe8},
{0x51, 0x20}, //Dark1 12e8
{0x52, 0xe9},
{0x53, 0x06}, //Dark1 12e9
{0x54, 0x03},
{0x55, 0x13},
{0x56, 0x10},
{0x57, 0x31}, //Dark1 1310
{0x58, 0x20},
{0x59, 0x20}, //Dark1 1320
{0x5a, 0x21},
{0x5b, 0x30}, //Dark1 1321
{0x5c, 0x22},
{0x5d, 0x36}, //Dark1 1322
{0x5e, 0x23},
{0x5f, 0x6a}, //Dark1 1323
{0x60, 0x24},
{0x61, 0xa0}, //Dark1 1324
{0x62, 0x25},
{0x63, 0xc0}, //Dark1 1325
{0x64, 0x26},
{0x65, 0xe0}, //Dark1 1326
{0x66, 0x27},
{0x67, 0x02}, //Dark1 1327
{0x68, 0x28},
{0x69, 0x03}, //Dark1 1328
{0x6a, 0x29},
{0x6b, 0x03}, //Dark1 1329
{0x6c, 0x2a},
{0x6d, 0x02}, //Dark1 132a
{0x6e, 0x2b},
{0x6f, 0x04}, //Dark1 132b
{0x70, 0x2c},
{0x71, 0x04}, //Dark1 132c
{0x72, 0x2d},
{0x73, 0x03}, //Dark1 132d
{0x74, 0x2e},
{0x75, 0x03}, //Dark1 132e
{0x76, 0x2f},
{0x77, 0x14}, //Dark1 132f
{0x78, 0x30},
{0x79, 0x03}, //Dark1 1330
{0x7a, 0x31},
{0x7b, 0x03}, //Dark1 1331
{0x7c, 0x32},
{0x7d, 0x03}, //Dark1 1332
{0x7e, 0x33},
{0x7f, 0x40}, //Dark1 1333
{0x80, 0x34},
{0x81, 0x80}, //Dark1 1334
{0x82, 0x35},
{0x83, 0x00}, //Dark1 1335
{0x84, 0x36},
{0x85, 0xf0}, //Dark1 1336
{0x86, 0xa0},
{0x87, 0x07}, //Dark1 13a0
{0x88, 0xa8},
{0x89, 0x24}, //Dark1 13a8 Cb_Filter
{0x8a, 0xa9},
{0x8b, 0x24}, //Dark1 13a9 Cr_Filter
{0x8c, 0xaa},
{0x8d, 0x20}, //Dark1 13aa
{0x8e, 0xab},
{0x8f, 0x02}, //Dark1 13ab
{0x90, 0xc0},
{0x91, 0x27}, //Dark1 13c0
{0x92, 0xc2},
{0x93, 0x08}, //Dark1 13c2
{0x94, 0xc3},
{0x95, 0x08}, //Dark1 13c3
{0x96, 0xc4},
{0x97, 0x40}, //Dark1 13c4
{0x98, 0xc5},
{0x99, 0x38}, //Dark1 13c5
{0x9a, 0xc6},
{0x9b, 0xf0}, //Dark1 13c6
{0x9c, 0xc7},
{0x9d, 0x10}, //Dark1 13c7
{0x9e, 0xc8},
{0x9f, 0x44}, //Dark1 13c8
{0xa0, 0xc9},
{0xa1, 0x87}, //Dark1 13c9
{0xa2, 0xca},
{0xa3, 0xff}, //Dark1 13ca
{0xa4, 0xcb},
{0xa5, 0x20}, //Dark1 13cb
{0xa6, 0xcc},
{0xa7, 0x61}, //Dark1 13cc
{0xa8, 0xcd},
{0xa9, 0x87}, //Dark1 13cd
{0xaa, 0xce},
{0xab, 0x8a}, //Dark1 13ce
{0xac, 0xcf},
{0xad, 0xa5}, //Dark1 13cf
{0xae, 0x03},
{0xaf, 0x14},
{0xb0, 0x11},
{0xb1, 0x04}, //Dark1 1410
{0xb2, 0x11},
{0xb3, 0x04}, //Dark1 1411 TOP L_clip
{0xb4, 0x12},
{0xb5, 0x40}, //Dark1 1412
{0xb6, 0x13},
{0xb7, 0x98}, //Dark1 1413
{0xb8, 0x14},
{0xb9, 0x3a}, //Dark1 1414
{0xba, 0x15},
{0xbb, 0x30}, //Dark1 1415
{0xbc, 0x16},
{0xbd, 0x30}, //Dark1 1416
{0xbe, 0x17},
{0xbf, 0x30}, //Dark1 1417
{0xc0, 0x18},
{0xc1, 0x38}, //Dark1 1418  Negative High Gain
{0xc2, 0x19},
{0xc3, 0x40}, //Dark1 1419  Negative Middle Gain
{0xc4, 0x1a},
{0xc5, 0x40}, //Dark1 141a  Negative Low Gain
{0xc6, 0x20},
{0xc7, 0x84}, //Dark1 1420  s_diff L_clip
{0xc8, 0x21},
{0xc9, 0x03}, //Dark1 1421
{0xca, 0x22},
{0xcb, 0x05}, //Dark1 1422
{0xcc, 0x23},
{0xcd, 0x07}, //Dark1 1423
{0xce, 0x24},
{0xcf, 0x0a}, //Dark1 1424
{0xd0, 0x25},
{0xd1, 0x46}, //Dark1 1425
{0xd2, 0x26},
{0xd3, 0x32}, //Dark1 1426
{0xd4, 0x27},
{0xd5, 0x1e}, //Dark1 1427
{0xd6, 0x28},
{0xd7, 0x10}, //Dark1 1428
{0xd8, 0x29},
{0xd9, 0x00}, //Dark1 1429
{0xda, 0x2a},
{0xdb, 0x18}, //Dark1 142a
{0xdc, 0x2b},
{0xdd, 0x18}, //Dark1 142b
{0xde, 0x2c},
{0xdf, 0x18}, //Dark1 142c
{0xe0, 0x2d},
{0xe1, 0x30}, //Dark1 142d
{0xe2, 0x2e},
{0xe3, 0x30}, //Dark1 142e
{0xe4, 0x2f},
{0xe5, 0x30}, //Dark1 142f
{0xe6, 0x30},
{0xe7, 0x84}, //Dark1 1430 Ldiff_L_cip
{0xe8, 0x31},
{0xe9, 0x02}, //Dark1 1431
{0xea, 0x32},
{0xeb, 0x04}, //Dark1 1432
{0xec, 0x33},
{0xed, 0x04}, //Dark1 1433
{0xee, 0x34},
{0xef, 0x0a}, //Dark1 1434
{0xf0, 0x35},
{0xf1, 0x46}, //Dark1 1435
{0xf2, 0x36},
{0xf3, 0x32}, //Dark1 1436
{0xf4, 0x37},
{0xf5, 0x28}, //Dark1 1437
{0xf6, 0x38},
{0xf7, 0x12}, //Dark1 1438
{0xf8, 0x39},
{0xf9, 0x00}, //Dark1 1439
{0xfa, 0x3a},
{0xfb, 0x20}, //Dark1 143a
{0xfc, 0x3b},
{0xfd, 0x20}, //Dark1 143b
{0x0e, 0x00}, //burst_end
{0x03, 0xe2},
{0x0e, 0x01}, //burst_start
{0x10, 0x3c},
{0x11, 0x20}, //Dark1 143c
{0x12, 0x3d},
{0x13, 0x10}, //Dark1 143d
{0x14, 0x3e},
{0x15, 0x18}, //Dark1 143e
{0x16, 0x3f},
{0x17, 0x14}, //Dark1 143f
{0x18, 0x40},
{0x19, 0x04}, //Dark11440  Mdiff Low Clip off
{0x1a, 0x41},
{0x1b, 0x10}, //Dark1 1441
{0x1c, 0x42},
{0x1d, 0x70}, //Dark1 1442
{0x1e, 0x43},
{0x1f, 0x20}, //Dark1 1443
{0x20, 0x44},
{0x21, 0x10}, //Dark1 1444
{0x22, 0x45},
{0x23, 0x0c}, //Dark1 1445
{0x24, 0x46},
{0x25, 0x10}, //Dark1 1446
{0x26, 0x47},
{0x27, 0x18}, //Dark1 1447
{0x28, 0x48},
{0x29, 0x0a}, //Dark1 1448
{0x2a, 0x49},
{0x2b, 0x10}, //Dark1 1449
{0x2c, 0x50},
{0x2d, 0x85}, //Dark1 1450 Hdiff Low Clip
{0x2e, 0x51},
{0x2f, 0x30}, //Dark1 1451 hclip
{0x30, 0x52},
{0x31, 0xb0}, //Dark1 1452
{0x32, 0x53},
{0x33, 0x37}, //Dark1 1453
{0x34, 0x54},
{0x35, 0x33}, //Dark1 1454
{0x36, 0x55},
{0x37, 0x33}, //Dark1 1455
{0x38, 0x56},
{0x39, 0x33}, //Dark1 1456
{0x3a, 0x57},
{0x3b, 0x10}, //Dark1 1457
{0x3c, 0x58},
{0x3d, 0x14}, //Dark1 1458
{0x3e, 0x59},
{0x3f, 0x10}, //Dark1 1459
{0x40, 0x60},
{0x41, 0x01}, //Dark1 1460
{0x42, 0x61},
{0x43, 0xa0}, //Dark1 1461
{0x44, 0x62},
{0x45, 0x98}, //Dark1 1462
{0x46, 0x63},
{0x47, 0xe4}, //Dark1 1463
{0x48, 0x64},
{0x49, 0xa4}, //Dark1 1464
{0x4a, 0x65},
{0x4b, 0x7d}, //Dark1 1465
{0x4c, 0x66},
{0x4d, 0x4b}, //Dark1 1466
{0x4e, 0x70},
{0x4f, 0x10}, //Dark1 1470
{0x50, 0x71},
{0x51, 0x10}, //Dark1 1471
{0x52, 0x72},
{0x53, 0x10}, //Dark1 1472
{0x54, 0x73},
{0x55, 0x10}, //Dark1 1473
{0x56, 0x74},
{0x57, 0x10}, //Dark1 1474
{0x58, 0x75},
{0x59, 0x10}, //Dark1 1475
{0x5a, 0x76},
{0x5b, 0x38}, //Dark1 1476    green sharp pos High
{0x5c, 0x77},
{0x5d, 0x38}, //Dark1 1477    green sharp pos Middle
{0x5e, 0x78},
{0x5f, 0x38}, //Dark1 1478    green sharp pos Low
{0x60, 0x79},
{0x61, 0x70}, //Dark1 1479    green sharp nega High
{0x62, 0x7a},
{0x63, 0x70}, //Dark1 147a    green sharp nega Middle
{0x64, 0x7b},
{0x65, 0x70}, //Dark1 147b    green sharp nega Low

{0x66, 0x03},
{0x67, 0x10}, //10 page
{0x68, 0x60},
{0x69, 0x03}, //1060
{0x6a, 0x70},
{0x6b, 0x0c}, //1070
{0x6c, 0x71},
{0x6d, 0x05}, //1071
{0x6e, 0x72},
{0x6f, 0x5f}, //1072
{0x70, 0x73},
{0x71, 0x33}, //1073
{0x72, 0x74},
{0x73, 0x1b}, //1074
{0x74, 0x75},
{0x75, 0x03}, //1075
{0x76, 0x76},
{0x77, 0x20}, //1076
{0x78, 0x77},
{0x79, 0x33}, //1077
{0x7a, 0x78},
{0x7b, 0x33}, //1078
{0x7c, 0x79},
{0x7d, 0x46}, //1079
{0x7e, 0x7a},
{0x7f, 0x66}, //107a
{0x80, 0x7b},
{0x81, 0x43}, //107b
{0x82, 0x7c},
{0x83, 0x33}, //107c
{0x84, 0x7d},
{0x85, 0x0e}, //107d
{0x86, 0x7e},
{0x87, 0x1e}, //107e
{0x88, 0x7f},
{0x89, 0x3c}, //107f

{0x8a, 0x03}, //16 page
{0x8b, 0x16},
{0x8c, 0x8a}, //168a
{0x8d, 0x68},
{0x8e, 0x8b}, //168b
{0x8f, 0x7c},
{0x90, 0x8c}, //168c
{0x91, 0x7f},
{0x92, 0x8d}, //168d
{0x93, 0x7f},
{0x94, 0x8e}, //168e
{0x95, 0x7f},
{0x96, 0x8f}, //168f
{0x97, 0x7f},
{0x98, 0x90}, //1690
{0x99, 0x7f},
{0x9a, 0x91}, //1691
{0x9b, 0x7f},
{0x9c, 0x92}, //1692
{0x9d, 0x7f},
{0x0e, 0x00}, //burst_end
//////////////////
// e3 Page (DMA Dark2)
//////////////////
{0x03, 0xe3},
{0x0e, 0x01}, //burst_start
{0x10, 0x03}, //Dark2 Page11
{0x11, 0x11},
{0x12, 0x10},
{0x13, 0x1f}, //Dark2 1110
{0x14, 0x11},
{0x15, 0x2a}, //Dark2 1111
{0x16, 0x12},
{0x17, 0x1c}, //Dark2 1112
{0x18, 0x13},
{0x19, 0x1c}, //Dark2 1113
{0x1a, 0x14},
{0x1b, 0x3a}, //Dark2 1114
{0x1c, 0x30},
{0x1d, 0x20}, //Dark2 1130
{0x1e, 0x31},
{0x1f, 0x20}, //Dark2 1131
{0x20, 0x32},
{0x21, 0x40}, //Dark2 1132 :Lum level1
{0x22, 0x33},
{0x23, 0x28}, //Dark2 1133 :Lum level2
{0x24, 0x34},
{0x25, 0x1a}, //Dark2 1134 :Lum level3
{0x26, 0x35},
{0x27, 0x14}, //Dark2 1135 :Lum level4
{0x28, 0x36},
{0x29, 0x0c}, //Dark2 1136 :Lum level5
{0x2a, 0x37},
{0x2b, 0x0a}, //Dark2 1137 :Lum level6
{0x2c, 0x38},
{0x2d, 0x00}, //Dark2 1138 :Lum level7
{0x2e, 0x39},
{0x2f, 0x8a}, //Dark2 1139 gain 1
{0x30, 0x3a},
{0x31, 0x8a}, //Dark2 113a
{0x32, 0x3b},
{0x33, 0x8a}, //Dark2 113b
{0x34, 0x3c},
{0x35, 0x8a}, //Dark2 113c
{0x36, 0x3d},
{0x37, 0x8a}, //Dark2 113d
{0x38, 0x3e},
{0x39, 0x8a}, //Dark2 113e
{0x3a, 0x3f},
{0x3b, 0x8a}, //Dark2 113f
{0x3c, 0x40},
{0x3d, 0x8a}, //Dark2 1140 gain 8
{0x3e, 0x41},
{0x3f, 0x40}, //Dark2 1141 offset 1
{0x40, 0x42},
{0x41, 0x10}, //Dark2 1142 offset 2
{0x42, 0x43},
{0x43, 0x10}, //Dark2 1143 offset 3
{0x44, 0x44},
{0x45, 0x10}, //Dark2 1144 offset 4
{0x46, 0x45},
{0x47, 0x10}, //Dark2 1145 offset 5
{0x48, 0x46},
{0x49, 0x10}, //Dark2 1146 offset 6
{0x4a, 0x47},
{0x4b, 0x10}, //Dark2 1147 offset 7
{0x4c, 0x48},
{0x4d, 0x10}, //Dark2 1148 offset 8
{0x4e, 0x49},
{0x4f, 0x40}, //Dark2 1149 high_clip_start
{0x50, 0x4a},
{0x51, 0x40}, //Dark2 114a
{0x52, 0x4b},
{0x53, 0x40}, //Dark2 114b
{0x54, 0x4c},
{0x55, 0x40}, //Dark2 114c
{0x56, 0x4d},
{0x57, 0x40}, //Dark2 114d
{0x58, 0x4e},
{0x59, 0x40}, //Dark2 114e Lv 6 h_clip
{0x5a, 0x4f},
{0x5b, 0x40}, //Dark2 114f Lv 7 h_clip
{0x5c, 0x50},
{0x5d, 0x40}, //Dark2 1150 clip 8
{0x5e, 0x51},
{0x5f, 0xf0}, //Dark2 1151 color gain start
{0x60, 0x52},
{0x61, 0xf0}, //Dark2 1152
{0x62, 0x53},
{0x63, 0xf0}, //Dark2 1153
{0x64, 0x54},
{0x65, 0xf0}, //Dark2 1154
{0x66, 0x55},
{0x67, 0xf0}, //Dark2 1155
{0x68, 0x56},
{0x69, 0xf0}, //Dark2 1156
{0x6a, 0x57},
{0x6b, 0xf0}, //Dark2 1157
{0x6c, 0x58},
{0x6d, 0xf0}, //Dark2 1158 color gain end
{0x6e, 0x59},
{0x6f, 0xf8}, //Dark2 1159 color ofs lmt start
{0x70, 0x5a},
{0x71, 0xf8}, //Dark2 115a
{0x72, 0x5b},
{0x73, 0xf8}, //Dark2 115b
{0x74, 0x5c},
{0x75, 0xf8}, //Dark2 115c
{0x76, 0x5d},
{0x77, 0xf8}, //Dark2 115d
{0x78, 0x5e},
{0x79, 0xf8}, //Dark2 115e
{0x7a, 0x5f},
{0x7b, 0xf8}, //Dark2 115f
{0x7c, 0x60},
{0x7d, 0xf8}, //Dark2 1160 color ofs lmt end
{0x7e, 0x61},
{0x7f, 0xc0}, //Dark2 1161
{0x80, 0x62},
{0x81, 0xf0}, //Dark2 1162
{0x82, 0x63},
{0x83, 0x80}, //Dark2 1163
{0x84, 0x64},
{0x85, 0x40}, //Dark2 1164
{0x86, 0x65},
{0x87, 0x02}, //Dark2 1165 : lmp_1_gain_h
{0x88, 0x66},
{0x89, 0x02}, //Dark2 1166 : lmp_1_gain_m
{0x8a, 0x67},
{0x8b, 0x02}, //Dark2 1167 : lmp_1_gain_l
{0x8c, 0x68},
{0x8d, 0x80}, //Dark2 1168
{0x8e, 0x69},
{0x8f, 0x40}, //Dark2 1169
{0x90, 0x6a},
{0x91, 0x01}, //Dark2 116a : lmp_2_gain_h
{0x92, 0x6b},
{0x93, 0x01}, //Dark2 116b : lmp_2_gain_m
{0x94, 0x6c},
{0x95, 0x01}, //Dark2 116c : lmp_2_gain_l
{0x96, 0x6d},
{0x97, 0x80}, //Dark2 116d
{0x98, 0x6e},
{0x99, 0x40}, //Dark2 116e
{0x9a, 0x6f},
{0x9b, 0x01}, //Dark2 116f : lmp_3_gain_h
{0x9c, 0x70},
{0x9d, 0x01}, //Dark2 1170 : lmp_3_gain_m
{0x9e, 0x71},
{0x9f, 0x01}, //Dark2 1171 : lmp_3_gain_l
{0xa0, 0x72},
{0xa1, 0x6e}, //Dark2 1172
{0xa2, 0x73},
{0xa3, 0x3a}, //Dark2 1173
{0xa4, 0x74},
{0xa5, 0x01}, //Dark2 1174 : lmp_4_gain_h
{0xa6, 0x75},
{0xa7, 0x01}, //Dark2 1175 : lmp_4_gain_m
{0xa8, 0x76},
{0xa9, 0x01}, //Dark2 1176 : lmp_4_gain_l
{0xaa, 0x77},
{0xab, 0x6e}, //Dark2 1177
{0xac, 0x78},
{0xad, 0x3a}, //Dark2 1178
{0xae, 0x79},
{0xaf, 0x01}, //Dark2 1179 : lmp_5_gain_h
{0xb0, 0x7a},
{0xb1, 0x01}, //Dark2 117a : lmp_5_gain_m
{0xb2, 0x7b},
{0xb3, 0x01}, //Dark2 117b : lmp_5_gain_l
{0xb4, 0x7c},
{0xb5, 0x5c}, //Dark2 117c
{0xb6, 0x7d},
{0xb7, 0x30}, //Dark2 117d
{0xb8, 0x7e},
{0xb9, 0x01}, //Dark2 117e : lmp_6_gain_h
{0xba, 0x7f},
{0xbb, 0x01}, //Dark2 117f : lmp_6_gain_m
{0xbc, 0x80},
{0xbd, 0x01}, //Dark2 1180 : lmp_6_gain_l
{0xbe, 0x81},
{0xbf, 0x62}, //Dark2 1181
{0xc0, 0x82},
{0xc1, 0x26}, //Dark2 1182
{0xc2, 0x83},
{0xc3, 0x01}, //Dark2 1183 : lmp_7_gain_h
{0xc4, 0x84},
{0xc5, 0x01}, //Dark2 1184 : lmp_7_gain_m
{0xc6, 0x85},
{0xc7, 0x01}, //Dark2 1185 : lmp_7_gain_l
{0xc8, 0x86},
{0xc9, 0x62}, //Dark2 1186
{0xca, 0x87},
{0xcb, 0x26}, //Dark2 1187
{0xcc, 0x88},
{0xcd, 0x01}, //Dark2 1188 : lmp_8_gain_h
{0xce, 0x89},
{0xcf, 0x01}, //Dark2 1189 : lmp_8_gain_m
{0xd0, 0x8a},
{0xd1, 0x01}, //Dark2 118a : lmp_8_gain_l
{0xd2, 0x90},
{0xd3, 0x00}, //Dark2 1190
{0xd4, 0x91},
{0xd5, 0x4e}, //Dark2 1191
{0xd6, 0x92},
{0xd7, 0x00}, //Dark2 1192
{0xd8, 0x93},
{0xd9, 0x16}, //Dark2 1193
{0xda, 0x94},
{0xdb, 0x01}, //Dark2 1194
{0xdc, 0x95},
{0xdd, 0x80}, //Dark2 1195
{0xde, 0x96},
{0xdf, 0x55}, //Dark2 1196
{0xe0, 0x97},
{0xe1, 0x8d}, //Dark2 1197
{0xe2, 0xb0},
{0xe3, 0x30}, //Dark2 11b0
{0xe4, 0xb1},
{0xe5, 0x90}, //Dark2 11b1
{0xe6, 0xb2},
{0xe7, 0x08}, //Dark2 11b2
{0xe8, 0xb3},
{0xe9, 0x00}, //Dark2 11b3
{0xea, 0xb4},
{0xeb, 0x04}, //Dark2 11b4
{0xec, 0x03},
{0xed, 0x12},
{0xee, 0x10},
{0xef, 0x03}, //Dark2 1210
{0xf0, 0x11},
{0xf1, 0x29}, //Dark2 1211
{0xf2, 0x12},
{0xf3, 0x03}, //Dark2 1212
{0xf4, 0x40},
{0xf5, 0x02}, //Dark2 1240
{0xf6, 0x41},
{0xf7, 0x0a}, //Dark2 1241
{0xf8, 0x42},
{0xf9, 0x6a}, //Dark2 1242
{0xfa, 0x43},
{0xfb, 0x80}, //Dark2 1243
{0xfc, 0x44},
{0xfd, 0x02}, //Dark2 1244
{0x0e, 0x00}, //burst_end
{0x03, 0xe4},
{0x0e, 0x01}, //burst_start
{0x10, 0x45},
{0x11, 0x0a}, //Dark2 1245
{0x12, 0x46},
{0x13, 0x80}, //Dark2 1246
{0x14, 0x60},
{0x15, 0x02}, //Dark2 1260
{0x16, 0x61},
{0x17, 0x04}, //Dark2 1261
{0x18, 0x62},
{0x19, 0x4b}, //Dark2 1262
{0x1a, 0x63},
{0x1b, 0x41}, //Dark2 1263
{0x1c, 0x64},
{0x1d, 0x14}, //Dark2 1264
{0x1e, 0x65},
{0x1f, 0x00}, //Dark2 1265
{0x20, 0x68},
{0x21, 0x0a}, //Dark2 1268
{0x22, 0x69},
{0x23, 0x04}, //Dark2 1269
{0x24, 0x6a},
{0x25, 0x0a}, //Dark2 126a
{0x26, 0x6b},
{0x27, 0x0a}, //Dark2 126b
{0x28, 0x6c},
{0x29, 0x24}, //Dark2 126c
{0x2a, 0x6d},
{0x2b, 0x01}, //Dark2 126d
{0x2c, 0x70},
{0x2d, 0x18}, //Dark2 1270
{0x2e, 0x71},
{0x2f, 0xbf}, //Dark2 1271
{0x30, 0x80},
{0x31, 0x64}, //Dark2 1280
{0x32, 0x81},
{0x33, 0xb1}, //Dark2 1281
{0x34, 0x82},
{0x35, 0x2c}, //Dark2 1282
{0x36, 0x83},
{0x37, 0x02}, //Dark2 1283
{0x38, 0x84},
{0x39, 0x30}, //Dark2 1284
{0x3a, 0x85},
{0x3b, 0x90}, //Dark2 1285
{0x3c, 0x86},
{0x3d, 0x10}, //Dark2 1286
{0x3e, 0x87},
{0x3f, 0x01}, //Dark2 1287
{0x40, 0x88},
{0x41, 0x3a}, //Dark2 1288
{0x42, 0x89},
{0x43, 0x90}, //Dark2 1289
{0x44, 0x8a},
{0x45, 0x0e}, //Dark2 128a
{0x46, 0x8b},
{0x47, 0x0c}, //Dark2 128b
{0x48, 0x8c},
{0x49, 0x05}, //Dark2 128c
{0x4a, 0x8d},
{0x4b, 0x03}, //Dark2 128d
{0x4c, 0xe6},
{0x4d, 0xff}, //Dark2 12e6
{0x4e, 0xe7},
{0x4f, 0x18}, //Dark2 12e7
{0x50, 0xe8},
{0x51, 0x0a}, //Dark2 12e8
{0x52, 0xe9},
{0x53, 0x06}, //Dark2 12e9
{0x54, 0x03},
{0x55, 0x13},
{0x56, 0x10},
{0x57, 0x3f}, //Dark2 1310
{0x58, 0x20},
{0x59, 0x20}, //Dark2 1320
{0x5a, 0x21},
{0x5b, 0x30}, //Dark2 1321
{0x5c, 0x22},
{0x5d, 0x36}, //Dark2 1322
{0x5e, 0x23},
{0x5f, 0x6a}, //Dark2 1323
{0x60, 0x24},
{0x61, 0xa0}, //Dark2 1324
{0x62, 0x25},
{0x63, 0xc0}, //Dark2 1325
{0x64, 0x26},
{0x65, 0xe0}, //Dark2 1326
{0x66, 0x27},
{0x67, 0x00}, //Dark2 1327 lum 0
{0x68, 0x28},
{0x69, 0x00}, //Dark2 1328
{0x6a, 0x29},
{0x6b, 0x00}, //Dark2 1329
{0x6c, 0x2a},
{0x6d, 0x00}, //Dark2 132a
{0x6e, 0x2b},
{0x6f, 0x00}, //Dark2 132b
{0x70, 0x2c},
{0x71, 0x00}, //Dark2 132c
{0x72, 0x2d},
{0x73, 0x00}, //Dark2 132d
{0x74, 0x2e},
{0x75, 0x00}, //Dark2 132e lum7
{0x76, 0x2f},
{0x77, 0x04}, //Dark2 132f weight skin
{0x78, 0x30},
{0x79, 0x04}, //Dark2 1330 weight blue
{0x7a, 0x31},
{0x7b, 0x04}, //Dark2 1331 weight green
{0x7c, 0x32},
{0x7d, 0x04}, //Dark2 1332 weight strong color
{0x7e, 0x33},
{0x7f, 0x10}, //Dark2 1333
{0x80, 0x34},
{0x81, 0x10}, //Dark2 1334
{0x82, 0x35},
{0x83, 0x00}, //Dark2 1335
{0x84, 0x36},
{0x85, 0x80}, //Dark2 1336
{0x86, 0xa0},
{0x87, 0x07}, //Dark2 13a0
{0x88, 0xa8},
{0x89, 0x30}, //Dark2 13a8 Dark2 Cb-filter
{0x8a, 0xa9},
{0x8b, 0x30}, //Dark2 13a9 Dark2 Cr-filter
{0x8c, 0xaa},
{0x8d, 0x30}, //Dark2 13aa
{0x8e, 0xab},
{0x8f, 0x02}, //Dark2 13ab
{0x90, 0xc0},
{0x91, 0x27}, //Dark2 13c0
{0x92, 0xc2},
{0x93, 0x08}, //Dark2 13c2
{0x94, 0xc3},
{0x95, 0x08}, //Dark2 13c3
{0x96, 0xc4},
{0x97, 0x46}, //Dark2 13c4
{0x98, 0xc5},
{0x99, 0x78}, //Dark2 13c5
{0x9a, 0xc6},
{0x9b, 0xf0}, //Dark2 13c6
{0x9c, 0xc7},
{0x9d, 0x10}, //Dark2 13c7
{0x9e, 0xc8},
{0x9f, 0x44}, //Dark2 13c8
{0xa0, 0xc9},
{0xa1, 0x87}, //Dark2 13c9
{0xa2, 0xca},
{0xa3, 0xff}, //Dark2 13ca
{0xa4, 0xcb},
{0xa5, 0x20}, //Dark2 13cb
{0xa6, 0xcc},
{0xa7, 0x61}, //Dark2 13cc skin range_cb_l
{0xa8, 0xcd},
{0xa9, 0x87}, //Dark2 13cd skin range_cb_h
{0xaa, 0xce},
{0xab, 0x8a}, //Dark2 13ce skin range_cr_l
{0xac, 0xcf},
{0xad, 0xa5}, //Dark2 13cf skin range_cr_h
{0xae, 0x03},
{0xaf, 0x14},
{0xb0, 0x11},
{0xb1, 0x03}, //Dark2 1410
{0xb2, 0x11},
{0xb3, 0x03}, //Dark2 1411
{0xb4, 0x12},
{0xb5, 0x40}, //Dark2 1412 Top H_Clip
{0xb6, 0x13},
{0xb7, 0x88}, //Dark2 1413
{0xb8, 0x14},
{0xb9, 0x34}, //Dark2 1414
{0xba, 0x15},
{0xbb, 0x00}, //Dark2 1415 sharp positive ya
{0xbc, 0x16},
{0xbd, 0x00}, //Dark2 1416 sharp positive mi
{0xbe, 0x17},
{0xbf, 0x00}, //Dark2 1417 sharp positive low
{0xc0, 0x18},
{0xc1, 0x10}, //Dark2 1418 sharp negative ya
{0xc2, 0x19},
{0xc3, 0x10}, //Dark2 1419 sharp negative mi
{0xc4, 0x1a},
{0xc5, 0x10}, //Dark2 141a sharp negative low
{0xc6, 0x20},
{0xc7, 0x83}, //Dark2 1420
{0xc8, 0x21},
{0xc9, 0x03}, //Dark2 1421
{0xca, 0x22},
{0xcb, 0x05}, //Dark2 1422
{0xcc, 0x23},
{0xcd, 0x07}, //Dark2 1423
{0xce, 0x24},
{0xcf, 0x0a}, //Dark2 1424
{0xd0, 0x25},
{0xd1, 0x46}, //Dark2 1425
{0xd2, 0x26},
{0xd3, 0x32}, //Dark2 1426
{0xd4, 0x27},
{0xd5, 0x1e}, //Dark2 1427
{0xd6, 0x28},
{0xd7, 0x19}, //Dark2 1428
{0xd8, 0x29},
{0xd9, 0x00}, //Dark2 1429
{0xda, 0x2a},
{0xdb, 0x10}, //Dark2 142a
{0xdc, 0x2b},
{0xdd, 0x10}, //Dark2 142b
{0xde, 0x2c},
{0xdf, 0x10}, //Dark2 142c
{0xe0, 0x2d},
{0xe1, 0x80}, //Dark2 142d
{0xe2, 0x2e},
{0xe3, 0x80}, //Dark2 142e
{0xe4, 0x2f},
{0xe5, 0x80}, //Dark2 142f
{0xe6, 0x30},
{0xe7, 0x83}, //Dark2 1430
{0xe8, 0x31},
{0xe9, 0x02}, //Dark2 1431
{0xea, 0x32},
{0xeb, 0x04}, //Dark2 1432
{0xec, 0x33},
{0xed, 0x04}, //Dark2 1433
{0xee, 0x34},
{0xef, 0x0a}, //Dark2 1434
{0xf0, 0x35},
{0xf1, 0x46}, //Dark2 1435
{0xf2, 0x36},
{0xf3, 0x32}, //Dark2 1436
{0xf4, 0x37},
{0xf5, 0x28}, //Dark2 1437
{0xf6, 0x38},
{0xf7, 0x12}, //Dark2 1438
{0xf8, 0x39},
{0xf9, 0x00}, //Dark2 1439
{0xfa, 0x3a},
{0xfb, 0x18}, //Dark2 143a dr gain
{0xfc, 0x3b},
{0xfd, 0x20}, //Dark2 143b
{0x0e, 0x00}, //burst_end

{0x03, 0xe5},
{0x0e, 0x01}, //burst_start
{0x10, 0x3c},
{0x11, 0x18}, //Dark2 143c
{0x12, 0x3d},
{0x13, 0x20}, //Dark2 143d nor gain
{0x14, 0x3e},
{0x15, 0x22}, //Dark2 143e
{0x16, 0x3f},
{0x17, 0x10}, //Dark2 143f
{0x18, 0x40},
{0x19, 0x03}, //Dark2 1440
{0x1a, 0x41},
{0x1b, 0x12}, //Dark2 1441
{0x1c, 0x42},
{0x1d, 0xb0}, //Dark2 1442
{0x1e, 0x43},
{0x1f, 0x20}, //Dark2 1443
{0x20, 0x44},
{0x21, 0x0a}, //Dark2 1444
{0x22, 0x45},
{0x23, 0x0a}, //Dark2 1445
{0x24, 0x46},
{0x25, 0x0a}, //Dark2 1446
{0x26, 0x47},
{0x27, 0x08}, //Dark2 1447
{0x28, 0x48},
{0x29, 0x08}, //Dark2 1448
{0x2a, 0x49},
{0x2b, 0x08}, //Dark2 1449
{0x2c, 0x50},
{0x2d, 0x03}, //Dark2 1450
{0x2e, 0x51},
{0x2f, 0x32}, //Dark2 1451
{0x30, 0x52},
{0x31, 0x40}, //Dark2 1452
{0x32, 0x53},
{0x33, 0x19}, //Dark2 1453
{0x34, 0x54},
{0x35, 0x60}, //Dark2 1454
{0x36, 0x55},
{0x37, 0x60}, //Dark2 1455
{0x38, 0x56},
{0x39, 0x60}, //Dark2 1456
{0x3a, 0x57},
{0x3b, 0x20}, //Dark2 1457
{0x3c, 0x58},
{0x3d, 0x20}, //Dark2 1458
{0x3e, 0x59},
{0x3f, 0x20}, //Dark2 1459
{0x40, 0x60},
{0x41, 0x03}, //Dark2 1460 skin opt en
{0x42, 0x61},
{0x43, 0xa0}, //Dark2 1461
{0x44, 0x62},
{0x45, 0x98}, //Dark2 1462
{0x46, 0x63},
{0x47, 0xe4}, //Dark2 1463 skin_std_th_h
{0x48, 0x64},
{0x49, 0xa4}, //Dark2 1464 skin_std_th_l
{0x4a, 0x65},
{0x4b, 0x7d}, //Dark2 1465 sharp_std_th_h
{0x4c, 0x66},
{0x4d, 0x4b}, //Dark2 1466 sharp_std_th_l
{0x4e, 0x70},
{0x4f, 0x10}, //Dark2 1470
{0x50, 0x71},
{0x51, 0x10}, //Dark2 1471
{0x52, 0x72},
{0x53, 0x10}, //Dark2 1472
{0x54, 0x73},
{0x55, 0x10}, //Dark2 1473
{0x56, 0x74},
{0x57, 0x10}, //Dark2 1474
{0x58, 0x75},
{0x59, 0x10}, //Dark2 1475
{0x5a, 0x76},
{0x5b, 0x28}, //Dark2 1476
{0x5c, 0x77},
{0x5d, 0x28}, //Dark2 1477
{0x5e, 0x78},
{0x5f, 0x28}, //Dark2 1478
{0x60, 0x79},
{0x61, 0x28}, //Dark2 1479
{0x62, 0x7a},
{0x63, 0x28}, //Dark2 147a
{0x64, 0x7b},
{0x65, 0x28}, //Dark2 147b
{0x66, 0x03},
{0x67, 0x10}, //10 page
{0x68, 0x60},
{0x69, 0x03}, //1060
{0x6a, 0x70},
{0x6b, 0x0c}, //1070
{0x6c, 0x71},
{0x6d, 0x08}, //1071
{0x6e, 0x72},
{0x6f, 0xed}, //1072
{0x70, 0x73},
{0x71, 0x00}, //1073
{0x72, 0x74},
{0x73, 0x36}, //1074
{0x74, 0x75},
{0x75, 0x08}, //1075
{0x76, 0x76},
{0x77, 0x13}, //1076
{0x78, 0x77},
{0x79, 0x20}, //1077
{0x7a, 0x78},
{0x7b, 0x00}, //1078
{0x7c, 0x79},
{0x7d, 0x40}, //1079
{0x7e, 0x7a},
{0x7f, 0x00}, //107a
{0x80, 0x7b},
{0x81, 0x39}, //107b
{0x82, 0x7c},
{0x83, 0x99}, //107c
{0x84, 0x7d},
{0x85, 0x0e}, //107d
{0x86, 0x7e},
{0x87, 0x1e}, //107e
{0x88, 0x7f},
{0x89, 0x3c}, //107f

{0x8a, 0x03}, //16 page
{0x8b, 0x16},
{0x8c, 0x8a}, //168a
{0x8d, 0x60},
{0x8e, 0x8b}, //168b
{0x8f, 0x68},
{0x90, 0x8c}, //168c
{0x91, 0x6a},
{0x92, 0x8d}, //168d
{0x93, 0x74},
{0x94, 0x8e}, //168e
{0x95, 0x7a},
{0x96, 0x8f}, //168f
{0x97, 0x7f},
{0x98, 0x90}, //1690
{0x99, 0x7f},
{0x9a, 0x91}, //1691
{0x9b, 0x7f},
{0x9c, 0x92}, //1692
{0x9d, 0x7f},
{0x0e, 0x00}, //burst_end
// DMA End

{0x03, 0x00},
{0x01, 0xf1}, //Sleep mode on

{0x03, 0xc0},
{0x16, 0x80}, //MCU main roof holding off

{0x03, 0xC0},
{0x33, 0x01}, //DMA hand shake mode set
{0x32, 0x01}, //DMA off
{0x03, 0x30},
{0x11, 0x04}, //MCU holding off

///////////////////////////////////////////
// 1F Page SSD
///////////////////////////////////////////
{0x03, 0x1f}, //1F page
{0x11, 0x00}, //bit[5:4]: debug mode
{0x12, 0x60},
{0x13, 0x14},
{0x14, 0x10},
{0x15, 0x00},
{0x20, 0x18}, //ssd_x_start_pos
{0x21, 0x14}, //ssd_y_start_pos
{0x22, 0x8C}, //ssd_blk_width
{0x23, 0x9C}, //ssd_blk_height
{0x28, 0x18},
{0x29, 0x02},
{0x3B, 0x18},
{0x3C, 0x8C},
{0x10, 0x19}, //SSD enable

{0x03, 0xc4}, //AE en
{0x10, 0xef},

{0x03, 0xc3}, //AE Static en
{0x10, 0x84},

///////////////////////////////////////////
// 30 Page DMA address set
///////////////////////////////////////////
{0x03, 0x30}, //DMA
{0x7c, 0x2c}, //Extra str
{0x7d, 0xce},
{0x7e, 0x2d}, //Extra end
{0x7f, 0xbb},
{0x80, 0x24}, //Outdoor str
{0x81, 0x70},
{0x82, 0x27}, //Outdoor end
{0x83, 0x39},
{0x84, 0x21}, //Indoor str
{0x85, 0xa6},
{0x86, 0x24}, //Indoor end
{0x87, 0x6f},
{0x88, 0x27}, //Dark1 str
{0x89, 0x3a},
{0x8a, 0x2a}, //Dark1 end
{0x8b, 0x03},
{0x8c, 0x2a}, //Dark2 str
{0x8d, 0x04},
{0x8e, 0x2c}, //Dark2 end
{0x8f, 0xcd},

///////////////////////////////////////////
// CD Page (Color ratio)
///////////////////////////////////////////
{0x03, 0xCD},
{0x10, 0x38}, //ColorRatio disable

{0x03, 0xc9}, //AWB Start Point
{0x2a, 0x00},
{0x2b, 0xb2},
{0x2c, 0x00},
{0x2d, 0x82},
{0x2e, 0x00},
{0x2f, 0xb2},
{0x30, 0x00},
{0x31, 0x82},

{0x03, 0xc5}, //AWB en
{0x10, 0x81},

{0x03, 0xcf}, //Adative en
{0x10, 0xaf}, //Yoffset, Contrast Off
///////////////////////////////////////////
// Preview Setting
///////////////////////////////////////////
{0x03, 0x30},
{0x36, 0x29}, //Capture Function - Capture
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms
{0x03, 0x00},
{0x10, 0x41}, //Binning + Pre1
{0x20, 0x00},
{0x21, 0x01}, //preview row start set.
{0x42, 0x00}, //720p Start pixel
{0x43, 0x01},
{0x03, 0x15}, //Shading
{0x10, 0x81},
{0x20, 0x08}, //Shading Width 2048
{0x21, 0x00},
{0x22, 0x03}, //Shading Height 768
{0x23, 0x00},
{0x03, 0x19},
{0x10, 0x00},
{0x11, 0x00},
{0x12, 0x06},
{0x13, 0x01},
{0x20, 0x02}, //zoom width 640
{0x21, 0x80},
{0x22, 0x01}, //zoom height 480
{0x23, 0xe0},
{0x24, 0x00}, //stx
{0x25, 0x03},
{0x26, 0x00}, //sty
{0x27, 0x01},
{0x28, 0x02}, //edx
{0x29, 0x83},
{0x2a, 0x01}, //edy
{0x2b, 0xe1},
{0x2c, 0x0c},
{0x2d, 0xcc},
{0x2e, 0x0c},
{0x2f, 0xcc},
{0x30, 0x42},
{0x10, 0x07}, //Scaler On

{0x03, 0x30},
{0x36, 0x28}, //Capture Function - Preview
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0x03, 0xc4}, //AE en
{0x10, 0xee},
{0x03, 0xC0},
{0x33, 0x00},
{0x32, 0x01}, //DMA on
{0x03, 0x00},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_fmt_jpg[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_fmt_yuv422[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA PREVIEW(640*480 / FULL)
//==========================================================
GLOBAL const U8 reg_main_preview[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0},
{0x33, 0x01},
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0x00},
{0xFE, 0x05}, //Delay 5ms
{0x03, 0x30},
{0x36, 0x29}, //Capture Function - Capture
{0x03, 0x00},
{0xFE, 0x05}, //Delay 5ms

{0x03, 0x19}, //Scaler On
{0x10, 0x07},

{0x03, 0x00},
{0x10, 0x41}, //Binning + Pre1
{0x11, 0x90}, //Fix Frame Off
{0x13, 0x80},
{0x14, 0x30},
{0x17, 0x20}, //CLK 1/1
{0x03, 0x02},
{0x21, 0x02},
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms

{0x20, 0x00},
{0x21, 0x00}, //preview row start set
{0x22, 0x00},
{0x23, 0x00}, //preview col start set

{0x52, 0x00}, //Vblank 33
{0x53, 0x21},

{0x03, 0x15},  //Shading
{0x10, 0x81},
{0x20, 0x08},  //Shading Width 2048
{0x21, 0x00},
{0x22, 0x03},  //Shading Height 768
{0x23, 0x00},

{0x03, 0x20},
{0x24, 0x03}, //EXP Max 1.00 fps
{0x25, 0x37},
{0x26, 0xF9},
{0x27, 0x80},

{0x03, 0xd5},
{0x41, 0x89},

{0x03, 0x30},
{0x36, 0x28}, //Capture Function - Preview
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms
{0x03, 0xc4},
{0x10, 0xef}, //AE On
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms
{0x03, 0xc5},
{0x10, 0xb0}, //AWB en

{0x03, 0x14},
{0x10, 0x00},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off

{0x03, 0xc0},
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// SNAPSHOT
//==========================================================

GLOBAL const U8 reg_main_snapshot[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, //DMA Off
{0x33, 0x01},
{0x32, 0x01},
{0x03, 0xc4}, //AE Off
{0x10, 0x6E},
{0x03, 0xc5}, //AWB off
{0x10, 0x00},

{0x03, 0xD5},
{0x11, 0x99},

//AG Offset control
{0x03, 0xd6},
{0x17, 0x00},

{0x03, 0x19}, //Scaler Off
{0x10, 0x00},

{0x03, 0x00},
{0x10, 0x00}, //Full
{0x14, 0x30},
{0x17, 0x21}, //CLK 1/2
{0x03, 0x02},
{0x21, 0x01},
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms

{0x20, 0x00}, //Start Width
{0x21, 0x04},
{0x22, 0x00}, //Start Height
{0x23, 0x0a},

{0x03, 0x15},  //Shading
{0x10, 0x83},
{0x20, 0x08},  //Shading Width 2048
{0x21, 0x00},
{0x22, 0x06},  //Shading Height 1536
{0x23, 0x00},

{0x03, 0x20},
{0x28, 0x00}, //EXPMin
{0x29, 0x09},
{0x2a, 0xc4},

{0x03, 0x30},
{0x36, 0x29}, //Capture
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms

{0x03, 0x14},
{0x10, 0x27},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// MIDLIGHT SNAPSHOT =======> Flash Low light snapshot
//==========================================================
GLOBAL const U8 reg_main_midlight[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// LOWLIGHT SNAPSHOT
//==========================================================
GLOBAL const U8 reg_main_lowlight[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;



/*****************************************************************/
/*********************** N I G H T  M O D E **********************/
/*****************************************************************/

//==========================================================
// CAMERA NIGHTMODE ON
//==========================================================
GLOBAL const U8 reg_main_nightshot_on[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA NIGHTMODE OFF
//==========================================================
GLOBAL const U8 reg_main_nightshot_off[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// NIGHT-MODE SNAPSHOT
//==========================================================
GLOBAL const U8 reg_main_nightshot[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0},
{0x33, 0x01},
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xD5},
{0x11, 0x98},

//AG Offset control
{0x03, 0xd6},
{0x17, 0x01},

{0x03, 0x19}, //Scaler Off
{0x10, 0x00},

{0x03, 0x00},
{0x10, 0x00}, //Full
{0x14, 0x30},
{0x17, 0x21}, //CLK 1/2
{0x03, 0x02},
{0x21, 0x01},
{0x03, 0x00},
{0xFE, 0x0A}, //Delay 10ms

{0x20, 0x00}, //Start Width
{0x21, 0x04},
{0x22, 0x00}, //Start Height
{0x23, 0x0a},

{0x03, 0x15},  //Shading
{0x10, 0x83},
{0x20, 0x08},  //Shading Width 2048
{0x21, 0x00},
{0x22, 0x06},  //Shading Height 1536
{0x23, 0x00},

{0x03, 0x20},
{0x28, 0x00}, //EXPMin
{0x29, 0x09},
{0x2a, 0xc4},

{0x03, 0x30},
{0x36, 0x29}, //Capture
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms

{0x03, 0x14},
{0x10, 0x27},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_AUTO (1/10)
//==========================================================
GLOBAL const U8 reg_main_wb_auto[][2]
#if defined(_CAMACQ_API_C_)
={
//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x97}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xeb},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa4}, //BgainMax

{0x03, 0xc5},
{0x10, 0xb1},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_DAYLIGHT (2/10)
//==========================================================
GLOBAL const U8 reg_main_wb_daylight[][2]
#if defined(_CAMACQ_API_C_)
={
//WB Daylight
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0xf0},
{0x28, 0x00},  //indoor agl min
{0x29, 0xc8},

{0x03, 0xc6}, //Page c6
{0x18, 0x44}, //indoor R gain Min
{0x19, 0x90}, //indoor R gain Max
{0x1a, 0x40}, //indoor B gain Min
{0x1b, 0xa4}, //indoor B gain Max

{0x03, 0xc5},
{0x10, 0xb1},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_CLOUDY  (3/10)
//==========================================================
GLOBAL const U8 reg_main_wb_cloudy[][2]
#if defined(_CAMACQ_API_C_)
={
//WB Cloudy
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0xf0},

{0x03, 0xc6}, //Page c6
{0x18, 0x90}, //indoor R gain Min
{0x19, 0xb0}, //indoor R gain Max
{0x1a, 0x60}, //indoor B gain Min
{0x1b, 0x80}, //indoor B gain Max

{0x03, 0xc5},
{0x10, 0xb1},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_INCANDESCENT (4/10)
//==========================================================
GLOBAL const U8 reg_main_wb_incandescent[][2]
#if defined(_CAMACQ_API_C_)
={
//WB Incandescent
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0x82},
{0x28, 0x00},  //indoor agl min
{0x29, 0x50},

{0x03, 0xc6}, //Page c6
{0x18, 0x44}, //indoor R gain Min
{0x19, 0x90}, //indoor R gain Max
{0x1a, 0x40}, //indoor B gain Min
{0x1b, 0xa4}, //indoor B gain Max

{0x03, 0xc5},
{0x10, 0xb1},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_FLUORESCENT (5/10)
//==========================================================
GLOBAL const U8 reg_main_wb_fluorescent[][2]
#if defined(_CAMACQ_API_C_)
={
//WB Fluorescent
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0xb4},
{0x28, 0x00},  //indoor agl min
{0x29, 0x82},

{0x03, 0xc6}, //Page c6
{0x18, 0x44}, //indoor R gain Min
{0x19, 0x90}, //indoor R gain Max
{0x1a, 0x40}, //indoor B gain Min
{0x1b, 0xa4}, //indoor B gain Max

{0x03, 0xc5},
{0x10, 0xb1},
  CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_FLUORESCENT (6/10)
//==========================================================
GLOBAL const U8 reg_main_wb_twilight[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_FLUORESCENT (7/10)
//==========================================================
GLOBAL const U8 reg_main_wb_tungsten[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_FLUORESCENT (8/10)
//==========================================================
GLOBAL const U8 reg_main_wb_off[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_FLUORESCENT (9/10)
//==========================================================
GLOBAL const U8 reg_main_wb_horizon[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_WB_FLUORESCENT (10/10)
//==========================================================
GLOBAL const U8 reg_main_wb_shade[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_EFFECT_OFF (1/13)
//==========================================================
GLOBAL const U8 reg_main_effect_none[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x10},
{0x11, 0x03},
{0x12, 0xf0}, //constant off
{0x42, 0x00}, //cb_offset
{0x43, 0x00}, //cr_offset
{0x44, 0x80}, //cb_constant
{0x45, 0x80}, //cr_constant
{0x03, 0x14},
{0x80, 0x20}, //effect_ctl1_off
	CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_MONO (2/13)
//==========================================================
GLOBAL const U8 reg_main_effect_gray[][2]
#if defined(_CAMACQ_API_C_)
={
//mono

{0x03, 0x10},
{0x11, 0x03}, //solar off
{0x12, 0xf3}, //constant on
{0x42, 0x00}, //cb_offset
{0x43, 0x00}, //cr_offset
{0x44, 0x80}, //cb_constant
{0x45, 0x80}, //cr_constant
{0x03, 0x14},
{0x80, 0x20}, //effect_ctl1_off
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_NEGATIVE (3/13)
//==========================================================
GLOBAL const U8 reg_main_effect_negative[][2]
#if defined(_CAMACQ_API_C_)
={

{0x03, 0x10},
{0x11, 0x03}, //solar off
{0x12, 0xf8}, //negative on
{0x42, 0x00}, //cb_offset
{0x43, 0x00}, //cr_offset
{0x44, 0x80}, //cb_constant
{0x45, 0x80}, //cr_constant
{0x03, 0x14},
{0x80, 0x20}, //effect_ctl1_off
	CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_SOLARIZE (4/13)
//==========================================================
GLOBAL const U8 reg_main_effect_solarize[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_SEPIA (5/13)
//==========================================================
GLOBAL const U8 reg_main_effect_sepia[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x10},
{0x11, 0x03}, //solar off
{0x12, 0xf3}, //constant on
{0x42, 0x00}, //cb_offset
{0x43, 0x00}, //cr_offset
{0x44, 0x60}, //cb_constant
{0x45, 0xa3}, //cr_constant
{0x03, 0x14},
{0x80, 0x20}, //effect_ctl1_off
	CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_POSTERIZE (6/13)
//==========================================================
GLOBAL const U8 reg_main_effect_posterize[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_WHITEBOARD (7/13)
//==========================================================
GLOBAL const U8 reg_main_effect_whiteboard[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_BLACKBOARD (8/13)
//==========================================================
GLOBAL const U8 reg_main_effect_blackboard[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_AQUA (9/13)
//==========================================================
GLOBAL const U8 reg_main_effect_aqua[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_SHARPEN (10/13)
//==========================================================
GLOBAL const U8 reg_main_effect_sharpen[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_AQUA (11/13)
//==========================================================
GLOBAL const U8 reg_main_effect_vivid[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_GREEN (12/13)
//==========================================================
GLOBAL const U8 reg_main_effect_green[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EFFECT_SKETCH (13/13)
//==========================================================
GLOBAL const U8 reg_main_effect_sketch[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_AEC_MATRIX_METERING (2/2)
//==========================================================
GLOBAL const U8 reg_main_meter_matrix[][2]
#if defined(_CAMACQ_API_C_)
={
//Matrix
{0x03, 0xc3},
{0x70, 0x11},
{0x71, 0x11},
{0x72, 0x11},
{0x73, 0x11},
{0x74, 0x11},
{0x75, 0x11},
{0x76, 0x11},
{0x77, 0x11},
{0x78, 0x11},
{0x79, 0x11},
{0x7A, 0x11},
{0x7B, 0x11},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x11},
{0x84, 0x11},
{0x85, 0x11},
{0x86, 0x11},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x11},
{0x8A, 0x11},
{0x8B, 0x11},
{0x8C, 0x11},
{0x8D, 0x11},
{0x8E, 0x11},
{0x8F, 0x11},
{0x90, 0x11},
{0x91, 0x11},
{0x92, 0x11},
{0x93, 0x11},
{0x94, 0x11},
{0x95, 0x11},
{0x96, 0x11},
{0x97, 0x11},
{0x98, 0x11},
{0x99, 0x11},
{0x9A, 0x11},
{0x9B, 0x11},
{0x9C, 0x11},
{0x9D, 0x11},
{0x9E, 0x11},
{0x9F, 0x11},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_AEC_CENTERWEIGHTED_METERING (2/2)
//==========================================================
GLOBAL const U8 reg_main_meter_cw[][2]
#if defined(_CAMACQ_API_C_)
={
//CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_AEC_SPOT_METERING (1/2)
//==========================================================
GLOBAL const U8 reg_main_meter_spot[][2]
#if defined(_CAMACQ_API_C_)
={
//Spot
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x00},
{0x7D, 0x10},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x01},
{0x81, 0x00},
{0x82, 0x00},
{0x83, 0x10},
{0x84, 0xff},
{0x85, 0xff},
{0x86, 0x01},
{0x87, 0x00},
{0x88, 0x00},
{0x89, 0x10},
{0x8A, 0xff},
{0x8B, 0xff},
{0x8C, 0x01},
{0x8D, 0x00},
{0x8E, 0x00},
{0x8F, 0x10},
{0x90, 0xff},
{0x91, 0xff},
{0x92, 0x01},
{0x93, 0x00},
{0x94, 0x00},
{0x95, 0x10},
{0x96, 0x11},
{0x97, 0x11},
{0x98, 0x01},
{0x99, 0x00},
{0x9A, 0x00},
{0x9B, 0x00},
{0x9C, 0x00},
{0x9D, 0x00},
{0x9E, 0x00},
{0x9F, 0x00},
{0xA0, 0x00},
{0xA1, 0x00},
{0xA2, 0x00},
{0xA3, 0x00},
{0xA4, 0x00},
{0xA5, 0x00},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_AEC_FRAME_AVERAGE (2/2)
//==========================================================
GLOBAL const U8 reg_main_meter_frame[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FLIP_NONE (1/4)
//==========================================================
GLOBAL const U8 reg_main_flip_none[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FLIP_VERTICAL (2/4)
//==========================================================
GLOBAL const U8 reg_main_flip_water[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FLIP_HORIZ (3/4)
//==========================================================
GLOBAL const U8 reg_main_flip_mirror[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_FLIP_SYMMETRIC (4/4)
//==========================================================
GLOBAL const U8 reg_main_flip_water_mirror[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;



//==========================================================
// CAMERA_CAMCORDER
//==========================================================
GLOBAL const U8 reg_main_camcorder[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0x00},
{0x11, 0x90},

{0x03, 0xc0},
{0x33, 0x01},
{0x32, 0x01}, //DMA off

{0x03, 0xc4},
{0x10, 0x6E}, //AE Off

{0x03, 0x00},
{0x52, 0x00}, //Vblank 88
{0x53, 0x58},

{0x03, 0xc3},
{0x10, 0x80},

{0x03, 0xcf},
{0x10, 0xa7},

{0x03, 0x20}, //Page 20
{0x24, 0x00}, //EXP Max 25.00 fps
{0x25, 0x20},
{0x26, 0xf5},
{0x27, 0x80},
{0x3c, 0x00}, //EXP Fix
{0x3d, 0x22},
{0x3e, 0x55},
{0x3f, 0x10},

{0x80, 0x30},

{0x03, 0x00},
{0x11, 0x94}, //Fix Frame On
{0x13, 0xa8}, //Fix AE Set On

{0x03, 0xc4}, //AE en
{0x10, 0xaf},

{0x03, 0x00},
{0xfe, 0x19}, //delay 25ms

{0x01, 0xf0}, //sleep off

{0x03, 0xc0},
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_FRAMERATE_5FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_5[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_FRAMERATE_7FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_7[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FRAMERATE_10FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_10[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FRAMERATE_15FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_15[][2]
#if defined(_CAMACQ_API_C_)
={
	 CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FRAMERATE_20FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_20[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FRAMERATE_25FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_25[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FRAMERATE_30FPS
//==========================================================
GLOBAL const U8 reg_main_fps_fixed_30[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_FRAMERATE_AUTO_MAX15(5~15fps)
//==========================================================
GLOBAL const U8 reg_main_fps_var_15[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_BRIGHTNESS_LEVEL1 (1/9) :
//==========================================================
GLOBAL const U8 reg_main_brightness_level_0[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0xd0},
	CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL2 (2/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_1[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0xc0},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL3 (3/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_2[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0xb0},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL4 (4/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_3[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0xa0},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL5 (5/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_4[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0x00},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL6 (6/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_5[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0x14},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL7 (7/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_6[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0x28},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL8 (8/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_7[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0x3c},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_BRIGHTNESS_LEVEL9 (9/9)
//==========================================================
GLOBAL const U8 reg_main_brightness_level_8[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0xd9},
{0x17, 0x50},
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL1 (1/9) :
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_0[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL2 (2/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_1[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL3 (3/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_2[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL4 (4/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_3[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL5 (5/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_4[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL6 (6/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_5[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL7 (7/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_6[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL8 (8/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_7[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_EXPOSURE_COMPENSATION_LEVEL9 (9/9)
//==========================================================
GLOBAL const U8 reg_main_expcompensation_level_8[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_AF
//==========================================================
GLOBAL const U8 reg_main_reset_af [][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_nlux [][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_llux [][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af[][2] // start_af
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_off_af[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


GLOBAL const U8 reg_main_check_af[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_manual_af[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_macro_af[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_return_manual_af[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_return_macro_af[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_normal_mode_1[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_normal_mode_2[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_normal_mode_3[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_macro_mode_1[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_macro_mode_2[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_set_af_macro_mode_3[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ISO_AUTO
//==========================================================
GLOBAL const U8 reg_main_iso_auto[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ISO_50
//==========================================================
GLOBAL const U8 reg_main_iso_50[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ISO_100
//==========================================================
GLOBAL const U8 reg_main_iso_100[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ISO_200
//==========================================================
GLOBAL const U8 reg_main_iso_200[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ISO_400
//==========================================================
GLOBAL const U8 reg_main_iso_400[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ISO_800
//==========================================================
GLOBAL const U8 reg_main_iso_800[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ISO_1600
//==========================================================
GLOBAL const U8 reg_main_iso_1600[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ISO_3200
//==========================================================
GLOBAL const U8 reg_main_iso_3200[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_AUTO (OFF)
//==========================================================
GLOBAL const U8 reg_main_scene_auto[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Auto (FPS Auto/ISO Auto/Center/Br0/AWB Auto/Sat0/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},

//FPS Auto
{0x03, 0x20},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 
//ISO AUTO
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x97}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x84}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x74}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//Adaptive
{0x03, 0xcf},
{0x10, 0xaf},

//AE On
{0x03, 0xc4},
{0x10, 0xef}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms

//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_NIGHT
//==========================================================
GLOBAL const U8 reg_main_scene_night[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Night (FPS Night/ISO Auto/Center/Br0/AWB Auto/Sat0/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},
//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 4.00 fps 
{0x25, 0xcd}, 
{0x26, 0xfe}, 
{0x27, 0x60}, 

//ISO AUTO
{0x51, 0xff}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x84}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x74}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff},//Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


GLOBAL const U8 reg_main_scene_night_dark[][2]
#if defined(_CAMACQ_API_C_)
={
 /* CAMERA_SCENEMODE_NIGHT_Dark */

 CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_LANDSCAPE
//==========================================================
GLOBAL const U8 reg_main_scene_landscape[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Landscapte (FPS Auto/ISO Auto/Maxtrix/Br0/AWB Auto/Sat1/Sharp1)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},
//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6D},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 

//ISO AUTO
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//Metering - Matrix
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x11},
{0x84, 0x11},
{0x85, 0x11},
{0x86, 0x11},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x11},
{0x8A, 0x11},
{0x8B, 0x11},
{0x8C, 0x11},
{0x8D, 0x11},
{0x8E, 0x11},
{0x8F, 0x11},
{0x90, 0x11},
{0x91, 0x11},
{0x92, 0x11},
{0x93, 0x11},
{0x94, 0x11},
{0x95, 0x11},
{0x96, 0x11},
{0x97, 0x11},
{0x98, 0x11},
{0x99, 0x11},
{0x9A, 0x11},
{0x9B, 0x11},
{0x9C, 0x11},
{0x9D, 0x11},
{0x9E, 0x11},
{0x9F, 0x11},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax


//Saturation 1
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0xa8},	//SATB_00
{0x2c, 0xa8},	//SATB_01
{0x2d, 0xa8},	//SATB_02
{0x2e, 0xa4},	//SATB_03
{0x2f, 0xb0},	//SATB_04
{0x30, 0xb0},	//SATB_05
{0x31, 0xb8},	//SATB_06
{0x32, 0xb8},	//SATB_07
{0x33, 0xb8},	//SATB_08
{0x34, 0xb8},	//SATB_09
{0x35, 0xb8},	//SATB_10
{0x36, 0xb8},	//SATB_11

//SATR
{0x37, 0xa0},	//SATR_00
{0x38, 0xa0},	//SATR_01
{0x39, 0xa0},	//SATR_02
{0x3a, 0xa0},	//SATR_03
{0x3b, 0xa8},	//SATR_04
{0x3c, 0xa8},	//SATR_05
{0x3d, 0xa8},	//SATR_06
{0x3e, 0xa8},	//SATR_07
{0x3f, 0xa8},	//SATR_08
{0x40, 0xa8},	//SATR_09
{0x41, 0xa8},	//SATR_10
{0x42, 0xa8},	//SATR_11

//Sharpness 1
{0x03, 0xdb},		//Outdoor
{0xbb, 0x50},	//Pos_H
{0xbd, 0x50},	//Pos_M
{0xbf, 0x50},	//Pos_L
{0xc1, 0x84},	//Neg_H
{0xc3, 0x84},	//Neg_M
{0xc5, 0x70},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x50},	//Pos_H
{0xbd, 0x50},	//Pos_M
{0xbf, 0x50},	//Pos_L
{0xc1, 0x88},	//Neg_H
{0xc3, 0x90},	//Neg_M
{0xc5, 0x90},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x50},	//Pos_H
{0xbd, 0x50},	//Pos_M
{0xbf, 0x50},	//Pos_L
{0xc1, 0x68},	//Neg_H
{0xc3, 0x70},	//Neg_M
{0xc5, 0x70},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x20},	//Pos_H
{0xbd, 0x20},	//Pos_M
{0xbf, 0x20},	//Pos_L
{0xc1, 0x40},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff}, //Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
	CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_SUNSET
//==========================================================
GLOBAL const U8 reg_main_scene_sunset[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Sunset (FPS Auto/ISO Auto/Center/Br0/AWB Day/Sat0/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},
//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 
//ISO AUTO
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Daylight
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0xf0},
{0x28, 0x00},  //indoor agl min
{0x29, 0xc8},

{0x03, 0xc6}, //Page c6
{0x18, 0x75}, //indoor R gain Min
{0x19, 0x77}, //indoor R gain Max
{0x1a, 0x6e}, //indoor B gain Min
{0x1b, 0x70}, //indoor B gain Max

{0x03, 0xc9}, //AWB Start Point
{0x2a, 0x00},
{0x2b, 0x94}, //Rg
{0x2c, 0x00},
{0x2d, 0x94}, //Bg
{0x2e, 0x00},
{0x2f, 0x94}, //Rg
{0x30, 0x00},
{0x31, 0x94}, //Bg
{0x42, 0x6F}, //Rgain (16a2)
{0x43, 0x40}, //Ggain
{0x44, 0x6F}, //Bgain (16a4)

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x84}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x74}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff}, //Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
   CAMACQ_MAIN_BTM_OF_DATA

}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_PORTRAIT
//==========================================================
GLOBAL const U8 reg_main_scene_portrait[][2]
#if defined(_CAMACQ_API_C_)
={
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_SUNRISE
//==========================================================
GLOBAL const U8 reg_main_scene_sunrise[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene sunrise Dawn (FPS Auto/ISO Auto/Center/Br0/AWB CWF/Sat0/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},
 //Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 
//ISO AUTO 
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Dawn - Flure
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0xb4},
{0x28, 0x00},  //indoor agl min
{0x29, 0x82},

{0x03, 0xc6}, //Page c6
{0x18, 0x55}, //indoor R gain Min
{0x19, 0x57}, //indoor R gain Max
{0x1a, 0x98}, //indoor B gain Min
{0x1b, 0x9a}, //indoor B gain Max


//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x88}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x78}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff}, //Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
	CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_INDOOR // == PARTY
//==========================================================
GLOBAL const U8 reg_main_scene_indoor[][2]
#if defined(_CAMACQ_API_C_)
={
//Party/Indoor (FPS Auto/ISO 200/Center/Br0/AWB Auto/Sat1/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},
//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 

//ISO 200
{0x51, 0x8b}, //Max Gain(8a)
{0x52, 0x5c}, //Min Gain

{0x03, 0xc4},
{0x19, 0x5c}, //Bnd0 Gain
{0x1a, 0x5c}, //Bnd1 Gain
{0x1b, 0x5c}, //Bnd2 Gain

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 1//
{0x03, 0xd1},	//page D1(Adaptive)

//SATB
{0x2b, 0xa8},	//SATB_00
{0x2c, 0xa8},	//SATB_01
{0x2d, 0xa8},	//SATB_02
{0x2e, 0xa8},	//SATB_03
{0x2f, 0xb0},	//SATB_04
{0x30, 0xb0},	//SATB_05
{0x31, 0xb8},	//SATB_06
{0x32, 0xb8},	//SATB_07
{0x33, 0xb8},	//SATB_08
{0x34, 0xb8},	//SATB_09
{0x35, 0xb8},	//SATB_10
{0x36, 0xb8},	//SATB_11

//SATR
{0x37, 0xa0},	//SATR_00
{0x38, 0xa0},	//SATR_01
{0x39, 0xa0},	//SATR_02
{0x3a, 0xa0},	//SATR_03
{0x3b, 0xa8},	//SATR_04
{0x3c, 0xa8},	//SATR_05
{0x3d, 0xa8},	//SATR_06
{0x3e, 0xa8},	//SATR_07
{0x3f, 0xa8},	//SATR_08
{0x40, 0xa8},	//SATR_09
{0x41, 0xa8},	//SATR_10
{0x42, 0xa8},	//SATR_11

//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff},//Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
     CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_PARTY // == INDOOR
//==========================================================
GLOBAL const U8 reg_main_scene_party[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_SPORTS
//==========================================================
GLOBAL const U8 reg_main_scene_sports[][2]
#if defined(_CAMACQ_API_C_)
={
//Sports (FPS Sports/ISO Auto/Center/Br0/AWB Auto/Sat0/Sharp0)//
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x4b},
//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Sports
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 33.33 fps
{0x25, 0x18},
{0x26, 0xb8},
{0x27, 0x20},
//ISO AUTO 
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1A, 0x3c}, //Band2 Gain 33.33fps
{0x1B, 0x3c}, //Band3 Gain 33.33fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x18},
{0x24, 0xB8},
{0x25, 0x20},
{0x26, 0x00}, //Bnd3
{0x27, 0x18},
{0x28, 0xB8},
{0x29, 0x20},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x88}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x78}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11

//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff}, //Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_BEACH
//==========================================================
GLOBAL const U8 reg_main_scene_beach[][2]
#if defined(_CAMACQ_API_C_)
={
//Beach(FPS Auto/ISO 50/Center/Br1/AWB Auto/Sat1/Sharp0)//
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x10},

{0x03, 0x11},
{0xf0, 0x4b},

//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},

//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x69},
{0x80, 0x30},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80},
//ISO 50
{0x51, 0x70}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 1//
{0x03, 0xd1},	//page D1(Adaptive)
//SATB
{0x2b, 0xa8},	//SATB_00
{0x2c, 0xa8},	//SATB_01
{0x2d, 0xa8},	//SATB_02
{0x2e, 0xa8},	//SATB_03
{0x2f, 0xb0},	//SATB_04
{0x30, 0xb0},	//SATB_05
{0x31, 0xb8},	//SATB_06
{0x32, 0xb8},	//SATB_07
{0x33, 0xb8},	//SATB_08
{0x34, 0xb8},	//SATB_09
{0x35, 0xb8},	//SATB_10
{0x36, 0xb8},	//SATB_11

//SATR
{0x37, 0xa0},	//SATR_00
{0x38, 0xa0},	//SATR_01
{0x39, 0xa0},	//SATR_02
{0x3a, 0xa0},	//SATR_03
{0x3b, 0xa8},	//SATR_04
{0x3c, 0xa8},	//SATR_05
{0x3d, 0xa8},	//SATR_06
{0x3e, 0xa8},	//SATR_07
{0x3f, 0xa8},	//SATR_08
{0x40, 0xa8},	//SATR_09
{0x41, 0xa8},	//SATR_10
{0x42, 0xa8},	//SATR_11

//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset

{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms

//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff}, //Delay 255

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_SNOW
//==========================================================
GLOBAL const U8 reg_main_scene_snow[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_FALLCOLOR
//==========================================================
GLOBAL const U8 reg_main_scene_fallcolor[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Fall (FPS Auto/ISO Auto/Center/Br0/AWB Auto/Sat2/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6e}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},
//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},
//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 

//ISO AUTO 
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 2
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0xc8},	//SATB_00
{0x2c, 0xc8},	//SATB_01
{0x2d, 0xc8},	//SATB_02
{0x2e, 0xc8},	//SATB_03
{0x2f, 0xd0},	//SATB_04
{0x30, 0xd0},	//SATB_05
{0x31, 0xd8},	//SATB_06
{0x32, 0xd8},	//SATB_07
{0x33, 0xd8},	//SATB_08
{0x34, 0xd8},	//SATB_09
{0x35, 0xd8},	//SATB_10
{0x36, 0xd8},	//SATB_11

//SATR
{0x37, 0xc0},	//SATR_00
{0x38, 0xc0},	//SATR_01
{0x39, 0xc0},	//SATR_02
{0x3a, 0xc0},	//SATR_03
{0x3b, 0xc8},	//SATR_04
{0x3c, 0xc8},	//SATR_05
{0x3d, 0xc8},	//SATR_06
{0x3e, 0xc8},	//SATR_07
{0x3f, 0xc8},	//SATR_08
{0x40, 0xc8},	//SATR_09
{0x41, 0xc8},	//SATR_10
{0x42, 0xc8},	//SATR_11

//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff},//Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_FIREWORKS
//==========================================================
GLOBAL const U8 reg_main_scene_fireworks[][2]
#if defined(_CAMACQ_API_C_)
={
//Firework (FPS Fire/ISO 50/Center/Br0/AWB Auto/Sat0/Sharp0)//
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off
{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x4b},

//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},

//FPS 1.00fps
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x69},
{0x24, 0x03},			//EXP Max 1.00 fps
{0x25, 0x37},
{0x26, 0xf9},
{0x27, 0x80},
//ISO 50
{0x51, 0xb0},			//Max Gain
{0x52, 0x24},			//Min Gain
//Shutter Setting
{0x03, 0xc4},
{0x19, 0x46},			//Bnd0 Gain
{0x1a, 0x60},			//Bnd1 Gain
{0x1b, 0xb0},			//Bnd2 Gain

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x62},
{0x28, 0xe0},
{0x29, 0x80},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x88}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x78}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset

{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms

//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff},//Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_CANDLELIGHT
//==========================================================
GLOBAL const U8 reg_main_scene_candlelight[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Sunset (FPS Auto/ISO Auto/Center/Br0/AWB Day/Sat0/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00}, 

{0x03, 0x11},
{0xf0, 0x40},

//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},

//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 
//ISO AUTO
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Band2 Gain 20fps
{0x1b, 0x5c}, //Band3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//AE_CenterWeighted
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x11},
{0x7D, 0x11},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x11},
{0x81, 0x11},
{0x82, 0x11},
{0x83, 0x21},
{0x84, 0x44},
{0x85, 0x44},
{0x86, 0x12},
{0x87, 0x11},
{0x88, 0x11},
{0x89, 0x22},
{0x8A, 0x64},
{0x8B, 0x46},
{0x8C, 0x22},
{0x8D, 0x11},
{0x8E, 0x21},
{0x8F, 0x33},
{0x90, 0x64},
{0x91, 0x46},
{0x92, 0x33},
{0x93, 0x12},
{0x94, 0x21},
{0x95, 0x33},
{0x96, 0x44},
{0x97, 0x44},
{0x98, 0x33},
{0x99, 0x12},
{0x9A, 0x21},
{0x9B, 0x33},
{0x9C, 0x33},
{0x9D, 0x33},
{0x9E, 0x33},
{0x9F, 0x12},
{0xA0, 0x11},
{0xA1, 0x11},
{0xA2, 0x11},
{0xA3, 0x11},
{0xA4, 0x11},
{0xA5, 0x11},

//WB Daylight
{0x03, 0xc5}, //Page c5
{0x11, 0xa0}, //adaptive off
{0x12, 0x07}, //adaptive off

{0x26, 0x00}, //indoor agl max
{0x27, 0xf0},
{0x28, 0x00},  //indoor agl min
{0x29, 0xc8},

{0x03, 0xc6}, //Page c6
{0x18, 0x75}, //indoor R gain Min
{0x19, 0x77}, //indoor R gain Max
{0x1a, 0x6e}, //indoor B gain Min
{0x1b, 0x70}, //indoor B gain Max

{0x03, 0xc9}, //AWB Start Point
{0x2a, 0x00},
{0x2b, 0x94}, //Rg
{0x2c, 0x00},
{0x2d, 0x94}, //Bg
{0x2e, 0x00},
{0x2f, 0x94}, //Rg
{0x30, 0x00},
{0x31, 0x94}, //Bg
{0x42, 0x6F}, //Rgain (16a2)
{0x43, 0x40}, //Ggain
{0x44, 0x6F}, //Bgain (16a4)

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x88}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x78}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset
{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms
//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off
{0xfe, 0xff}, //Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_AGAINSTLIGHT (BACKLight??)
//==========================================================
GLOBAL const U8 reg_main_scene_againstlight[][2]
#if defined(_CAMACQ_API_C_)
={
//Scene Against (FPS Auto/ISO Auto/Spot/Br0/AWB Auto/Sat0/Sharp0)
{0x03, 0x00},
{0x01, 0xf1}, //Sleep on

{0x03, 0xc0}, 
{0x33, 0x01}, 
{0x32, 0x01}, //DMA off
{0x03, 0xc4},
{0x10, 0x6E}, //AE Off
{0x03, 0xc5},
{0x10, 0x00}, //AWB off

{0x03, 0xd9},
{0x17, 0x00},

{0x03, 0x11},
{0xf0, 0x40},

//Adaptive
{0x03, 0xcf},
{0x10, 0xa7},

//FPS Auto
{0x03, 0x20},
{0x80, 0x30},
{0x12, 0x6d},
{0x24, 0x00}, //EXP Max 8.33 fps 
{0x25, 0x62}, 
{0x26, 0xe0}, 
{0x27, 0x80}, 

//ISO AUTO
{0x51, 0xf0}, //pga_max_total
{0x52, 0x24}, //pga_min_total

//Shutter Setting
{0x03, 0xc4},
{0x19, 0x3c}, //Band1 Gain 33.33fps
{0x1a, 0x46}, //Bnd2 Gain 20fps
{0x1b, 0x5c}, //Bnd3 Gain 12.5fps

//Shutter Setting
{0x22, 0x00}, //Bnd2
{0x23, 0x29},
{0x24, 0x32},
{0x25, 0xE0},
{0x26, 0x00}, //Bnd3
{0x27, 0x41},
{0x28, 0xeb},
{0x29, 0x00},

//Spot
{0x03, 0xc3},
{0x70, 0x00},
{0x71, 0x00},
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
{0x75, 0x00},
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
{0x79, 0x00},
{0x7A, 0x00},
{0x7B, 0x00},
{0x7C, 0x00},
{0x7D, 0x10},
{0x7E, 0x11},
{0x7F, 0x11},
{0x80, 0x01},
{0x81, 0x00},
{0x82, 0x00},
{0x83, 0x10},
{0x84, 0xff},
{0x85, 0xff},
{0x86, 0x01},
{0x87, 0x00},
{0x88, 0x00},
{0x89, 0x10},
{0x8A, 0xff},
{0x8B, 0xff},
{0x8C, 0x01},
{0x8D, 0x00},
{0x8E, 0x00},
{0x8F, 0x10},
{0x90, 0xff},
{0x91, 0xff},
{0x92, 0x01},
{0x93, 0x00},
{0x94, 0x00},
{0x95, 0x10},
{0x96, 0x11},
{0x97, 0x11},
{0x98, 0x01},
{0x99, 0x00},
{0x9A, 0x00},
{0x9B, 0x00},
{0x9C, 0x00},
{0x9D, 0x00},
{0x9E, 0x00},
{0x9F, 0x00},
{0xA0, 0x00},
{0xA1, 0x00},
{0xA2, 0x00},
{0xA3, 0x00},
{0xA4, 0x00},
{0xA5, 0x00},

//WB Auto
{0x03, 0xc5}, //Page c5
{0x11, 0xa4}, //adaptive on
{0x12, 0x17}, //adaptive on

{0x26, 0x00}, //indoor agl max
{0x27, 0xff},
{0x28, 0x00},  //indoor agl min
{0x29, 0x55},

{0x03, 0xc6}, //Page c6
{0x18, 0x46}, //RgainMin
{0x19, 0x90}, //RgainMax
{0x1a, 0x40}, //BgainMin
{0x1b, 0xa7}, //BgainMax

//Saturation 0
{0x03, 0xd1}, //page D1(Adaptive)

//SATB
{0x2b, 0x88}, //SATB_00
{0x2c, 0x88}, //SATB_01
{0x2d, 0x88}, //SATB_02
{0x2e, 0x88}, //SATB_03
{0x2f, 0x88}, //SATB_04
{0x30, 0x88}, //SATB_05
{0x31, 0x98}, //SATB_06
{0x32, 0x98}, //SATB_07
{0x33, 0x98}, //SATB_08
{0x34, 0x98}, //SATB_09
{0x35, 0x98}, //SATB_10
{0x36, 0x98}, //SATB_11

//SATR
{0x37, 0x80}, //SATR_00
{0x38, 0x80}, //SATR_01
{0x39, 0x80}, //SATR_02
{0x3a, 0x78}, //SATR_03
{0x3b, 0x88}, //SATR_04
{0x3c, 0x80}, //SATR_05
{0x3d, 0x8c}, //SATR_06
{0x3e, 0x8c}, //SATR_07
{0x3f, 0x8c}, //SATR_08
{0x40, 0x8c}, //SATR_09
{0x41, 0x8c}, //SATR_10
{0x42, 0x8c}, //SATR_11


//Sharpness 0
{0x03, 0xdb},		//Outdoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x54},	//Neg_H
{0xc3, 0x54},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xde},		//Indoor
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x58},	//Neg_H
{0xc3, 0x60},	//Neg_M
{0xc5, 0x60},	//Neg_L
{0x03, 0xe1},		//Dark1
{0xbb, 0x30},	//Pos_H
{0xbd, 0x30},	//Pos_M
{0xbf, 0x30},	//Pos_L
{0xc1, 0x38},	//Neg_H
{0xc3, 0x40},	//Neg_M
{0xc5, 0x40},	//Neg_L
{0x03, 0xe4},		//Dark2
{0xbb, 0x00},	//Pos_H
{0xbd, 0x00},	//Pos_M
{0xbf, 0x00},	//Pos_L
{0xc1, 0x10},	//Neg_H
{0xc3, 0x10},	//Neg_M
{0xc5, 0x10},	//Neg_L

//AE On
{0x03, 0xc4},
{0x10, 0xff}, //ae on & reset

{0x03, 0x00},
{0xFE, 0x14}, //Delay 20ms

//AWB On
{0x03, 0xc5},
{0x10, 0xb1},

{0x03, 0x00},
{0x01, 0xf0}, //sleep off

{0x03, 0x00},
{0xFE, 0xff}, //Delay 255ms

{0x03, 0xc0}, 
{0x33, 0x00},
{0x32, 0x01}, //DMA On
CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_SCENE_TEXT
//==========================================================
GLOBAL const U8 reg_main_scene_text[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_CONTRAST_M2
//==========================================================
GLOBAL const U8 reg_main_adjust_contrast_m2[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_CONTRAST_M1
//==========================================================
GLOBAL const U8 reg_main_adjust_contrast_m1[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_CONTRAST_DEFAULT
//==========================================================
GLOBAL const U8 reg_main_adjust_contrast_default[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_CONTRAST_P1
//==========================================================
GLOBAL const U8 reg_main_adjust_contrast_p1[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_CONTRAST_P2
//==========================================================
GLOBAL const U8 reg_main_adjust_contrast_p2[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SHARPNESS_M2
//==========================================================
GLOBAL const U8 reg_main_adjust_sharpness_m2[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SHARPNESS_M1
//==========================================================
GLOBAL const U8 reg_main_adjust_sharpness_m1[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ADJUST_SHARPNESS_DEFAULT
//==========================================================
GLOBAL const U8 reg_main_adjust_sharpness_default[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ADJUST_SHARPNESS_P1
//==========================================================
GLOBAL const U8 reg_main_adjust_sharpness_p1[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_ADJUST_SHARPNESS_P2
//==========================================================
GLOBAL const U8 reg_main_adjust_sharpness_p2[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SATURATION_M2
//==========================================================
GLOBAL const U8 reg_main_adjust_saturation_m2[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SATURATION_M1
//==========================================================
GLOBAL const U8 reg_main_adjust_saturation_m1[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SATURATION_DEFAULT
//==========================================================
GLOBAL const U8 reg_main_adjust_saturation_default[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SATURATION_P1
//==========================================================
GLOBAL const U8 reg_main_adjust_saturation_p1[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_ADJUST_SATURATION_P2
//==========================================================
GLOBAL const U8 reg_main_adjust_saturation_p2[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_output_qqvga
//==========================================================
GLOBAL const U8 reg_main_qqvga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_qcif
//==========================================================
GLOBAL const U8 reg_main_qcif[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_qvga
//==========================================================
GLOBAL const U8 reg_main_qvga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_wqvga
//==========================================================
GLOBAL const U8 reg_main_wqvga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_cif
//==========================================================
GLOBAL const U8 reg_main_cif[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_vga
//==========================================================
GLOBAL const U8 reg_main_vga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_wvga 800 * 480
//==========================================================
GLOBAL const U8 reg_main_wvga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_svga
//==========================================================
GLOBAL const U8 reg_main_svga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_sxga
//==========================================================
GLOBAL const U8 reg_main_sxga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_qxga
//==========================================================
GLOBAL const U8 reg_main_qxga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_qxga
//==========================================================
GLOBAL const U8 reg_main_uxga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_full_yuv
//==========================================================
GLOBAL const U8 reg_main_full_yuv[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_output_cropped_yuv
//==========================================================
GLOBAL const U8 reg_main_crop_yuv[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;


//==========================================================
// CAMERA_JPEG_output_5M
//==========================================================
GLOBAL const U8 reg_main_jpeg_5m[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_5M_2
//==========================================================
GLOBAL const U8 reg_main_jpeg_5m_2[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_4M
//==========================================================
GLOBAL const U8 reg_main_jpeg_w4m[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_3M
//==========================================================
GLOBAL const U8 reg_main_jpeg_3m[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_2M
//==========================================================
GLOBAL const U8 reg_main_jpeg_2m[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_w1_5M
//==========================================================
GLOBAL const U8 reg_main_jpeg_w1_5m[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_1M
//==========================================================
GLOBAL const U8 reg_main_jpeg_1m[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_VGA
//==========================================================
GLOBAL const U8 reg_main_jpeg_vga[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_WQVGA
//==========================================================
GLOBAL const U8 reg_main_jpeg_wqvga[][2]
#if defined(_CAMACQ_API_C_)
={


CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

//==========================================================
// CAMERA_JPEG_output_QVGA
//==========================================================
GLOBAL const U8 reg_main_jpeg_qvga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_qvga_v[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_half_vga_v[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_half_vga[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_vga_v[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_5M[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_1080P[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_720P[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_not[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_flicker_disabled[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_flicker_50hz[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_flicker_60hz[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_flicker_auto[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_jpeg_quality_superfine[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_jpeg_quality_fine[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_jpeg_quality_normal[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA
}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_priv_ctrl_returnpreview[][2]
#if defined(_CAMACQ_API_C_)
={

CAMACQ_MAIN_BTM_OF_DATA

}
#endif /* _CAMACQ_API_C_ */
;

//BYKIM_DTP
GLOBAL const U8 reg_main_dtp_on[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00}, // 0 Page
{0x60, 0x05}, //  DTP On
CAMACQ_MAIN_BTM_OF_DATA

}
#endif /* _CAMACQ_API_C_ */
;

GLOBAL const U8 reg_main_dtp_off[][2]
#if defined(_CAMACQ_API_C_)
={
{0x03, 0x00}, // 0 Page
{0x60, 0x00}, // DTP Off
CAMACQ_MAIN_BTM_OF_DATA

}
#endif /* _CAMACQ_API_C_ */
;


#undef GLOBAL

#endif /* _CAMACQ_SR300PC20_H_ */
